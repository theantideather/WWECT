{"id":"88cfd10d4e9b914e185bbfe7b0ce93dc","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/WWEMonad.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title WWEMonad\n * @dev Smart contract for WWE wrestling game on Monad blockchain\n * Records player actions and mints championship trophies as NFTs\n */\ncontract WWEMonad is ERC1155, Ownable {\n    using Strings for uint256;\n    \n    // Constants\n    uint256 public constant CHAMPIONSHIP_TROPHY = 1;\n    uint256 private nextTokenId = 2;\n    \n    // Token URI for metadata\n    string private baseURI;\n    \n    // Mapping of player addresses to their stats\n    mapping(address => PlayerStats) public playerStats;\n    \n    // Player stats structure\n    struct PlayerStats {\n        uint256 totalMoves;\n        uint256 specialMoves;\n        uint256 grapples;\n        uint256 ropeBounces;\n        uint256 knockouts;\n        uint256 championships;\n        uint256 lastAction;\n    }\n    \n    // Event for logging player actions\n    event ActionLogged(address indexed player, string action);\n    \n    // Event for new trophy minted\n    event TrophyMinted(address indexed player, uint256 tokenId);\n    \n    /**\n     * @dev Initialize the contract with a base URI for metadata\n     */\n    constructor() ERC1155(\"\") Ownable(msg.sender) {\n        baseURI = \"ipfs://QmTrophyMetadata/\";\n    }\n    \n    /**\n     * @dev Set the base URI for token metadata\n     * @param _newBaseURI New base URI\n     */\n    function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        baseURI = _newBaseURI;\n    }\n    \n    /**\n     * @dev Get the URI for a token\n     * @param _id Token ID\n     * @return Token URI string\n     */\n    function uri(uint256 _id) public view override returns (string memory) {\n        return string(abi.encodePacked(baseURI, _id.toString(), \".json\"));\n    }\n    \n    /**\n     * @dev Log a player action\n     * @param action JSON string with action details\n     */\n    function logAction(string memory action) external {\n        // Parse action type from JSON (simplified - in production would use a proper parser)\n        bool isMove = _contains(action, \"move\");\n        bool isSpecialMove = _contains(action, \"special_move\");\n        bool isGrapple = _contains(action, \"grapple\");\n        bool isRopeBounce = _contains(action, \"rope_bounce\");\n        bool isKnockout = _contains(action, \"knockout\");\n        bool isChampionship = _contains(action, \"championship\");\n        \n        // Update player stats based on action type\n        if (isMove) {\n            playerStats[msg.sender].totalMoves++;\n        } else if (isSpecialMove) {\n            playerStats[msg.sender].specialMoves++;\n        } else if (isGrapple) {\n            playerStats[msg.sender].grapples++;\n        } else if (isRopeBounce) {\n            playerStats[msg.sender].ropeBounces++;\n        } else if (isKnockout) {\n            playerStats[msg.sender].knockouts++;\n        } else if (isChampionship) {\n            playerStats[msg.sender].championships++;\n        }\n        \n        // Update last action timestamp\n        playerStats[msg.sender].lastAction = block.timestamp;\n        \n        // Emit action event\n        emit ActionLogged(msg.sender, action);\n    }\n    \n    /**\n     * @dev Mint a championship trophy for a player\n     * @param winner Address of the championship winner\n     */\n    function mintTrophy(address winner) external {\n        // Only the contract owner or the player themselves can mint their trophy\n        require(msg.sender == owner() || msg.sender == winner, \"Not authorized to mint trophy\");\n        \n        // Mint a championship trophy\n        _mint(winner, CHAMPIONSHIP_TROPHY, 1, \"\");\n        \n        // Increment player's championship count\n        playerStats[winner].championships++;\n        \n        // Emit trophy minted event\n        emit TrophyMinted(winner, CHAMPIONSHIP_TROPHY);\n    }\n    \n    /**\n     * @dev Mint a new type of trophy (only owner)\n     * @param to Recipient address\n     * @param amount Number of tokens to mint\n     */\n    function mintNewTrophy(address to, uint256 amount) external onlyOwner {\n        uint256 tokenId = nextTokenId;\n        nextTokenId++;\n        \n        _mint(to, tokenId, amount, \"\");\n        \n        // Emit trophy minted event\n        emit TrophyMinted(to, tokenId);\n    }\n    \n    /**\n     * @dev Get all stats for a player\n     * @param player Address of the player\n     * @return PlayerStats structure with all player stats\n     */\n    function getPlayerStats(address player) external view returns (PlayerStats memory) {\n        return playerStats[player];\n    }\n    \n    /**\n     * @dev Simple helper to check if a string contains a substring\n     * @param source Source string\n     * @param searchFor String to search for\n     * @return True if the source contains the search string\n     */\n    function _contains(string memory source, string memory searchFor) private pure returns (bool) {\n        bytes memory sourceBytes = bytes(source);\n        bytes memory searchBytes = bytes(searchFor);\n        \n        // If search string is longer than source, it cannot be contained\n        if (searchBytes.length > sourceBytes.length) {\n            return false;\n        }\n        \n        // Simple naive search algorithm\n        for (uint i = 0; i <= sourceBytes.length - searchBytes.length; i++) {\n            bool found = true;\n            for (uint j = 0; j < searchBytes.length; j++) {\n                if (sourceBytes[i + j] != searchBytes[j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        \n        return false;\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2476],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2477,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2476],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[2414],"Context":[2476],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[4006],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[4018]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1325,"src":"135:40:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1383,"src":"176:73:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"184:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1537,"src":"250:54:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"258:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":2477,"src":"305:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"313:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":4007,"src":"354:69:2","symbolAliases":[{"foreign":{"id":295,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"362:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":296,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"371:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":2415,"src":"424:46:2","symbolAliases":[{"foreign":{"id":298,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"432:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":285,"src":"471:67:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"479:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["754:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2476,"src":"754:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"754:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["763:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4006,"src":"763:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"763:6:2"},{"baseName":{"id":307,"name":"IERC1155","nameLocations":["771:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"771:8:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"771:8:2"},{"baseName":{"id":309,"name":"IERC1155MetadataURI","nameLocations":["781:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1382,"src":"781:19:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"781:19:2"},{"baseName":{"id":311,"name":"IERC1155Errors","nameLocations":["802:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"802:14:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"802:14:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"540:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201,284,1382,1324,4006,4018,2476],"name":"ERC1155","nameLocation":"743:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":316,"libraryName":{"id":313,"name":"Arrays","nameLocations":["829:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"829:6:2"},"nodeType":"UsingForDirective","src":"823:27:2","typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":320,"libraryName":{"id":317,"name":"Arrays","nameLocations":["861:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"861:6:2"},"nodeType":"UsingForDirective","src":"855:27:2","typeName":{"baseType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ArrayTypeName","src":"872:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":326,"mutability":"mutable","name":"_balances","nameLocation":"955:9:2","nodeType":"VariableDeclaration","scope":1201,"src":"888:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":325,"keyName":"id","keyNameLocation":"904:2:2","keyType":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":324,"keyName":"account","keyNameLocation":"926:7:2","keyType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:2","nodeType":"VariableDeclaration","scope":1201,"src":"971:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"987:7:2","keyType":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"keyName":"operator","keyNameLocation":"1014:8:2","keyType":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:2","nodeType":"VariableDeclaration","scope":1201,"src":"1180:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":344,"nodeType":"Block","src":"1281:30:2","statements":[{"expression":{"arguments":[{"id":341,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1299:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":340,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"1291:13:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"1206:38:2","text":" @dev See {_setURI}."},"id":345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:2","nodeType":"VariableDeclaration","scope":345,"src":"1261:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:2"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"1281:0:2"},"scope":1201,"src":"1249:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4005,4017],"body":{"id":375,"nodeType":"Block","src":"1486:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1515:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":358,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1535:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}],"id":357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1530:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1324","typeString":"type(contract IERC1155)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1572:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":364,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"1592:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1587:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1382","typeString":"type(contract IERC1155MetadataURI)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1664:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":369,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1640:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1201_$","typeString":"type(contract super ERC1155)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4005,"src":"1640:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":374,"nodeType":"Return","src":"1496:180:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1317:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:2","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[{"id":350,"name":"ERC165","nameLocations":["1454:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4006,"src":"1454:6:2"},{"id":351,"name":"IERC165","nameLocations":["1462:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4018,"src":"1462:7:2"}],"src":"1445:25:2"},"parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:2","nodeType":"VariableDeclaration","scope":376,"src":"1405:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1480:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:2"},"scope":1201,"src":"1378:305:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1381],"body":{"id":386,"nodeType":"Block","src":"2157:28:2","statements":[{"expression":{"id":384,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2174:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2167:11:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1689:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2095:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2142:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:2"},"scope":1201,"src":"2082:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1262],"body":{"id":403,"nodeType":"Block","src":"2331:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":397,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2348:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":399,"indexExpression":{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2358:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2362:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":402,"nodeType":"Return","src":"2341:29:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2191:49:2","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"2272:7:2","nodeType":"VariableDeclaration","scope":404,"src":"2264:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"id","nameLocation":"2289:2:2","nodeType":"VariableDeclaration","scope":404,"src":"2281:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2322:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:2"},"scope":1201,"src":"2245:132:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":473,"nodeType":"Block","src":"2676:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":417,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2690:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:2","memberName":"length","nodeType":"MemberAccess","src":"2690:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":419,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2709:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:2","memberName":"length","nodeType":"MemberAccess","src":"2709:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"2686:121:2","trueBody":{"id":429,"nodeType":"Block","src":"2721:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":423,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2768:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:2","memberName":"length","nodeType":"MemberAccess","src":"2768:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":425,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2780:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:2","memberName":"length","nodeType":"MemberAccess","src":"2780:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2742:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"2735:61:2"}]}},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:2","nodeType":"VariableDeclaration","scope":473,"src":"2817:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2817:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"id":439,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2864:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:2","memberName":"length","nodeType":"MemberAccess","src":"2864:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2854:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:2"},{"body":{"id":469,"nodeType":"Block","src":"2937:112:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2951:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"indexExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2965:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3008:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":458,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2980:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2354,"src":"2980:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3035:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":462,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3012:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"3012:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2970:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"2951:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2911:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":448,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2915:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:2","memberName":"length","nodeType":"MemberAccess","src":"2915:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2904:1:2","nodeType":"VariableDeclaration","scope":470,"src":"2896:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:2"},"loopExpression":{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:2","subExpression":{"id":451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2934:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2932:3:2"},"nodeType":"ForStatement","src":"2891:158:2"},{"expression":{"id":471,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3066:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":416,"id":472,"nodeType":"Return","src":"3059:20:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2383:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:2","nodeType":"VariableDeclaration","scope":474,"src":"2567:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ArrayTypeName","src":"2567:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"ids","nameLocation":"2619:3:2","nodeType":"VariableDeclaration","scope":474,"src":"2602:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ArrayTypeName","src":"2602:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2658:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"2658:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:2"},"scope":1201,"src":"2534:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":489,"nodeType":"Block","src":"3229:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3258:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3272:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3282:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":482,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3239:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3239:52:2"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3092:57:2","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"operator","nameLocation":"3189:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3181:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"approved","nameLocation":"3204:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3199:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3229:0:2"},"scope":1201,"src":"3154:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1293],"body":{"id":506,"nodeType":"Block","src":"3461:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":500,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3478:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3497:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":504,"indexExpression":{"id":503,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3506:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"3471:44:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3304:56:2","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"3399:7:2","nodeType":"VariableDeclaration","scope":507,"src":"3391:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"operator","nameLocation":"3416:8:2","nodeType":"VariableDeclaration","scope":507,"src":"3408:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"3455:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:2"},"scope":1201,"src":"3365:157:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":550,"nodeType":"Block","src":"3702:238:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"3720:6:2","nodeType":"VariableDeclaration","scope":550,"src":"3712:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":523,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3729:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3755:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3763:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:2","subExpression":{"arguments":[{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3791:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3797:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3774:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"3751:129:2","trueBody":{"id":540,"nodeType":"Block","src":"3806:74:2","statements":[{"errorCall":{"arguments":[{"id":536,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3856:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3864:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3827:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"RevertStatement","src":"3820:49:2"}]}},{"expression":{"arguments":[{"id":543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3907:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3913:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3917:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3921:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3928:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":542,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3889:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3889:44:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"3528:56:2","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"3623:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3615:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3637:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3629:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"3649:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3641:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"3661:5:2","nodeType":"VariableDeclaration","scope":551,"src":"3653:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"data","nameLocation":"3681:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3668:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3702:0:2"},"scope":1201,"src":"3589:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":596,"nodeType":"Block","src":"4196:245:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"sender","nameLocation":"4214:6:2","nodeType":"VariableDeclaration","scope":596,"src":"4206:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4223:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4249:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4257:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:2","subExpression":{"arguments":[{"id":576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4291:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4268:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"4245:129:2","trueBody":{"id":586,"nodeType":"Block","src":"4300:74:2","statements":[{"errorCall":{"arguments":[{"id":582,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4350:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4358:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4321:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"RevertStatement","src":"4314:49:2"}]}},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4406:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4412:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4416:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":592,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4421:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4429:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"4383:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4383:51:2"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"3946:61:2","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:2","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"from","nameLocation":"4060:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4052:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"to","nameLocation":"4082:2:2","nodeType":"VariableDeclaration","scope":597,"src":"4074:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"ids","nameLocation":"4111:3:2","nodeType":"VariableDeclaration","scope":597,"src":"4094:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ArrayTypeName","src":"4094:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"values","nameLocation":"4141:6:2","nodeType":"VariableDeclaration","scope":597,"src":"4124:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"nodeType":"ArrayTypeName","src":"4124:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"4170:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4157:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"4196:0:2"},"scope":1201,"src":"4012:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"5249:1174:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5263:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:2","memberName":"length","nodeType":"MemberAccess","src":"5263:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":613,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5277:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:2","memberName":"length","nodeType":"MemberAccess","src":"5277:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"5259:117:2","trueBody":{"id":623,"nodeType":"Block","src":"5292:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":617,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5339:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:2","memberName":"length","nodeType":"MemberAccess","src":"5339:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":619,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5351:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:2","memberName":"length","nodeType":"MemberAccess","src":"5351:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5313:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"RevertStatement","src":"5306:59:2"}]}},{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"5394:8:2","nodeType":"VariableDeclaration","scope":749,"src":"5386:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5405:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:2"},{"body":{"id":710,"nodeType":"Block","src":"5469:650:2","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"5491:2:2","nodeType":"VariableDeclaration","scope":710,"src":"5483:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5519:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5496:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"5496:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:2"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"5543:5:2","nodeType":"VariableDeclaration","scope":710,"src":"5535:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5577:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5551:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"5551:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5598:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:2","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"5594:420:2","trueBody":{"id":692,"nodeType":"Block","src":"5618:396:2","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:2","nodeType":"VariableDeclaration","scope":692,"src":"5636:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5658:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":665,"indexExpression":{"id":664,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5668:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5672:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5699:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5713:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"5695:129:2","trueBody":{"id":679,"nodeType":"Block","src":"5720:104:2","statements":[{"errorCall":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5776:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5782:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5795:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":676,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5802:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5749:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"RevertStatement","src":"5742:63:2"}]}},{"id":691,"nodeType":"UncheckedBlock","src":"5841:159:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5940:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":684,"indexExpression":{"id":682,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5950:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5954:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5962:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5976:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"5940:41:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6032:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"6028:81:2","trueBody":{"id":708,"nodeType":"Block","src":"6050:59:2","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6068:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":703,"indexExpression":{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6078:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":704,"indexExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6082:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"6068:26:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5448:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5452:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:2","memberName":"length","nodeType":"MemberAccess","src":"5452:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"initializationExpression":{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"i","nameLocation":"5441:1:2","nodeType":"VariableDeclaration","scope":711,"src":"5433:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:2"},"loopExpression":{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:2","subExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5466:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"5464:3:2"},"nodeType":"ForStatement","src":"5428:691:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6133:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:2","memberName":"length","nodeType":"MemberAccess","src":"6133:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":747,"nodeType":"Block","src":"6341:76:2","statements":[{"eventCall":{"arguments":[{"id":740,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6374:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6384:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6390:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6394:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":744,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6399:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":739,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6360:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"6355:51:2"}]},"id":748,"nodeType":"IfStatement","src":"6129:288:2","trueBody":{"id":738,"nodeType":"Block","src":"6150:185:2","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"id","nameLocation":"6172:2:2","nodeType":"VariableDeclaration","scope":738,"src":"6164:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6177:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"6177:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:2"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"6224:5:2","nodeType":"VariableDeclaration","scope":738,"src":"6216:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":725,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6232:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"6232:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:2"},{"eventCall":{"arguments":[{"id":731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6294:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6304:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6310:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6314:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6318:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6279:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"EmitStatement","src":"6274:50:2"}]}}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4447:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5167:4:2","nodeType":"VariableDeclaration","scope":750,"src":"5159:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5181:2:2","nodeType":"VariableDeclaration","scope":750,"src":"5173:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"ids","nameLocation":"5202:3:2","nodeType":"VariableDeclaration","scope":750,"src":"5185:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"5185:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"values","nameLocation":"5224:6:2","nodeType":"VariableDeclaration","scope":750,"src":"5207:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ArrayTypeName","src":"5207:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5249:0:2"},"scope":1201,"src":"5142:1281:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"7193:509:2","statements":[{"expression":{"arguments":[{"id":767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7211:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7217:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7221:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":770,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7226:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":766,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7203:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"7203:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7247:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"IfStatement","src":"7243:453:2","trueBody":{"id":827,"nodeType":"Block","src":"7265:431:2","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"7287:8:2","nodeType":"VariableDeclaration","scope":827,"src":"7279:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"7298:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":784,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7328:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:2","memberName":"length","nodeType":"MemberAccess","src":"7328:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":825,"nodeType":"Block","src":"7574:112:2","statements":[{"expression":{"arguments":[{"id":817,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7633:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7643:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7649:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7653:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":821,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7658:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7666:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":814,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7592:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:2","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"7592:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"7592:79:2"}]},"id":826,"nodeType":"IfStatement","src":"7324:362:2","trueBody":{"id":813,"nodeType":"Block","src":"7345:223:2","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"id","nameLocation":"7371:2:2","nodeType":"VariableDeclaration","scope":813,"src":"7363:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"initialValue":{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":790,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7376:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"7376:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:2"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"value","nameLocation":"7427:5:2","nodeType":"VariableDeclaration","scope":813,"src":"7419:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":797,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7435:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"7435:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:2"},{"expression":{"arguments":[{"id":805,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7517:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7527:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7533:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7537:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7541:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7548:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":802,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7481:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:2","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"7481:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"7481:72:2"}]}}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"6429:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"7055:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7047:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"7077:2:2","nodeType":"VariableDeclaration","scope":830,"src":"7069:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"ids","nameLocation":"7106:3:2","nodeType":"VariableDeclaration","scope":830,"src":"7089:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ArrayTypeName","src":"7089:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"values","nameLocation":"7136:6:2","nodeType":"VariableDeclaration","scope":830,"src":"7119:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ArrayTypeName","src":"7119:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"data","nameLocation":"7165:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7152:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7193:0:2"},"scope":1201,"src":"7002:700:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"8267:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8281:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:2","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"8277:88:2","trueBody":{"id":857,"nodeType":"Block","src":"8299:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:2","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8320:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"RevertStatement","src":"8313:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8378:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:2","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":873,"nodeType":"IfStatement","src":"8374:88:2","trueBody":{"id":872,"nodeType":"Block","src":"8398:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:2","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8419:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"RevertStatement","src":"8412:39:2"}]}},{"assignments":[878,881],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"ids","nameLocation":"8489:3:2","nodeType":"VariableDeclaration","scope":895,"src":"8472:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"8472:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"values","nameLocation":"8511:6:2","nodeType":"VariableDeclaration","scope":895,"src":"8494:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":880,"nodeType":"ArrayTypeName","src":"8494:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"id":883,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8540:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"8544:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":882,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8521:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:2"},{"expression":{"arguments":[{"id":888,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8587:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8593:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"8597:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":891,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8602:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":892,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"8610:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8560:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"8560:55:2"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"7708:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:2","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"from","nameLocation":"8194:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8186:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"to","nameLocation":"8208:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8200:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"id","nameLocation":"8220:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8212:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"8232:5:2","nodeType":"VariableDeclaration","scope":896,"src":"8224:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"data","nameLocation":"8252:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8239:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:2"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"8267:0:2"},"scope":1201,"src":"8159:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"9202:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9216:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:2","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"9212:88:2","trueBody":{"id":925,"nodeType":"Block","src":"9234:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:2","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9255:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"RevertStatement","src":"9248:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9313:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:2","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"IfStatement","src":"9309:88:2","trueBody":{"id":940,"nodeType":"Block","src":"9333:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:2","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9354:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"RevertStatement","src":"9347:39:2"}]}},{"expression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9433:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9439:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"9443:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":946,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9448:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9456:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"9406:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9406:55:2"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"8628:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"from","nameLocation":"9072:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9064:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"9094:2:2","nodeType":"VariableDeclaration","scope":951,"src":"9086:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"ids","nameLocation":"9123:3:2","nodeType":"VariableDeclaration","scope":951,"src":"9106:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ArrayTypeName","src":"9106:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"values","nameLocation":"9153:6:2","nodeType":"VariableDeclaration","scope":951,"src":"9136:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"nodeType":"ArrayTypeName","src":"9136:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"data","nameLocation":"9182:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9169:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"9202:0:2"},"scope":1201,"src":"9023:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"10346:30:2","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"10356:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":958,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10363:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":960,"nodeType":"ExpressionStatement","src":"10356:13:2"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"9474:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:2","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:2","nodeType":"VariableDeclaration","scope":962,"src":"10307:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:2"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"10346:0:2"},"scope":1201,"src":"10290:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"10836:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10850:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:2","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"IfStatement","src":"10846:88:2","trueBody":{"id":987,"nodeType":"Block","src":"10868:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:2","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10889:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"RevertStatement","src":"10882:41:2"}]}},{"assignments":[993,996],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"ids","nameLocation":"10961:3:2","nodeType":"VariableDeclaration","scope":1013,"src":"10944:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ArrayTypeName","src":"10944:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"values","nameLocation":"10983:6:2","nodeType":"VariableDeclaration","scope":1013,"src":"10966:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ArrayTypeName","src":"10966:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[{"id":998,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11012:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11016:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10993:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:2","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11071:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"11075:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1009,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11080:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1010,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"11088:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1002,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11032:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"11032:61:2"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"10382:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:2","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"to","nameLocation":"10777:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10769:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"id","nameLocation":"10789:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10781:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"value","nameLocation":"10801:5:2","nodeType":"VariableDeclaration","scope":1014,"src":"10793:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"data","nameLocation":"10821:4:2","nodeType":"VariableDeclaration","scope":1014,"src":"10808:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:2"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"10836:0:2"},"scope":1201,"src":"10754:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"11638:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11652:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:2","typeDescriptions":{}}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1042,"nodeType":"IfStatement","src":"11648:88:2","trueBody":{"id":1041,"nodeType":"Block","src":"11670:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:2","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11691:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"RevertStatement","src":"11684:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:2","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11784:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"11788:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1050,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"11793:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1051,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11801:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11745:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"11745:61:2"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"11106:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:2","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"to","nameLocation":"11559:2:2","nodeType":"VariableDeclaration","scope":1055,"src":"11551:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"ids","nameLocation":"11580:3:2","nodeType":"VariableDeclaration","scope":1055,"src":"11563:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ArrayTypeName","src":"11563:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"values","nameLocation":"11602:6:2","nodeType":"VariableDeclaration","scope":1055,"src":"11585:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1022,"nodeType":"ArrayTypeName","src":"11585:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"data","nameLocation":"11623:4:2","nodeType":"VariableDeclaration","scope":1055,"src":"11610:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1024,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:2"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"11638:0:2"},"scope":1201,"src":"11531:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"12172:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:2","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"12182:88:2","trueBody":{"id":1078,"nodeType":"Block","src":"12206:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:2","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12227:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"RevertStatement","src":"12220:39:2"}]}},{"assignments":[1084,1087],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"ids","nameLocation":"12297:3:2","nodeType":"VariableDeclaration","scope":1104,"src":"12280:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ArrayTypeName","src":"12280:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"values","nameLocation":"12319:6:2","nodeType":"VariableDeclaration","scope":1104,"src":"12302:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ArrayTypeName","src":"12302:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"id":1089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12348:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12352:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12329:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:2"},{"expression":{"arguments":[{"id":1094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12395:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:2","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12413:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1100,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12418:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1093,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12368:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"12368:61:2"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"11819:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:2","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"from","nameLocation":"12130:4:2","nodeType":"VariableDeclaration","scope":1105,"src":"12122:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"id","nameLocation":"12144:2:2","nodeType":"VariableDeclaration","scope":1105,"src":"12136:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"value","nameLocation":"12156:5:2","nodeType":"VariableDeclaration","scope":1105,"src":"12148:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:2"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"12172:0:2"},"scope":1201,"src":"12107:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"12882:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12896:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:2","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"12892:88:2","trueBody":{"id":1130,"nodeType":"Block","src":"12916:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:2","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1123,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12937:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"RevertStatement","src":"12930:39:2"}]}},{"expression":{"arguments":[{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13016:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:2","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13034:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1139,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"13039:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1132,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12989:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"12989:61:2"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"12442:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:2","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"from","nameLocation":"12820:4:2","nodeType":"VariableDeclaration","scope":1144,"src":"12812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"ids","nameLocation":"12843:3:2","nodeType":"VariableDeclaration","scope":1144,"src":"12826:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ArrayTypeName","src":"12826:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"values","nameLocation":"12865:6:2","nodeType":"VariableDeclaration","scope":1144,"src":"12848:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1113,"nodeType":"ArrayTypeName","src":"12848:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:2"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"12882:0:2"},"scope":1201,"src":"12792:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"13369:222:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13383:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:2","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"13379:94:2","trueBody":{"id":1167,"nodeType":"Block","src":"13407:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1160,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"13428:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"RevertStatement","src":"13421:41:2"}]}},{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1169,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13482:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1172,"indexExpression":{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13501:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1173,"indexExpression":{"id":1171,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13508:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1174,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13520:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1176,"nodeType":"ExpressionStatement","src":"13482:46:2"},{"eventCall":{"arguments":[{"id":1178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13558:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13565:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13575:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1177,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"13543:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"EmitStatement","src":"13538:46:2"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"13063:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:2","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"owner","nameLocation":"13312:5:2","nodeType":"VariableDeclaration","scope":1184,"src":"13304:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"operator","nameLocation":"13327:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13319:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"approved","nameLocation":"13342:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13337:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:2"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"13369:0:2"},"scope":1201,"src":"13276:315:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"13865:664:2","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:2","statements":[{"nodeType":"YulAssignment","src":"13958:21:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:2"},"nodeType":"YulFunctionCall","src":"13968:11:2"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:2"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:2"},"nodeType":"YulFunctionCall","src":"14029:17:2"},"nodeType":"YulExpressionStatement","src":"14029:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:2"},"nodeType":"YulFunctionCall","src":"14163:17:2"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:2"},"nodeType":"YulFunctionCall","src":"14156:35:2"},"nodeType":"YulExpressionStatement","src":"14156:35:2"},{"nodeType":"YulAssignment","src":"14282:27:2","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:2"},"nodeType":"YulFunctionCall","src":"14292:17:2"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:2"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:2"},"nodeType":"YulFunctionCall","src":"14322:17:2"},"nodeType":"YulExpressionStatement","src":"14322:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:2"},"nodeType":"YulFunctionCall","src":"14359:17:2"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:2"},"nodeType":"YulFunctionCall","src":"14352:35:2"},"nodeType":"YulExpressionStatement","src":"14352:35:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:2"},"nodeType":"YulFunctionCall","src":"14495:17:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:2"},"nodeType":"YulFunctionCall","src":"14482:31:2"},"nodeType":"YulExpressionStatement","src":"14482:31:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1193,"isOffset":false,"isSlot":false,"src":"13958:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14036:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14167:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14296:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14282:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14329:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14363:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14499:6:2","valueSize":1},{"declaration":1187,"isOffset":false,"isSlot":false,"src":"14182:8:2","valueSize":1},{"declaration":1189,"isOffset":false,"isSlot":false,"src":"14378:8:2","valueSize":1}],"flags":["memory-safe"],"id":1198,"nodeType":"InlineAssembly","src":"13875:648:2"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"13597:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:2","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"element1","nameLocation":"13752:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"element2","nameLocation":"13778:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13770:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:2"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"array1","nameLocation":"13832:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13815:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ArrayTypeName","src":"13815:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"array2","nameLocation":"13857:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13840:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1195,"nodeType":"ArrayTypeName","src":"13840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:2"},"scope":1201,"src":"13707:822:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1202,"src":"725:13806:2","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1221,1236,1245,1252]}],"src":"109:14423:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1324],"IERC165":[4018]},"id":1325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1325,"sourceUnit":4019,"src":"136:62:3","symbolAliases":[{"foreign":{"id":1204,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"144:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1207,"name":"IERC165","nameLocations":["359:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4018,"src":"359:7:3"},"id":1208,"nodeType":"InheritanceSpecifier","src":"359:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"200:136:3","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1324,"linearizedBaseContracts":[1324,4018],"name":"IERC1155","nameLocation":"347:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"373:125:3","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1221,"name":"TransferSingle","nameLocation":"509:14:3","nodeType":"EventDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:3","nodeType":"VariableDeclaration","scope":1221,"src":"524:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:3","nodeType":"VariableDeclaration","scope":1221,"src":"550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"572:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"592:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":1221,"src":"604:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:3"},"src":"503:116:3"},{"anonymous":false,"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"625:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1236,"name":"TransferBatch","nameLocation":"780:13:3","nodeType":"EventDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:3","nodeType":"VariableDeclaration","scope":1236,"src":"803:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1226,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:3","nodeType":"VariableDeclaration","scope":1236,"src":"837:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:3","nodeType":"VariableDeclaration","scope":1236,"src":"867:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:3","nodeType":"VariableDeclaration","scope":1236,"src":"895:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1230,"nodeType":"ArrayTypeName","src":"895:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:3","nodeType":"VariableDeclaration","scope":1236,"src":"918:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ArrayTypeName","src":"918:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:3"},"src":"774:167:3"},{"anonymous":false,"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"947:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1245,"name":"ApprovalForAll","nameLocation":"1105:14:3","nodeType":"EventDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:3","nodeType":"VariableDeclaration","scope":1245,"src":"1120:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1145:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1242,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:3"},"src":"1099:87:3"},{"anonymous":false,"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1192:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1252,"name":"URI","nameLocation":"1546:3:3","nodeType":"EventDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:3","nodeType":"VariableDeclaration","scope":1252,"src":"1550:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:3","nodeType":"VariableDeclaration","scope":1252,"src":"1564:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:3"},"src":"1540:44:3"},{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1590:90:3","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:3","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"account","nameLocation":"1712:7:3","nodeType":"VariableDeclaration","scope":1262,"src":"1704:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"id","nameLocation":"1729:2:3","nodeType":"VariableDeclaration","scope":1262,"src":"1721:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:3"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"1756:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:3"},"scope":1324,"src":"1685:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1771:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:3","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"1997:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1265,"nodeType":"ArrayTypeName","src":"1997:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"ids","nameLocation":"2053:3:3","nodeType":"VariableDeclaration","scope":1275,"src":"2034:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ArrayTypeName","src":"2034:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:3"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2086:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ArrayTypeName","src":"2086:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:3"},"scope":1324,"src":"1964:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2110:254:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:3","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"operator","nameLocation":"2404:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2396:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"approved","nameLocation":"2419:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2414:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"2437:0:3"},"scope":1324,"src":"2369:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"2444:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1293,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:3","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nameLocation":"2618:7:3","nodeType":"VariableDeclaration","scope":1293,"src":"2610:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"operator","nameLocation":"2635:8:3","nodeType":"VariableDeclaration","scope":1293,"src":"2627:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:3"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"2668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:3"},"scope":1324,"src":"2584:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"2680:910:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:3","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"from","nameLocation":"3629:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3621:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"to","nameLocation":"3643:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3635:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"id","nameLocation":"3655:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3647:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"3667:5:3","nodeType":"VariableDeclaration","scope":1307,"src":"3659:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"data","nameLocation":"3689:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3674:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:3"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"3703:0:3"},"scope":1324,"src":"3595:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"3710:814:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"from","nameLocation":"4577:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4569:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"to","nameLocation":"4599:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"4591:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"ids","nameLocation":"4630:3:3","nodeType":"VariableDeclaration","scope":1323,"src":"4611:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"4611:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"values","nameLocation":"4662:6:3","nodeType":"VariableDeclaration","scope":1323,"src":"4643:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"4643:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"data","nameLocation":"4693:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4678:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"4712:0:3"},"scope":1324,"src":"4529:184:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1325,"src":"337:4378:3","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"110:4606:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1366],"IERC165":[4018]},"id":1367,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1326,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1367,"sourceUnit":4019,"src":"144:62:4","symbolAliases":[{"foreign":{"id":1327,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"152:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1330,"name":"IERC165","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4018,"src":"357:7:4"},"id":1331,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"208:118:4","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1366,"linearizedBaseContracts":[1366,4018],"name":"IERC1155Receiver","nameLocation":"337:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"371:827:4","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:4","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"1247:8:4","nodeType":"VariableDeclaration","scope":1347,"src":"1239:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"from","nameLocation":"1273:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1265:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"id","nameLocation":"1295:2:4","nodeType":"VariableDeclaration","scope":1347,"src":"1287:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"value","nameLocation":"1315:5:4","nodeType":"VariableDeclaration","scope":1347,"src":"1307:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"1345:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1330:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:4"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"1374:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:4"},"scope":1366,"src":"1203:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1388:995:4","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"operator","nameLocation":"2437:8:4","nodeType":"VariableDeclaration","scope":1365,"src":"2429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"from","nameLocation":"2463:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2455:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"ids","nameLocation":"2496:3:4","nodeType":"VariableDeclaration","scope":1365,"src":"2477:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ArrayTypeName","src":"2477:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"values","nameLocation":"2528:6:4","nodeType":"VariableDeclaration","scope":1365,"src":"2509:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"nodeType":"ArrayTypeName","src":"2509:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"data","nameLocation":"2559:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2544:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:4"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"2588:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1362,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:4"},"scope":1366,"src":"2388:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1367,"src":"327:2271:4","usedErrors":[],"usedEvents":[]}],"src":"118:2481:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1324],"IERC1155MetadataURI":[1382]},"id":1383,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1368,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1383,"sourceUnit":1325,"src":"158:41:5","symbolAliases":[{"foreign":{"id":1369,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"166:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1372,"name":"IERC1155","nameLocations":["399:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"399:8:5"},"id":1373,"nodeType":"InheritanceSpecifier","src":"399:8:5"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"201:164:5","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1382,"linearizedBaseContracts":[1382,1324,4018],"name":"IERC1155MetadataURI","nameLocation":"376:19:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"414:192:5","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:5","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"id","nameLocation":"632:2:5","nodeType":"VariableDeclaration","scope":1381,"src":"624:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:5"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"659:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1378,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:5"},"scope":1382,"src":"611:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1383,"src":"366:310:5","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"132:545:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1536],"IERC1155Errors":[284],"IERC1155Receiver":[1366]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1384,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":1367,"src":"146:57:6","symbolAliases":[{"foreign":{"id":1385,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"154:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":285,"src":"204:70:6","symbolAliases":[{"foreign":{"id":1387,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"212:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"276:162:6","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536],"name":"ERC1155Utils","nameLocation":"447:12:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1460,"nodeType":"Block","src":"1183:774:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1197:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:6","memberName":"code","nodeType":"MemberAccess","src":"1197:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:6","memberName":"length","nodeType":"MemberAccess","src":"1197:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"1193:758:6","trueBody":{"id":1458,"nodeType":"Block","src":"1217:734:6","statements":[{"clauses":[{"block":{"id":1436,"nodeType":"Block","src":"1333:221:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1423,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1355:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1424,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1367:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1367:34:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"1351:189:6","trueBody":{"id":1434,"nodeType":"Block","src":"1412:128:6","statements":[{"errorCall":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1518:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1428,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1480:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1480:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"RevertStatement","src":"1473:48:6"}]}}]},"errorName":"","id":1437,"nodeType":"TryCatchClause","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"response","nameLocation":"1323:8:6","nodeType":"VariableDeclaration","scope":1437,"src":"1316:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1420,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:6"},"src":"1307:247:6"},{"block":{"id":1455,"nodeType":"Block","src":"1583:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1441,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1605:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:6","memberName":"length","nodeType":"MemberAccess","src":"1605:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1453,"nodeType":"Block","src":"1776:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1823:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1860:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1864:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1856:3:6"},"nodeType":"YulFunctionCall","src":"1856:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1879:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1873:5:6"},"nodeType":"YulFunctionCall","src":"1873:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1849:6:6"},"nodeType":"YulFunctionCall","src":"1849:38:6"},"nodeType":"YulExpressionStatement","src":"1849:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1864:6:6","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1879:6:6","valueSize":1}],"flags":["memory-safe"],"id":1452,"nodeType":"InlineAssembly","src":"1798:111:6"}]},"id":1454,"nodeType":"IfStatement","src":"1601:326:6","trueBody":{"id":1451,"nodeType":"Block","src":"1625:145:6","statements":[{"errorCall":{"arguments":[{"id":1448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1748:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1445,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1710:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1710:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"RevertStatement","src":"1703:48:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"reason","nameLocation":"1575:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1562:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1438,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:6"},"src":"1555:386:6"}],"externalCall":{"arguments":[{"id":1414,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1274:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1284:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1290:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"1294:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1418,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1301:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1252:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1235:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1235:38:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1457,"nodeType":"TryStatement","src":"1231:710:6"}]}}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"466:527:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:6","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"operator","nameLocation":"1047:8:6","nodeType":"VariableDeclaration","scope":1461,"src":"1039:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"from","nameLocation":"1073:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1065:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"1095:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1087:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"id","nameLocation":"1115:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1107:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"1135:5:6","nodeType":"VariableDeclaration","scope":1461,"src":"1127:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"1163:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1150:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:6"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"1183:0:6"},"scope":1536,"src":"998:959:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"2715:816:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2729:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:6","memberName":"code","nodeType":"MemberAccess","src":"2729:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:6","memberName":"length","nodeType":"MemberAccess","src":"2729:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"2725:800:6","trueBody":{"id":1532,"nodeType":"Block","src":"2749:776:6","statements":[{"clauses":[{"block":{"id":1510,"nodeType":"Block","src":"2902:226:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2924:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1498,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2936:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2936:39:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"2920:194:6","trueBody":{"id":1508,"nodeType":"Block","src":"2986:128:6","statements":[{"errorCall":{"arguments":[{"id":1505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3092:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1502,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3054:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3054:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"RevertStatement","src":"3047:48:6"}]}}]},"errorName":"","id":1511,"nodeType":"TryCatchClause","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"response","nameLocation":"2879:8:6","nodeType":"VariableDeclaration","scope":1511,"src":"2872:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:6"},"src":"2846:282:6"},{"block":{"id":1529,"nodeType":"Block","src":"3157:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1515,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3179:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:6","memberName":"length","nodeType":"MemberAccess","src":"3179:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1527,"nodeType":"Block","src":"3350:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3397:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3438:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3430:3:6"},"nodeType":"YulFunctionCall","src":"3430:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3453:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3447:5:6"},"nodeType":"YulFunctionCall","src":"3447:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3423:6:6"},"nodeType":"YulFunctionCall","src":"3423:38:6"},"nodeType":"YulExpressionStatement","src":"3423:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3438:6:6","valueSize":1},{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3453:6:6","valueSize":1}],"flags":["memory-safe"],"id":1526,"nodeType":"InlineAssembly","src":"3372:111:6"}]},"id":1528,"nodeType":"IfStatement","src":"3175:326:6","trueBody":{"id":1525,"nodeType":"Block","src":"3199:145:6","statements":[{"errorCall":{"arguments":[{"id":1522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3322:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1519,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3284:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3284:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"RevertStatement","src":"3277:48:6"}]}}]},"errorName":"","id":1530,"nodeType":"TryCatchClause","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"reason","nameLocation":"3149:6:6","nodeType":"VariableDeclaration","scope":1530,"src":"3136:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:6"},"src":"3129:386:6"}],"externalCall":{"arguments":[{"id":1488,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"2811:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2821:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2827:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1491,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2832:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2840:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2784:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1484,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2767:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2767:43:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1531,"nodeType":"TryStatement","src":"2763:752:6"}]}}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"1963:537:6","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"operator","nameLocation":"2559:8:6","nodeType":"VariableDeclaration","scope":1535,"src":"2551:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"from","nameLocation":"2585:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2577:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"to","nameLocation":"2607:2:6","nodeType":"VariableDeclaration","scope":1535,"src":"2599:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"ids","nameLocation":"2636:3:6","nodeType":"VariableDeclaration","scope":1535,"src":"2619:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ArrayTypeName","src":"2619:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"values","nameLocation":"2666:6:6","nodeType":"VariableDeclaration","scope":1535,"src":"2649:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ArrayTypeName","src":"2649:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"2695:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2682:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:6"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"2715:0:6"},"scope":1536,"src":"2505:1026:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1537,"src":"439:3094:6","usedErrors":[],"usedEvents":[]}],"src":"120:3414:6"},"id":6},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2414],"Comparators":[2446],"Math":[5624],"SlotDerivation":[2658],"StorageSlot":[2782]},"id":2415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2447,"src":"209:46:7","symbolAliases":[{"foreign":{"id":1539,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"217:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2659,"src":"256:52:7","symbolAliases":[{"foreign":{"id":1541,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"264:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2783,"src":"309:46:7","symbolAliases":[{"foreign":{"id":1543,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"317:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":5625,"src":"356:37:7","symbolAliases":[{"foreign":{"id":1545,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"364:4:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"395:63:7","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2414,"linearizedBaseContracts":[2414],"name":"Arrays","nameLocation":"467:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1550,"libraryName":{"id":1548,"name":"SlotDerivation","nameLocations":["486:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2658,"src":"486:14:7"},"nodeType":"UsingForDirective","src":"480:33:7","typeName":{"id":1549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":1553,"libraryName":{"id":1551,"name":"StorageSlot","nameLocations":["524:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2782,"src":"524:11:7"},"nodeType":"UsingForDirective","src":"518:30:7","typeName":{"id":1552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1585,"nodeType":"Block","src":"1628:83:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1575,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1656:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1574,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"1649:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1578,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1669:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1577,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"1664:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1580,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"1677:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1573,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1638:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"ExpressionStatement","src":"1638:44:7"},{"expression":{"id":1583,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1699:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1572,"id":1584,"nodeType":"Return","src":"1692:12:7"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"554:915:7","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:7","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"array","nameLocation":"1514:5:7","nodeType":"VariableDeclaration","scope":1586,"src":"1497:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"nodeType":"ArrayTypeName","src":"1497:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"comp","nameLocation":"1576:4:7","nodeType":"VariableDeclaration","scope":1586,"src":"1529:51:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1566,"nodeType":"FunctionTypeName","parameterTypes":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"1538:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"1547:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:7"},"returnParameterTypes":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"1570:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1563,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:7"},"src":"1529:51:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:7"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1586,"src":"1610:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1570,"nodeType":"ArrayTypeName","src":"1610:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:7"},"scope":2414,"src":"1474:237:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"1894:66:7","statements":[{"expression":{"arguments":[{"id":1597,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1909:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1598,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"1916:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2446_$","typeString":"type(library Comparators)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:7","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2431,"src":"1916:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1596,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"1904:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1601,"nodeType":"ExpressionStatement","src":"1904:27:7"},{"expression":{"id":1602,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1948:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1595,"id":1603,"nodeType":"Return","src":"1941:12:7"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"1717:93:7","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:7","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"array","nameLocation":"1846:5:7","nodeType":"VariableDeclaration","scope":1605,"src":"1829:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"nodeType":"ArrayTypeName","src":"1829:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:7"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"1876:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1593,"nodeType":"ArrayTypeName","src":"1876:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:7"},"scope":2414,"src":"1815:145:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"3040:97:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1627,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3075:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1626,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1862,1874],"referencedDeclaration":1862,"src":"3055:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1630,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3102:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":1629,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[1900,1926],"referencedDeclaration":1900,"src":"3083:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1625,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"3050:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1633,"nodeType":"ExpressionStatement","src":"3050:58:7"},{"expression":{"id":1634,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3125:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1624,"id":1635,"nodeType":"Return","src":"3118:12:7"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"1966:915:7","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:7","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"array","nameLocation":"2926:5:7","nodeType":"VariableDeclaration","scope":1637,"src":"2909:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1608,"nodeType":"ArrayTypeName","src":"2909:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"comp","nameLocation":"2988:4:7","nodeType":"VariableDeclaration","scope":1637,"src":"2941:51:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1618,"nodeType":"FunctionTypeName","parameterTypes":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"2950:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"2959:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:7"},"returnParameterTypes":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"2982:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1615,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:7"},"src":"2941:51:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:7"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"3022:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1622,"nodeType":"ArrayTypeName","src":"3022:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:7"},"scope":2414,"src":"2886:251:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"3320:87:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1649,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"3355:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1648,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1862,1874],"referencedDeclaration":1862,"src":"3335:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1651,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"3363:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2446_$","typeString":"type(library Comparators)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:7","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2431,"src":"3363:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1647,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"3330:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1654,"nodeType":"ExpressionStatement","src":"3330:48:7"},{"expression":{"id":1655,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"3395:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1646,"id":1656,"nodeType":"Return","src":"3388:12:7"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"3143:93:7","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:7","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"array","nameLocation":"3272:5:7","nodeType":"VariableDeclaration","scope":1658,"src":"3255:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1640,"nodeType":"ArrayTypeName","src":"3255:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:7"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"3302:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1644,"nodeType":"ArrayTypeName","src":"3302:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:7"},"scope":2414,"src":"3241:166:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1689,"nodeType":"Block","src":"4487:97:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1680,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4522:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1679,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1862,1874],"referencedDeclaration":1874,"src":"4502:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1683,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"4549:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":1682,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[1900,1926],"referencedDeclaration":1926,"src":"4530:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1678,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"4497:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1686,"nodeType":"ExpressionStatement","src":"4497:58:7"},{"expression":{"id":1687,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4572:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1677,"id":1688,"nodeType":"Return","src":"4565:12:7"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"3413:915:7","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:7","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"array","nameLocation":"4373:5:7","nodeType":"VariableDeclaration","scope":1690,"src":"4356:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1661,"nodeType":"ArrayTypeName","src":"4356:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"comp","nameLocation":"4435:4:7","nodeType":"VariableDeclaration","scope":1690,"src":"4388:51:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1671,"nodeType":"FunctionTypeName","parameterTypes":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"4397:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"4406:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:7"},"returnParameterTypes":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"4429:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1668,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:7"},"src":"4388:51:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:7"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1690,"src":"4469:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1675,"nodeType":"ArrayTypeName","src":"4469:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:7"},"scope":2414,"src":"4333:251:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"4767:87:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1702,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4802:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1701,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1862,1874],"referencedDeclaration":1874,"src":"4782:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1704,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"4810:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2446_$","typeString":"type(library Comparators)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:7","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2431,"src":"4810:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1700,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1586,1605,1637,1658,1690,1711],"referencedDeclaration":1586,"src":"4777:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1707,"nodeType":"ExpressionStatement","src":"4777:48:7"},{"expression":{"id":1708,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4842:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1699,"id":1709,"nodeType":"Return","src":"4835:12:7"}]},"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"4590:93:7","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:7","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"array","nameLocation":"4719:5:7","nodeType":"VariableDeclaration","scope":1711,"src":"4702:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1693,"nodeType":"ArrayTypeName","src":"4702:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:7"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"4749:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1697,"nodeType":"ArrayTypeName","src":"4749:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:7"},"scope":2414,"src":"4688:166:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"5470:889:7","statements":[{"id":1797,"nodeType":"UncheckedBlock","src":"5480:873:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5508:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1730,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5514:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1735,"nodeType":"IfStatement","src":"5504:31:7","trueBody":{"functionReturnParameters":1728,"id":1734,"nodeType":"Return","src":"5528:7:7"}},{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:7","nodeType":"VariableDeclaration","scope":1797,"src":"5591:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[{"id":1739,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5614:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1738,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5607:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:7"},{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"pos","nameLocation":"5715:3:7","nodeType":"VariableDeclaration","scope":1797,"src":"5707:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1745,"initialValue":{"id":1744,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5721:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:7"},{"body":{"id":1776,"nodeType":"Block","src":"5795:331:7","statements":[{"condition":{"arguments":[{"arguments":[{"id":1761,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5829:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5822:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1763,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"5834:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1759,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5817:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1775,"nodeType":"IfStatement","src":"5813:299:7","trueBody":{"id":1774,"nodeType":"Block","src":"5842:270:7","statements":[{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1765,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6046:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"6046:11:7"},{"expression":{"arguments":[{"id":1770,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6085:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1771,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"6090:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1769,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6079:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1773,"nodeType":"ExpressionStatement","src":"6079:14:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5773:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1753,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5778:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"initializationExpression":{"assignments":[1747],"declarations":[{"constant":false,"id":1747,"mutability":"mutable","name":"it","nameLocation":"5754:2:7","nodeType":"VariableDeclaration","scope":1777,"src":"5746:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1751,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5759:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:7"},"loopExpression":{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1755,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5783:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"nodeType":"ExpressionStatement","src":"5783:10:7"},"nodeType":"ForStatement","src":"5741:385:7"},{"expression":{"arguments":[{"id":1779,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"6146:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1780,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6153:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1778,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6140:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1782,"nodeType":"ExpressionStatement","src":"6140:17:7"},{"expression":{"arguments":[{"id":1784,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"6207:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1785,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6214:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1786,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"6219:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1783,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"6196:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"ExpressionStatement","src":"6196:28:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6284:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1793,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6296:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1794,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"6301:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1789,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"6273:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1796,"nodeType":"ExpressionStatement","src":"6273:33:7"}]}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"4860:491:7","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:7","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"begin","nameLocation":"5384:5:7","nodeType":"VariableDeclaration","scope":1799,"src":"5376:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"end","nameLocation":"5399:3:7","nodeType":"VariableDeclaration","scope":1799,"src":"5391:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"comp","nameLocation":"5451:4:7","nodeType":"VariableDeclaration","scope":1799,"src":"5404:51:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1725,"nodeType":"FunctionTypeName","parameterTypes":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"5413:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"5422:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:7"},"returnParameterTypes":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"5445:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1722,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:7"},"src":"5404:51:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:7"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"5470:0:7"},"scope":2414,"src":"5356:1003:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1809,"nodeType":"Block","src":"6532:88:7","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:7","statements":[{"nodeType":"YulAssignment","src":"6581:23:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:7"},"nodeType":"YulFunctionCall","src":"6588:16:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1803,"isOffset":false,"isSlot":false,"src":"6592:5:7","valueSize":1},{"declaration":1806,"isOffset":false,"isSlot":false,"src":"6581:3:7","valueSize":1}],"flags":["memory-safe"],"id":1808,"nodeType":"InlineAssembly","src":"6542:72:7"}]},"documentation":{"id":1800,"nodeType":"StructuredDocumentation","src":"6365:87:7","text":" @dev Pointer to the memory location of the first element of `array`."},"id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:7","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"array","nameLocation":"6490:5:7","nodeType":"VariableDeclaration","scope":1810,"src":"6473:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1802,"nodeType":"ArrayTypeName","src":"6473:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:7"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:7","nodeType":"VariableDeclaration","scope":1810,"src":"6519:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:7"},"scope":2414,"src":"6457:163:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1829,"nodeType":"Block","src":"6892:93:7","statements":[{"id":1828,"nodeType":"UncheckedBlock","src":"6902:77:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1820,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"6940:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1819,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"6933:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1822,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"6949:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:7","memberName":"length","nodeType":"MemberAccess","src":"6949:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1818,"id":1827,"nodeType":"Return","src":"6926:42:7"}]}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"6626:188:7","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:7","nodeType":"FunctionDefinition","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"array","nameLocation":"6850:5:7","nodeType":"VariableDeclaration","scope":1830,"src":"6833:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1813,"nodeType":"ArrayTypeName","src":"6833:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:7"},"returnParameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:7","nodeType":"VariableDeclaration","scope":1830,"src":"6879:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:7"},"scope":2414,"src":"6819:166:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1839,"nodeType":"Block","src":"7136:68:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:7","statements":[{"nodeType":"YulAssignment","src":"7169:19:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:7"},"nodeType":"YulFunctionCall","src":"7178:10:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1833,"isOffset":false,"isSlot":false,"src":"7184:3:7","valueSize":1},{"declaration":1836,"isOffset":false,"isSlot":false,"src":"7169:5:7","valueSize":1}],"id":1838,"nodeType":"InlineAssembly","src":"7146:52:7"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"6991:74:7","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:7","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:7","nodeType":"VariableDeclaration","scope":1840,"src":"7086:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:7"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"7129:5:7","nodeType":"VariableDeclaration","scope":1840,"src":"7121:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:7"},"scope":2414,"src":"7070:134:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1849,"nodeType":"Block","src":"7348:178:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:7","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:7","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:7"},"nodeType":"YulFunctionCall","src":"7395:11:7"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:7","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:7"},"nodeType":"YulFunctionCall","src":"7433:11:7"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:7","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:7"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:7"},"nodeType":"YulFunctionCall","src":"7457:20:7"},"nodeType":"YulExpressionStatement","src":"7457:20:7"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:7"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:7"},"nodeType":"YulFunctionCall","src":"7490:20:7"},"nodeType":"YulExpressionStatement","src":"7490:20:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1843,"isOffset":false,"isSlot":false,"src":"7401:4:7","valueSize":1},{"declaration":1843,"isOffset":false,"isSlot":false,"src":"7464:4:7","valueSize":1},{"declaration":1845,"isOffset":false,"isSlot":false,"src":"7439:4:7","valueSize":1},{"declaration":1845,"isOffset":false,"isSlot":false,"src":"7497:4:7","valueSize":1}],"id":1848,"nodeType":"InlineAssembly","src":"7358:162:7"}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"7210:77:7","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":1850,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:7","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:7","nodeType":"VariableDeclaration","scope":1850,"src":"7307:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:7","nodeType":"VariableDeclaration","scope":1850,"src":"7321:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:7"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[],"src":"7348:0:7"},"scope":2414,"src":"7292:234:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1861,"nodeType":"Block","src":"7713:64:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:7","statements":[{"nodeType":"YulAssignment","src":"7746:15:7","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:7"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1854,"isOffset":false,"isSlot":false,"src":"7756:5:7","valueSize":1},{"declaration":1858,"isOffset":false,"isSlot":false,"src":"7746:6:7","valueSize":1}],"id":1860,"nodeType":"InlineAssembly","src":"7723:48:7"}]},"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"7532:76:7","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:7","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"input","nameLocation":"7659:5:7","nodeType":"VariableDeclaration","scope":1862,"src":"7642:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1853,"nodeType":"ArrayTypeName","src":"7642:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:7"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"output","nameLocation":"7705:6:7","nodeType":"VariableDeclaration","scope":1862,"src":"7688:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1857,"nodeType":"ArrayTypeName","src":"7688:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:7"},"scope":2414,"src":"7613:164:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1873,"nodeType":"Block","src":"7964:64:7","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:7","statements":[{"nodeType":"YulAssignment","src":"7997:15:7","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:7"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1866,"isOffset":false,"isSlot":false,"src":"8007:5:7","valueSize":1},{"declaration":1870,"isOffset":false,"isSlot":false,"src":"7997:6:7","valueSize":1}],"id":1872,"nodeType":"InlineAssembly","src":"7974:48:7"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"7783:76:7","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":1874,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:7","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"input","nameLocation":"7910:5:7","nodeType":"VariableDeclaration","scope":1874,"src":"7893:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1865,"nodeType":"ArrayTypeName","src":"7893:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:7"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"output","nameLocation":"7956:6:7","nodeType":"VariableDeclaration","scope":1874,"src":"7939:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ArrayTypeName","src":"7939:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:7"},"scope":2414,"src":"7864:164:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1899,"nodeType":"Block","src":"8290:64:7","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:7","statements":[{"nodeType":"YulAssignment","src":"8323:15:7","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:7"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1885,"isOffset":false,"isSlot":false,"src":"8333:5:7","valueSize":1},{"declaration":1896,"isOffset":false,"isSlot":false,"src":"8323:6:7","valueSize":1}],"id":1898,"nodeType":"InlineAssembly","src":"8300:48:7"}]},"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"8034:78:7","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:7","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"input","nameLocation":"8201:5:7","nodeType":"VariableDeclaration","scope":1900,"src":"8154:52:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1884,"nodeType":"FunctionTypeName","parameterTypes":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"8163:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"8172:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:7"},"returnParameterTypes":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"8195:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1881,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:7"},"src":"8154:52:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:7"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"output","nameLocation":"8282:6:7","nodeType":"VariableDeclaration","scope":1900,"src":"8235:53:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1895,"nodeType":"FunctionTypeName","parameterTypes":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"8244:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"8253:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:7"},"returnParameterTypes":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"8276:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1892,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:7"},"src":"8235:53:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:7"},"scope":2414,"src":"8117:237:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1925,"nodeType":"Block","src":"8616:64:7","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:7","statements":[{"nodeType":"YulAssignment","src":"8649:15:7","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:7"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1911,"isOffset":false,"isSlot":false,"src":"8659:5:7","valueSize":1},{"declaration":1922,"isOffset":false,"isSlot":false,"src":"8649:6:7","valueSize":1}],"id":1924,"nodeType":"InlineAssembly","src":"8626:48:7"}]},"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"8360:78:7","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:7","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"input","nameLocation":"8527:5:7","nodeType":"VariableDeclaration","scope":1926,"src":"8480:52:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1910,"nodeType":"FunctionTypeName","parameterTypes":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"8489:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"8498:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:7"},"returnParameterTypes":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"8521:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1907,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:7"},"src":"8480:52:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:7"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"output","nameLocation":"8608:6:7","nodeType":"VariableDeclaration","scope":1926,"src":"8561:53:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1921,"nodeType":"FunctionTypeName","parameterTypes":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"8570:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"8579:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:7"},"returnParameterTypes":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"8602:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1918,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:7"},"src":"8561:53:7","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:7"},"scope":2414,"src":"8443:237:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2008,"nodeType":"Block","src":"9405:834:7","statements":[{"assignments":[1938],"declarations":[{"constant":false,"id":1938,"mutability":"mutable","name":"low","nameLocation":"9423:3:7","nodeType":"VariableDeclaration","scope":2008,"src":"9415:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1940,"initialValue":{"hexValue":"30","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:7"},{"assignments":[1942],"declarations":[{"constant":false,"id":1942,"mutability":"mutable","name":"high","nameLocation":"9448:4:7","nodeType":"VariableDeclaration","scope":2008,"src":"9440:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"expression":{"id":1943,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"9455:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:7","memberName":"length","nodeType":"MemberAccess","src":"9455:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9482:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1952,"nodeType":"IfStatement","src":"9478:48:7","trueBody":{"id":1951,"nodeType":"Block","src":"9493:33:7","statements":[{"expression":{"hexValue":"30","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1936,"id":1950,"nodeType":"Return","src":"9507:8:7"}]}},{"body":{"id":1984,"nodeType":"Block","src":"9555:423:7","statements":[{"assignments":[1957],"declarations":[{"constant":false,"id":1957,"mutability":"mutable","name":"mid","nameLocation":"9577:3:7","nodeType":"VariableDeclaration","scope":1984,"src":"9569:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1963,"initialValue":{"arguments":[{"id":1960,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9596:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1961,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9601:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1958,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"9583:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5624_$","typeString":"type(library Math)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"9583:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1965,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"9844:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":1966,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"9851:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1964,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2289,2315,2341],"referencedDeclaration":2341,"src":"9831:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2672,"src":"9831:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1969,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"9864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1982,"nodeType":"Block","src":"9922:46:7","statements":[{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1976,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9940:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"9946:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1981,"nodeType":"ExpressionStatement","src":"9940:13:7"}]},"id":1983,"nodeType":"IfStatement","src":"9827:141:7","trueBody":{"id":1975,"nodeType":"Block","src":"9873:43:7","statements":[{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9891:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1972,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"9898:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"9891:10:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9543:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1954,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9549:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"WhileStatement","src":"9536:442:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10095:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1990,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"10119:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10126:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1989,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2289,2315,2341],"referencedDeclaration":2341,"src":"10106:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2672,"src":"10106:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1996,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"10144:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2006,"nodeType":"Block","src":"10198:35:7","statements":[{"expression":{"id":2004,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10219:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1936,"id":2005,"nodeType":"Return","src":"10212:10:7"}]},"id":2007,"nodeType":"IfStatement","src":"10091:142:7","trueBody":{"id":2003,"nodeType":"Block","src":"10153:39:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"10174:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1936,"id":2002,"nodeType":"Return","src":"10167:14:7"}]}}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"8686:616:7","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:7","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"array","nameLocation":"9349:5:7","nodeType":"VariableDeclaration","scope":2009,"src":"9331:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ArrayTypeName","src":"9331:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"element","nameLocation":"9364:7:7","nodeType":"VariableDeclaration","scope":2009,"src":"9356:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:7"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2009,"src":"9396:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:7"},"scope":2414,"src":"9307:932:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2072,"nodeType":"Block","src":"10756:709:7","statements":[{"assignments":[2021],"declarations":[{"constant":false,"id":2021,"mutability":"mutable","name":"low","nameLocation":"10774:3:7","nodeType":"VariableDeclaration","scope":2072,"src":"10766:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2023,"initialValue":{"hexValue":"30","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:7"},{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"high","nameLocation":"10799:4:7","nodeType":"VariableDeclaration","scope":2072,"src":"10791:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2028,"initialValue":{"expression":{"id":2026,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10806:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:7","memberName":"length","nodeType":"MemberAccess","src":"10806:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"10833:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2035,"nodeType":"IfStatement","src":"10829:48:7","trueBody":{"id":2034,"nodeType":"Block","src":"10844:33:7","statements":[{"expression":{"hexValue":"30","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2019,"id":2033,"nodeType":"Return","src":"10858:8:7"}]}},{"body":{"id":2068,"nodeType":"Block","src":"10906:532:7","statements":[{"assignments":[2040],"declarations":[{"constant":false,"id":2040,"mutability":"mutable","name":"mid","nameLocation":"10928:3:7","nodeType":"VariableDeclaration","scope":2068,"src":"10920:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2046,"initialValue":{"arguments":[{"id":2043,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10947:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2044,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"10952:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2041,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"10934:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5624_$","typeString":"type(library Math)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"10934:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2048,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"11195:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2049,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"11202:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2047,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2289,2315,2341],"referencedDeclaration":2341,"src":"11182:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2672,"src":"11182:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2052,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"11215:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2066,"nodeType":"Block","src":"11385:43:7","statements":[{"expression":{"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2062,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"11403:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2063,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"11410:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2065,"nodeType":"ExpressionStatement","src":"11403:10:7"}]},"id":2067,"nodeType":"IfStatement","src":"11178:250:7","trueBody":{"id":2061,"nodeType":"Block","src":"11224:155:7","statements":[{"id":2060,"nodeType":"UncheckedBlock","src":"11301:64:7","statements":[{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2054,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"11333:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"11339:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"11333:13:7"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10894:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2037,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"10900:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"nodeType":"WhileStatement","src":"10887:551:7"},{"expression":{"id":2070,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"11455:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2019,"id":2071,"nodeType":"Return","src":"11448:10:7"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"10245:412:7","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:7","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"array","nameLocation":"10700:5:7","nodeType":"VariableDeclaration","scope":2073,"src":"10682:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2012,"nodeType":"ArrayTypeName","src":"10682:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"element","nameLocation":"10715:7:7","nodeType":"VariableDeclaration","scope":2073,"src":"10707:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:7"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2073,"src":"10747:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:7"},"scope":2414,"src":"10662:803:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"11982:709:7","statements":[{"assignments":[2085],"declarations":[{"constant":false,"id":2085,"mutability":"mutable","name":"low","nameLocation":"12000:3:7","nodeType":"VariableDeclaration","scope":2136,"src":"11992:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2087,"initialValue":{"hexValue":"30","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:7"},{"assignments":[2089],"declarations":[{"constant":false,"id":2089,"mutability":"mutable","name":"high","nameLocation":"12025:4:7","nodeType":"VariableDeclaration","scope":2136,"src":"12017:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2092,"initialValue":{"expression":{"id":2090,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"12032:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:7","memberName":"length","nodeType":"MemberAccess","src":"12032:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"12059:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"12055:48:7","trueBody":{"id":2098,"nodeType":"Block","src":"12070:33:7","statements":[{"expression":{"hexValue":"30","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2083,"id":2097,"nodeType":"Return","src":"12084:8:7"}]}},{"body":{"id":2132,"nodeType":"Block","src":"12132:532:7","statements":[{"assignments":[2104],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"mid","nameLocation":"12154:3:7","nodeType":"VariableDeclaration","scope":2132,"src":"12146:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2110,"initialValue":{"arguments":[{"id":2107,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12173:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2108,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"12178:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2105,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"12160:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5624_$","typeString":"type(library Math)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"12160:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2112,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"12421:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2113,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"12428:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2111,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2289,2315,2341],"referencedDeclaration":2341,"src":"12408:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2672,"src":"12408:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2116,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"12441:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2130,"nodeType":"Block","src":"12499:155:7","statements":[{"id":2129,"nodeType":"UncheckedBlock","src":"12576:64:7","statements":[{"expression":{"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2123,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12608:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"12614:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2128,"nodeType":"ExpressionStatement","src":"12608:13:7"}]}]},"id":2131,"nodeType":"IfStatement","src":"12404:250:7","trueBody":{"id":2122,"nodeType":"Block","src":"12450:43:7","statements":[{"expression":{"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2118,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"12468:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2119,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"12475:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2121,"nodeType":"ExpressionStatement","src":"12468:10:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12120:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2101,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"12126:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2133,"nodeType":"WhileStatement","src":"12113:551:7"},{"expression":{"id":2134,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12681:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2083,"id":2135,"nodeType":"Return","src":"12674:10:7"}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"11471:412:7","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:7","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"array","nameLocation":"11926:5:7","nodeType":"VariableDeclaration","scope":2137,"src":"11908:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2076,"nodeType":"ArrayTypeName","src":"11908:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"element","nameLocation":"11941:7:7","nodeType":"VariableDeclaration","scope":2137,"src":"11933:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:7"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"11973:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:7"},"scope":2414,"src":"11888:803:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"12875:709:7","statements":[{"assignments":[2149],"declarations":[{"constant":false,"id":2149,"mutability":"mutable","name":"low","nameLocation":"12893:3:7","nodeType":"VariableDeclaration","scope":2199,"src":"12885:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2151,"initialValue":{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:7"},{"assignments":[2153],"declarations":[{"constant":false,"id":2153,"mutability":"mutable","name":"high","nameLocation":"12918:4:7","nodeType":"VariableDeclaration","scope":2199,"src":"12910:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2156,"initialValue":{"expression":{"id":2154,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"12925:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:7","memberName":"length","nodeType":"MemberAccess","src":"12925:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"12952:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2163,"nodeType":"IfStatement","src":"12948:48:7","trueBody":{"id":2162,"nodeType":"Block","src":"12963:33:7","statements":[{"expression":{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2147,"id":2161,"nodeType":"Return","src":"12977:8:7"}]}},{"body":{"id":2195,"nodeType":"Block","src":"13025:532:7","statements":[{"assignments":[2168],"declarations":[{"constant":false,"id":2168,"mutability":"mutable","name":"mid","nameLocation":"13047:3:7","nodeType":"VariableDeclaration","scope":2195,"src":"13039:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2174,"initialValue":{"arguments":[{"id":2171,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"13066:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2172,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"13071:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2169,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"13053:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5624_$","typeString":"type(library Math)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"13053:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2176,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"13320:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2177,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"13327:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2175,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2354,2367,2380],"referencedDeclaration":2380,"src":"13301:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2179,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"13334:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2193,"nodeType":"Block","src":"13504:43:7","statements":[{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2189,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"13522:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2190,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"13529:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2192,"nodeType":"ExpressionStatement","src":"13522:10:7"}]},"id":2194,"nodeType":"IfStatement","src":"13297:250:7","trueBody":{"id":2188,"nodeType":"Block","src":"13343:155:7","statements":[{"id":2187,"nodeType":"UncheckedBlock","src":"13420:64:7","statements":[{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2181,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"13452:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2182,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"13458:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2186,"nodeType":"ExpressionStatement","src":"13452:13:7"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"13013:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2165,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"13019:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2196,"nodeType":"WhileStatement","src":"13006:551:7"},{"expression":{"id":2197,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"13574:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2147,"id":2198,"nodeType":"Return","src":"13567:10:7"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"12697:74:7","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:7","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"array","nameLocation":"12819:5:7","nodeType":"VariableDeclaration","scope":2200,"src":"12802:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ArrayTypeName","src":"12802:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"element","nameLocation":"12834:7:7","nodeType":"VariableDeclaration","scope":2200,"src":"12826:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:7"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"12866:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:7"},"scope":2414,"src":"12776:808:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2262,"nodeType":"Block","src":"13768:709:7","statements":[{"assignments":[2212],"declarations":[{"constant":false,"id":2212,"mutability":"mutable","name":"low","nameLocation":"13786:3:7","nodeType":"VariableDeclaration","scope":2262,"src":"13778:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2214,"initialValue":{"hexValue":"30","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:7"},{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"high","nameLocation":"13811:4:7","nodeType":"VariableDeclaration","scope":2262,"src":"13803:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2219,"initialValue":{"expression":{"id":2217,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"13818:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:7","memberName":"length","nodeType":"MemberAccess","src":"13818:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2220,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"13845:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"IfStatement","src":"13841:48:7","trueBody":{"id":2225,"nodeType":"Block","src":"13856:33:7","statements":[{"expression":{"hexValue":"30","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2210,"id":2224,"nodeType":"Return","src":"13870:8:7"}]}},{"body":{"id":2258,"nodeType":"Block","src":"13918:532:7","statements":[{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"mid","nameLocation":"13940:3:7","nodeType":"VariableDeclaration","scope":2258,"src":"13932:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2237,"initialValue":{"arguments":[{"id":2234,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"13959:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2235,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"13964:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2232,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"13946:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5624_$","typeString":"type(library Math)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"13946:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2239,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"14213:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2240,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14220:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2238,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2354,2367,2380],"referencedDeclaration":2380,"src":"14194:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2242,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"14227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2256,"nodeType":"Block","src":"14285:155:7","statements":[{"id":2255,"nodeType":"UncheckedBlock","src":"14362:64:7","statements":[{"expression":{"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2249,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"14394:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2250,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14400:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"nodeType":"ExpressionStatement","src":"14394:13:7"}]}]},"id":2257,"nodeType":"IfStatement","src":"14190:250:7","trueBody":{"id":2248,"nodeType":"Block","src":"14236:43:7","statements":[{"expression":{"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2244,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"14254:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2245,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14261:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2247,"nodeType":"ExpressionStatement","src":"14254:10:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"13906:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2228,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"13912:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"nodeType":"WhileStatement","src":"13899:551:7"},{"expression":{"id":2260,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"14467:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2210,"id":2261,"nodeType":"Return","src":"14460:10:7"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"13590:74:7","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:7","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"array","nameLocation":"13712:5:7","nodeType":"VariableDeclaration","scope":2263,"src":"13695:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2203,"nodeType":"ArrayTypeName","src":"13695:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"element","nameLocation":"13727:7:7","nodeType":"VariableDeclaration","scope":2263,"src":"13719:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:7"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"13759:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:7"},"scope":2414,"src":"13669:808:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2288,"nodeType":"Block","src":"14793:167:7","statements":[{"assignments":[2276],"declarations":[{"constant":false,"id":2276,"mutability":"mutable","name":"slot","nameLocation":"14811:4:7","nodeType":"VariableDeclaration","scope":2288,"src":"14803:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2277,"nodeType":"VariableDeclarationStatement","src":"14803:12:7"},{"AST":{"nodeType":"YulBlock","src":"14850:40:7","statements":[{"nodeType":"YulAssignment","src":"14864:16:7","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:7"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2267,"isOffset":false,"isSlot":true,"src":"14872:8:7","suffix":"slot","valueSize":1},{"declaration":2276,"isOffset":false,"isSlot":false,"src":"14864:4:7","valueSize":1}],"flags":["memory-safe"],"id":2278,"nodeType":"InlineAssembly","src":"14825:65:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2283,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"14932:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2279,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"14906:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:7","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"14906:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:7","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"14906:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"14906:45:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2664_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2274,"id":2287,"nodeType":"Return","src":"14899:54:7"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"14483:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:7","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"arr","nameLocation":"14719:3:7","nodeType":"VariableDeclaration","scope":2289,"src":"14701:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2266,"nodeType":"ArrayTypeName","src":"14701:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"pos","nameLocation":"14732:3:7","nodeType":"VariableDeclaration","scope":2289,"src":"14724:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:7"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"14760:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2272,"nodeType":"UserDefinedTypeName","pathNode":{"id":2271,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:7","14772:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"14760:23:7"},"referencedDeclaration":2664,"src":"14760:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:7"},"scope":2414,"src":"14679:281:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"15276:167:7","statements":[{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"slot","nameLocation":"15294:4:7","nodeType":"VariableDeclaration","scope":2314,"src":"15286:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2303,"nodeType":"VariableDeclarationStatement","src":"15286:12:7"},{"AST":{"nodeType":"YulBlock","src":"15333:40:7","statements":[{"nodeType":"YulAssignment","src":"15347:16:7","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:7"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2293,"isOffset":false,"isSlot":true,"src":"15355:8:7","suffix":"slot","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"15347:4:7","valueSize":1}],"flags":["memory-safe"],"id":2304,"nodeType":"InlineAssembly","src":"15308:65:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2309,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"15415:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2305,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"15389:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:7","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"15389:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:7","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"15389:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:7","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"15389:45:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$2670_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2300,"id":2313,"nodeType":"Return","src":"15382:54:7"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"14966:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:7","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"arr","nameLocation":"15202:3:7","nodeType":"VariableDeclaration","scope":2315,"src":"15184:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2292,"nodeType":"ArrayTypeName","src":"15184:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"pos","nameLocation":"15215:3:7","nodeType":"VariableDeclaration","scope":2315,"src":"15207:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:7"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"15243:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2298,"nodeType":"UserDefinedTypeName","pathNode":{"id":2297,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:7","15255:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2670,"src":"15243:23:7"},"referencedDeclaration":2670,"src":"15243:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:7"},"scope":2414,"src":"15162:281:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"15759:167:7","statements":[{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"slot","nameLocation":"15777:4:7","nodeType":"VariableDeclaration","scope":2340,"src":"15769:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2329,"nodeType":"VariableDeclarationStatement","src":"15769:12:7"},{"AST":{"nodeType":"YulBlock","src":"15816:40:7","statements":[{"nodeType":"YulAssignment","src":"15830:16:7","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:7"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2319,"isOffset":false,"isSlot":true,"src":"15838:8:7","suffix":"slot","valueSize":1},{"declaration":2328,"isOffset":false,"isSlot":false,"src":"15830:4:7","valueSize":1}],"flags":["memory-safe"],"id":2330,"nodeType":"InlineAssembly","src":"15791:65:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2335,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"15898:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2331,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"15872:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:7","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"15872:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:7","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"15872:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:7","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":2726,"src":"15872:45:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$2673_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2326,"id":2339,"nodeType":"Return","src":"15865:54:7"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"15449:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:7","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"arr","nameLocation":"15685:3:7","nodeType":"VariableDeclaration","scope":2341,"src":"15667:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"nodeType":"ArrayTypeName","src":"15667:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"pos","nameLocation":"15698:3:7","nodeType":"VariableDeclaration","scope":2341,"src":"15690:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:7"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"15726:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2324,"nodeType":"UserDefinedTypeName","pathNode":{"id":2323,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:7","15738:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2673,"src":"15726:23:7"},"referencedDeclaration":2673,"src":"15726:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:7"},"scope":2414,"src":"15645:281:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"16227:98:7","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:7","statements":[{"nodeType":"YulAssignment","src":"16260:49:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:7"},"nodeType":"YulFunctionCall","src":"16277:14:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:7"},"nodeType":"YulFunctionCall","src":"16293:14:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:7"},"nodeType":"YulFunctionCall","src":"16273:35:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:7"},"nodeType":"YulFunctionCall","src":"16267:42:7"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2345,"isOffset":false,"isSlot":false,"src":"16281:3:7","valueSize":1},{"declaration":2347,"isOffset":false,"isSlot":false,"src":"16297:3:7","valueSize":1},{"declaration":2350,"isOffset":false,"isSlot":false,"src":"16260:3:7","valueSize":1}],"id":2352,"nodeType":"InlineAssembly","src":"16237:82:7"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"15932:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:7","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"arr","nameLocation":"16173:3:7","nodeType":"VariableDeclaration","scope":2354,"src":"16156:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2344,"nodeType":"ArrayTypeName","src":"16156:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"pos","nameLocation":"16186:3:7","nodeType":"VariableDeclaration","scope":2354,"src":"16178:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:7"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"res","nameLocation":"16222:3:7","nodeType":"VariableDeclaration","scope":2354,"src":"16214:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:7"},"scope":2414,"src":"16128:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"16626:98:7","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:7","statements":[{"nodeType":"YulAssignment","src":"16659:49:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:7"},"nodeType":"YulFunctionCall","src":"16676:14:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:7"},"nodeType":"YulFunctionCall","src":"16692:14:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:7"},"nodeType":"YulFunctionCall","src":"16672:35:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:7"},"nodeType":"YulFunctionCall","src":"16666:42:7"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2358,"isOffset":false,"isSlot":false,"src":"16680:3:7","valueSize":1},{"declaration":2360,"isOffset":false,"isSlot":false,"src":"16696:3:7","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"16659:3:7","valueSize":1}],"id":2365,"nodeType":"InlineAssembly","src":"16636:82:7"}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"16331:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:7","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"arr","nameLocation":"16572:3:7","nodeType":"VariableDeclaration","scope":2367,"src":"16555:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2357,"nodeType":"ArrayTypeName","src":"16555:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"pos","nameLocation":"16585:3:7","nodeType":"VariableDeclaration","scope":2367,"src":"16577:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:7"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"res","nameLocation":"16621:3:7","nodeType":"VariableDeclaration","scope":2367,"src":"16613:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:7"},"scope":2414,"src":"16527:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"17025:98:7","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:7","statements":[{"nodeType":"YulAssignment","src":"17058:49:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:7"},"nodeType":"YulFunctionCall","src":"17075:14:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:7"},"nodeType":"YulFunctionCall","src":"17091:14:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:7"},"nodeType":"YulFunctionCall","src":"17071:35:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:7"},"nodeType":"YulFunctionCall","src":"17065:42:7"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2371,"isOffset":false,"isSlot":false,"src":"17079:3:7","valueSize":1},{"declaration":2373,"isOffset":false,"isSlot":false,"src":"17095:3:7","valueSize":1},{"declaration":2376,"isOffset":false,"isSlot":false,"src":"17058:3:7","valueSize":1}],"id":2378,"nodeType":"InlineAssembly","src":"17035:82:7"}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"16730:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:7","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"arr","nameLocation":"16971:3:7","nodeType":"VariableDeclaration","scope":2380,"src":"16954:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ArrayTypeName","src":"16954:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"pos","nameLocation":"16984:3:7","nodeType":"VariableDeclaration","scope":2380,"src":"16976:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:7"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"res","nameLocation":"17020:3:7","nodeType":"VariableDeclaration","scope":2380,"src":"17012:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:7"},"scope":2414,"src":"16926:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2390,"nodeType":"Block","src":"17440:88:7","statements":[{"AST":{"nodeType":"YulBlock","src":"17475:47:7","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17496:10:7"},{"name":"len","nodeType":"YulIdentifier","src":"17508:3:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17489:6:7"},"nodeType":"YulFunctionCall","src":"17489:23:7"},"nodeType":"YulExpressionStatement","src":"17489:23:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2384,"isOffset":false,"isSlot":true,"src":"17496:10:7","suffix":"slot","valueSize":1},{"declaration":2386,"isOffset":false,"isSlot":false,"src":"17508:3:7","valueSize":1}],"flags":["memory-safe"],"id":2389,"nodeType":"InlineAssembly","src":"17450:72:7"}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"17129:234:7","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:7","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"array","nameLocation":"17411:5:7","nodeType":"VariableDeclaration","scope":2391,"src":"17393:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2383,"nodeType":"ArrayTypeName","src":"17393:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"len","nameLocation":"17426:3:7","nodeType":"VariableDeclaration","scope":2391,"src":"17418:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:7"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"17440:0:7"},"scope":2414,"src":"17368:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2401,"nodeType":"Block","src":"17845:88:7","statements":[{"AST":{"nodeType":"YulBlock","src":"17880:47:7","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17901:10:7"},{"name":"len","nodeType":"YulIdentifier","src":"17913:3:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17894:6:7"},"nodeType":"YulFunctionCall","src":"17894:23:7"},"nodeType":"YulExpressionStatement","src":"17894:23:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2395,"isOffset":false,"isSlot":true,"src":"17901:10:7","suffix":"slot","valueSize":1},{"declaration":2397,"isOffset":false,"isSlot":false,"src":"17913:3:7","valueSize":1}],"flags":["memory-safe"],"id":2400,"nodeType":"InlineAssembly","src":"17855:72:7"}]},"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"17534:234:7","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2402,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:7","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"array","nameLocation":"17816:5:7","nodeType":"VariableDeclaration","scope":2402,"src":"17798:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2394,"nodeType":"ArrayTypeName","src":"17798:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"len","nameLocation":"17831:3:7","nodeType":"VariableDeclaration","scope":2402,"src":"17823:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:7"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"17845:0:7"},"scope":2414,"src":"17773:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2412,"nodeType":"Block","src":"18250:88:7","statements":[{"AST":{"nodeType":"YulBlock","src":"18285:47:7","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18306:10:7"},{"name":"len","nodeType":"YulIdentifier","src":"18318:3:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18299:6:7"},"nodeType":"YulFunctionCall","src":"18299:23:7"},"nodeType":"YulExpressionStatement","src":"18299:23:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2406,"isOffset":false,"isSlot":true,"src":"18306:10:7","suffix":"slot","valueSize":1},{"declaration":2408,"isOffset":false,"isSlot":false,"src":"18318:3:7","valueSize":1}],"flags":["memory-safe"],"id":2411,"nodeType":"InlineAssembly","src":"18260:72:7"}]},"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"17939:234:7","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:7","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"array","nameLocation":"18221:5:7","nodeType":"VariableDeclaration","scope":2413,"src":"18203:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ArrayTypeName","src":"18203:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"len","nameLocation":"18236:3:7","nodeType":"VariableDeclaration","scope":2413,"src":"18228:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:7"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"18250:0:7"},"scope":2414,"src":"18178:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2415,"src":"459:17881:7","usedErrors":[],"usedEvents":[]}],"src":"183:18158:7"},"id":7},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[2446]},"id":2447,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2416,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"131:92:8","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":2446,"linearizedBaseContracts":[2446],"name":"Comparators","nameLocation":"232:11:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2430,"nodeType":"Block","src":"313:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"330:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"334:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2425,"id":2429,"nodeType":"Return","src":"323:12:8"}]},"id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:8","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"a","nameLocation":"270:1:8","nodeType":"VariableDeclaration","scope":2431,"src":"262:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"b","nameLocation":"281:1:8","nodeType":"VariableDeclaration","scope":2431,"src":"273:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:8"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2431,"src":"307:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2423,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:8"},"scope":2446,"src":"250:92:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"411:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"428:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"432:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2439,"id":2443,"nodeType":"Return","src":"421:12:8"}]},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:8","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"a","nameLocation":"368:1:8","nodeType":"VariableDeclaration","scope":2445,"src":"360:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"b","nameLocation":"379:1:8","nodeType":"VariableDeclaration","scope":2445,"src":"371:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:8"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"405:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2437,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:8"},"scope":2446,"src":"348:92:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2447,"src":"224:218:8","usedErrors":[],"usedEvents":[]}],"src":"105:338:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2476]},"id":2477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2448,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2476,"linearizedBaseContracts":[2476],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2457,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":2454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2453,"id":2456,"nodeType":"Return","src":"728:17:9"}]},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2458,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":2476,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":2463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2462,"id":2465,"nodeType":"Return","src":"835:15:9"}]},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2460,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":2476,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2471,"id":2473,"nodeType":"Return","src":"945:8:9"}]},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2475,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":2476,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2477,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2528]},"id":2529,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2478,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"125:489:10","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2528,"linearizedBaseContracts":[2528],"name":"Panic","nameLocation":"665:5:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"677:36:10","text":"@dev generic / unspecified error"},"id":2483,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:10","nodeType":"VariableDeclaration","scope":2528,"src":"718:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"764:37:10","text":"@dev used by the assert() builtin"},"id":2487,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:10","nodeType":"VariableDeclaration","scope":2528,"src":"806:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"851:41:10","text":"@dev arithmetic underflow or overflow"},"id":2491,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:10","nodeType":"VariableDeclaration","scope":2528,"src":"897:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:10","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"950:35:10","text":"@dev division or modulo by zero"},"id":2495,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:10","nodeType":"VariableDeclaration","scope":2528,"src":"990:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"1045:30:10","text":"@dev enum conversion error"},"id":2499,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:10","nodeType":"VariableDeclaration","scope":2528,"src":"1080:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:10","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"1140:36:10","text":"@dev invalid encoding in storage"},"id":2503,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:10","nodeType":"VariableDeclaration","scope":2528,"src":"1181:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"1242:24:10","text":"@dev empty array pop"},"id":2507,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:10","nodeType":"VariableDeclaration","scope":2528,"src":"1271:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"1325:35:10","text":"@dev array out of bounds access"},"id":2511,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:10","nodeType":"VariableDeclaration","scope":2528,"src":"1365:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"1423:65:10","text":"@dev resource error (too large allocation or too large array)"},"id":2515,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:10","nodeType":"VariableDeclaration","scope":2528,"src":"1493:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"1546:42:10","text":"@dev calling invalid internal function"},"id":2519,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:10","nodeType":"VariableDeclaration","scope":2528,"src":"1593:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:10","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2526,"nodeType":"Block","src":"1819:151:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:10"},"nodeType":"YulFunctionCall","src":"1868:24:10"},"nodeType":"YulExpressionStatement","src":"1868:24:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:10","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:10"},"nodeType":"YulFunctionCall","src":"1905:18:10"},"nodeType":"YulExpressionStatement","src":"1905:18:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:10","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:10"},"nodeType":"YulFunctionCall","src":"1936:18:10"},"nodeType":"YulExpressionStatement","src":"1936:18:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2522,"isOffset":false,"isSlot":false,"src":"1918:4:10","valueSize":1}],"flags":["memory-safe"],"id":2525,"nodeType":"InlineAssembly","src":"1829:135:10"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"1658:113:10","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2527,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:10","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"code","nameLocation":"1799:4:10","nodeType":"VariableDeclaration","scope":2527,"src":"1791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:10"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[],"src":"1819:0:10"},"scope":2528,"src":"1776:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2529,"src":"657:1315:10","usedErrors":[],"usedEvents":[]}],"src":"99:1874:10"},"id":10},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[2658]},"id":2659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2530,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"225:1372:11","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":2658,"linearizedBaseContracts":[2658],"name":"SlotDerivation","nameLocation":"1606:14:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2540,"nodeType":"Block","src":"1789:194:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1824:153:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1845:4:11","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1869:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1880:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:11"},"nodeType":"YulFunctionCall","src":"1865:20:11"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1893:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1887:5:11"},"nodeType":"YulFunctionCall","src":"1887:16:11"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1855:9:11"},"nodeType":"YulFunctionCall","src":"1855:49:11"},{"kind":"number","nodeType":"YulLiteral","src":"1906:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1851:3:11"},"nodeType":"YulFunctionCall","src":"1851:57:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1838:6:11"},"nodeType":"YulFunctionCall","src":"1838:71:11"},"nodeType":"YulExpressionStatement","src":"1838:71:11"},{"nodeType":"YulAssignment","src":"1922:45:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1944:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1950:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1934:9:11"},"nodeType":"YulFunctionCall","src":"1934:21:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1961:4:11","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1957:3:11"},"nodeType":"YulFunctionCall","src":"1957:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1930:3:11"},"nodeType":"YulFunctionCall","src":"1930:37:11"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1922:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2534,"isOffset":false,"isSlot":false,"src":"1869:9:11","valueSize":1},{"declaration":2534,"isOffset":false,"isSlot":false,"src":"1893:9:11","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"1922:4:11","valueSize":1}],"flags":["memory-safe"],"id":2539,"nodeType":"InlineAssembly","src":"1799:178:11"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"1627:74:11","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:11","nodeType":"FunctionDefinition","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:11","nodeType":"VariableDeclaration","scope":2541,"src":"1727:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2533,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:11"},"returnParameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"slot","nameLocation":"1783:4:11","nodeType":"VariableDeclaration","scope":2541,"src":"1775:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:11"},"scope":2658,"src":"1706:277:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2562,"nodeType":"Block","src":"2175:86:11","statements":[{"id":2561,"nodeType":"UncheckedBlock","src":"2185:70:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2555,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2232:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:11","typeDescriptions":{}}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2557,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"2240:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:11","typeDescriptions":{}}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2550,"id":2560,"nodeType":"Return","src":"2209:35:11"}]}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"1989:99:11","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:11","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"slot","nameLocation":"2117:4:11","nodeType":"VariableDeclaration","scope":2563,"src":"2109:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"pos","nameLocation":"2131:3:11","nodeType":"VariableDeclaration","scope":2563,"src":"2123:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:11"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"result","nameLocation":"2167:6:11","nodeType":"VariableDeclaration","scope":2563,"src":"2159:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:11"},"scope":2658,"src":"2093:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2572,"nodeType":"Block","src":"2464:127:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2499:86:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2520:4:11","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2526:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2513:6:11"},"nodeType":"YulFunctionCall","src":"2513:18:11"},"nodeType":"YulExpressionStatement","src":"2513:18:11"},{"nodeType":"YulAssignment","src":"2544:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2570:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2554:9:11"},"nodeType":"YulFunctionCall","src":"2554:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2544:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2569,"isOffset":false,"isSlot":false,"src":"2544:6:11","valueSize":1},{"declaration":2566,"isOffset":false,"isSlot":false,"src":"2526:4:11","valueSize":1}],"flags":["memory-safe"],"id":2571,"nodeType":"InlineAssembly","src":"2474:111:11"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"2267:118:11","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:11","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"slot","nameLocation":"2419:4:11","nodeType":"VariableDeclaration","scope":2573,"src":"2411:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:11"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"result","nameLocation":"2456:6:11","nodeType":"VariableDeclaration","scope":2573,"src":"2448:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:11"},"scope":2658,"src":"2390:201:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2584,"nodeType":"Block","src":"2769:179:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2804:138:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:4:11","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2835:3:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2844:2:11","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:11"},"nodeType":"YulFunctionCall","src":"2848:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2840:3:11"},"nodeType":"YulFunctionCall","src":"2840:15:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2831:3:11"},"nodeType":"YulFunctionCall","src":"2831:25:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2818:6:11"},"nodeType":"YulFunctionCall","src":"2818:39:11"},"nodeType":"YulExpressionStatement","src":"2818:39:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2883:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:11"},"nodeType":"YulFunctionCall","src":"2870:18:11"},"nodeType":"YulExpressionStatement","src":"2870:18:11"},{"nodeType":"YulAssignment","src":"2901:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2921:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2927:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2911:9:11"},"nodeType":"YulFunctionCall","src":"2911:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2901:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2578,"isOffset":false,"isSlot":false,"src":"2835:3:11","valueSize":1},{"declaration":2581,"isOffset":false,"isSlot":false,"src":"2901:6:11","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"2883:4:11","valueSize":1}],"flags":["memory-safe"],"id":2583,"nodeType":"InlineAssembly","src":"2779:163:11"}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"2597:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:11","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"slot","nameLocation":"2711:4:11","nodeType":"VariableDeclaration","scope":2585,"src":"2703:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"key","nameLocation":"2725:3:11","nodeType":"VariableDeclaration","scope":2585,"src":"2717:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:11"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"result","nameLocation":"2761:6:11","nodeType":"VariableDeclaration","scope":2585,"src":"2753:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:11"},"scope":2658,"src":"2680:268:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"3123:173:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3158:132:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3179:4:11","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3199:3:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3192:6:11"},"nodeType":"YulFunctionCall","src":"3192:11:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:11"},"nodeType":"YulFunctionCall","src":"3185:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3172:6:11"},"nodeType":"YulFunctionCall","src":"3172:33:11"},"nodeType":"YulExpressionStatement","src":"3172:33:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3225:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3231:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3218:6:11"},"nodeType":"YulFunctionCall","src":"3218:18:11"},"nodeType":"YulExpressionStatement","src":"3218:18:11"},{"nodeType":"YulAssignment","src":"3249:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3259:9:11"},"nodeType":"YulFunctionCall","src":"3259:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3249:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2590,"isOffset":false,"isSlot":false,"src":"3199:3:11","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"3249:6:11","valueSize":1},{"declaration":2588,"isOffset":false,"isSlot":false,"src":"3231:4:11","valueSize":1}],"flags":["memory-safe"],"id":2595,"nodeType":"InlineAssembly","src":"3133:157:11"}]},"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"2954:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:11","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"slot","nameLocation":"3068:4:11","nodeType":"VariableDeclaration","scope":2597,"src":"3060:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"key","nameLocation":"3079:3:11","nodeType":"VariableDeclaration","scope":2597,"src":"3074:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2589,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:11"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"result","nameLocation":"3115:6:11","nodeType":"VariableDeclaration","scope":2597,"src":"3107:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:11"},"scope":2658,"src":"3037:259:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"3474:157:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3509:116:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:4:11","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3536:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:11"},"nodeType":"YulFunctionCall","src":"3523:17:11"},"nodeType":"YulExpressionStatement","src":"3523:17:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3560:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3566:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3553:6:11"},"nodeType":"YulFunctionCall","src":"3553:18:11"},"nodeType":"YulExpressionStatement","src":"3553:18:11"},{"nodeType":"YulAssignment","src":"3584:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3604:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3610:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3594:9:11"},"nodeType":"YulFunctionCall","src":"3594:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3584:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2602,"isOffset":false,"isSlot":false,"src":"3536:3:11","valueSize":1},{"declaration":2605,"isOffset":false,"isSlot":false,"src":"3584:6:11","valueSize":1},{"declaration":2600,"isOffset":false,"isSlot":false,"src":"3566:4:11","valueSize":1}],"flags":["memory-safe"],"id":2607,"nodeType":"InlineAssembly","src":"3484:141:11"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"3302:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:11","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"slot","nameLocation":"3416:4:11","nodeType":"VariableDeclaration","scope":2609,"src":"3408:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"key","nameLocation":"3430:3:11","nodeType":"VariableDeclaration","scope":2609,"src":"3422:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:11"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"result","nameLocation":"3466:6:11","nodeType":"VariableDeclaration","scope":2609,"src":"3458:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:11"},"scope":2658,"src":"3385:246:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"3809:157:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3844:116:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:4:11","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3871:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:11"},"nodeType":"YulFunctionCall","src":"3858:17:11"},"nodeType":"YulExpressionStatement","src":"3858:17:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3895:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3901:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:11"},"nodeType":"YulFunctionCall","src":"3888:18:11"},"nodeType":"YulExpressionStatement","src":"3888:18:11"},{"nodeType":"YulAssignment","src":"3919:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3939:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:11"},"nodeType":"YulFunctionCall","src":"3929:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3919:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2614,"isOffset":false,"isSlot":false,"src":"3871:3:11","valueSize":1},{"declaration":2617,"isOffset":false,"isSlot":false,"src":"3919:6:11","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"3901:4:11","valueSize":1}],"flags":["memory-safe"],"id":2619,"nodeType":"InlineAssembly","src":"3819:141:11"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"3637:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:11","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"slot","nameLocation":"3751:4:11","nodeType":"VariableDeclaration","scope":2621,"src":"3743:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"key","nameLocation":"3765:3:11","nodeType":"VariableDeclaration","scope":2621,"src":"3757:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:11"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"result","nameLocation":"3801:6:11","nodeType":"VariableDeclaration","scope":2621,"src":"3793:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:11"},"scope":2658,"src":"3720:246:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2632,"nodeType":"Block","src":"4143:157:11","statements":[{"AST":{"nodeType":"YulBlock","src":"4178:116:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4199:4:11","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4205:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:11"},"nodeType":"YulFunctionCall","src":"4192:17:11"},"nodeType":"YulExpressionStatement","src":"4192:17:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4229:4:11","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4235:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4222:6:11"},"nodeType":"YulFunctionCall","src":"4222:18:11"},"nodeType":"YulExpressionStatement","src":"4222:18:11"},{"nodeType":"YulAssignment","src":"4253:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4279:4:11","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4263:9:11"},"nodeType":"YulFunctionCall","src":"4263:21:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4253:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2626,"isOffset":false,"isSlot":false,"src":"4205:3:11","valueSize":1},{"declaration":2629,"isOffset":false,"isSlot":false,"src":"4253:6:11","valueSize":1},{"declaration":2624,"isOffset":false,"isSlot":false,"src":"4235:4:11","valueSize":1}],"flags":["memory-safe"],"id":2631,"nodeType":"InlineAssembly","src":"4153:141:11"}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"3972:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2633,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:11","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"slot","nameLocation":"4086:4:11","nodeType":"VariableDeclaration","scope":2633,"src":"4078:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"key","nameLocation":"4099:3:11","nodeType":"VariableDeclaration","scope":2633,"src":"4092:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2625,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:11"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"result","nameLocation":"4135:6:11","nodeType":"VariableDeclaration","scope":2633,"src":"4127:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:11"},"scope":2658,"src":"4055:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2644,"nodeType":"Block","src":"4484:326:11","statements":[{"AST":{"nodeType":"YulBlock","src":"4519:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4533:24:11","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4553:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4547:5:11"},"nodeType":"YulFunctionCall","src":"4547:10:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4537:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4570:27:11","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4587:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4592:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4583:3:11"},"nodeType":"YulFunctionCall","src":"4583:14:11"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4574:5:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4610:29:11","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4625:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"4632:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4621:3:11"},"nodeType":"YulFunctionCall","src":"4621:18:11"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4614:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4652:23:11","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4671:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4665:5:11"},"nodeType":"YulFunctionCall","src":"4665:10:11"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4656:5:11","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4695:3:11"},{"name":"slot","nodeType":"YulIdentifier","src":"4700:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4688:6:11"},"nodeType":"YulFunctionCall","src":"4688:17:11"},"nodeType":"YulExpressionStatement","src":"4688:17:11"},{"nodeType":"YulAssignment","src":"4718:45:11","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4738:5:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4749:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4757:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:11"},"nodeType":"YulFunctionCall","src":"4745:17:11"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4728:9:11"},"nodeType":"YulFunctionCall","src":"4728:35:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4718:6:11"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4783:3:11"},{"name":"cache","nodeType":"YulIdentifier","src":"4788:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:11"},"nodeType":"YulFunctionCall","src":"4776:18:11"},"nodeType":"YulExpressionStatement","src":"4776:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2638,"isOffset":false,"isSlot":false,"src":"4553:3:11","valueSize":1},{"declaration":2638,"isOffset":false,"isSlot":false,"src":"4587:3:11","valueSize":1},{"declaration":2641,"isOffset":false,"isSlot":false,"src":"4718:6:11","valueSize":1},{"declaration":2636,"isOffset":false,"isSlot":false,"src":"4700:4:11","valueSize":1}],"flags":["memory-safe"],"id":2643,"nodeType":"InlineAssembly","src":"4494:310:11"}]},"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"4306:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2645,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:11","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"slot","nameLocation":"4420:4:11","nodeType":"VariableDeclaration","scope":2645,"src":"4412:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"key","nameLocation":"4440:3:11","nodeType":"VariableDeclaration","scope":2645,"src":"4426:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2637,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:11"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"result","nameLocation":"4476:6:11","nodeType":"VariableDeclaration","scope":2645,"src":"4468:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:11"},"scope":2658,"src":"4389:421:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2656,"nodeType":"Block","src":"4993:326:11","statements":[{"AST":{"nodeType":"YulBlock","src":"5028:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5042:24:11","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5062:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5056:5:11"},"nodeType":"YulFunctionCall","src":"5056:10:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5046:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5079:27:11","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5096:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:11"},"nodeType":"YulFunctionCall","src":"5092:14:11"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5083:5:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5119:29:11","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5134:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"5141:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:11"},"nodeType":"YulFunctionCall","src":"5130:18:11"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5123:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5161:23:11","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5180:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5174:5:11"},"nodeType":"YulFunctionCall","src":"5174:10:11"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5165:5:11","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5204:3:11"},{"name":"slot","nodeType":"YulIdentifier","src":"5209:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5197:6:11"},"nodeType":"YulFunctionCall","src":"5197:17:11"},"nodeType":"YulExpressionStatement","src":"5197:17:11"},{"nodeType":"YulAssignment","src":"5227:45:11","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5247:5:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5258:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5266:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5254:3:11"},"nodeType":"YulFunctionCall","src":"5254:17:11"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5237:9:11"},"nodeType":"YulFunctionCall","src":"5237:35:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5227:6:11"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5292:3:11"},{"name":"cache","nodeType":"YulIdentifier","src":"5297:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5285:6:11"},"nodeType":"YulFunctionCall","src":"5285:18:11"},"nodeType":"YulExpressionStatement","src":"5285:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2650,"isOffset":false,"isSlot":false,"src":"5062:3:11","valueSize":1},{"declaration":2650,"isOffset":false,"isSlot":false,"src":"5096:3:11","valueSize":1},{"declaration":2653,"isOffset":false,"isSlot":false,"src":"5227:6:11","valueSize":1},{"declaration":2648,"isOffset":false,"isSlot":false,"src":"5209:4:11","valueSize":1}],"flags":["memory-safe"],"id":2655,"nodeType":"InlineAssembly","src":"5003:310:11"}]},"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"4816:78:11","text":" @dev Derive the location of a mapping element from the key."},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:11","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"slot","nameLocation":"4930:4:11","nodeType":"VariableDeclaration","scope":2657,"src":"4922:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"key","nameLocation":"4949:3:11","nodeType":"VariableDeclaration","scope":2657,"src":"4936:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2649,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:11"},"returnParameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"result","nameLocation":"4985:6:11","nodeType":"VariableDeclaration","scope":2657,"src":"4977:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:11"},"scope":2658,"src":"4899:420:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2659,"src":"1598:3723:11","usedErrors":[],"usedEvents":[]}],"src":"199:5123:11"},"id":11},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2782]},"id":2783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2660,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"219:1187:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2782,"linearizedBaseContracts":[2782],"name":"StorageSlot","nameLocation":"1415:11:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2664,"members":[{"constant":false,"id":2663,"mutability":"mutable","name":"value","nameLocation":"1470:5:12","nodeType":"VariableDeclaration","scope":2664,"src":"1462:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2662,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:12","nodeType":"StructDefinition","scope":2782,"src":"1433:49:12","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2667,"members":[{"constant":false,"id":2666,"mutability":"mutable","name":"value","nameLocation":"1522:5:12","nodeType":"VariableDeclaration","scope":2667,"src":"1517:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:12","nodeType":"StructDefinition","scope":2782,"src":"1488:46:12","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2670,"members":[{"constant":false,"id":2669,"mutability":"mutable","name":"value","nameLocation":"1577:5:12","nodeType":"VariableDeclaration","scope":2670,"src":"1569:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:12","nodeType":"StructDefinition","scope":2782,"src":"1540:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2673,"members":[{"constant":false,"id":2672,"mutability":"mutable","name":"value","nameLocation":"1632:5:12","nodeType":"VariableDeclaration","scope":2673,"src":"1624:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:12","nodeType":"StructDefinition","scope":2782,"src":"1595:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2676,"members":[{"constant":false,"id":2675,"mutability":"mutable","name":"value","nameLocation":"1685:5:12","nodeType":"VariableDeclaration","scope":2676,"src":"1678:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2674,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:12","nodeType":"StructDefinition","scope":2782,"src":"1650:47:12","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2679,"members":[{"constant":false,"id":2678,"mutability":"mutable","name":"value","nameLocation":"1738:5:12","nodeType":"VariableDeclaration","scope":2679,"src":"1731:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:12","nodeType":"StructDefinition","scope":2782,"src":"1703:47:12","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2682,"members":[{"constant":false,"id":2681,"mutability":"mutable","name":"value","nameLocation":"1789:5:12","nodeType":"VariableDeclaration","scope":2682,"src":"1783:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2680,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:12","nodeType":"StructDefinition","scope":2782,"src":"1756:45:12","visibility":"public"},{"body":{"id":2692,"nodeType":"Block","src":"1983:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:12","statements":[{"nodeType":"YulAssignment","src":"2032:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2689,"isOffset":false,"isSlot":true,"src":"2032:6:12","suffix":"slot","valueSize":1},{"declaration":2685,"isOffset":false,"isSlot":false,"src":"2042:4:12","valueSize":1}],"flags":["memory-safe"],"id":2691,"nodeType":"InlineAssembly","src":"1993:63:12"}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"1807:87:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:12","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"slot","nameLocation":"1931:4:12","nodeType":"VariableDeclaration","scope":2693,"src":"1923:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:12"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"r","nameLocation":"1980:1:12","nodeType":"VariableDeclaration","scope":2693,"src":"1960:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2688,"nodeType":"UserDefinedTypeName","pathNode":{"id":2687,"name":"AddressSlot","nameLocations":["1960:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"1960:11:12"},"referencedDeclaration":2664,"src":"1960:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2664_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:12"},"scope":2782,"src":"1899:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2703,"nodeType":"Block","src":"2243:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:12","statements":[{"nodeType":"YulAssignment","src":"2292:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2700,"isOffset":false,"isSlot":true,"src":"2292:6:12","suffix":"slot","valueSize":1},{"declaration":2696,"isOffset":false,"isSlot":false,"src":"2302:4:12","valueSize":1}],"flags":["memory-safe"],"id":2702,"nodeType":"InlineAssembly","src":"2253:63:12"}]},"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"2068:86:12","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:12","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"slot","nameLocation":"2191:4:12","nodeType":"VariableDeclaration","scope":2704,"src":"2183:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:12"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"r","nameLocation":"2240:1:12","nodeType":"VariableDeclaration","scope":2704,"src":"2220:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2667_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2699,"nodeType":"UserDefinedTypeName","pathNode":{"id":2698,"name":"BooleanSlot","nameLocations":["2220:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"2220:11:12"},"referencedDeclaration":2667,"src":"2220:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2667_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:12"},"scope":2782,"src":"2159:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2714,"nodeType":"Block","src":"2503:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:12","statements":[{"nodeType":"YulAssignment","src":"2552:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2711,"isOffset":false,"isSlot":true,"src":"2552:6:12","suffix":"slot","valueSize":1},{"declaration":2707,"isOffset":false,"isSlot":false,"src":"2562:4:12","valueSize":1}],"flags":["memory-safe"],"id":2713,"nodeType":"InlineAssembly","src":"2513:63:12"}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"2328:86:12","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:12","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"slot","nameLocation":"2451:4:12","nodeType":"VariableDeclaration","scope":2715,"src":"2443:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:12"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"r","nameLocation":"2500:1:12","nodeType":"VariableDeclaration","scope":2715,"src":"2480:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2710,"nodeType":"UserDefinedTypeName","pathNode":{"id":2709,"name":"Bytes32Slot","nameLocations":["2480:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2670,"src":"2480:11:12"},"referencedDeclaration":2670,"src":"2480:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2670_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:12"},"scope":2782,"src":"2419:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2725,"nodeType":"Block","src":"2763:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:12","statements":[{"nodeType":"YulAssignment","src":"2812:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2722,"isOffset":false,"isSlot":true,"src":"2812:6:12","suffix":"slot","valueSize":1},{"declaration":2718,"isOffset":false,"isSlot":false,"src":"2822:4:12","valueSize":1}],"flags":["memory-safe"],"id":2724,"nodeType":"InlineAssembly","src":"2773:63:12"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"2588:86:12","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:12","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"slot","nameLocation":"2711:4:12","nodeType":"VariableDeclaration","scope":2726,"src":"2703:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:12"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"r","nameLocation":"2760:1:12","nodeType":"VariableDeclaration","scope":2726,"src":"2740:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"Uint256Slot","nameLocations":["2740:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2673,"src":"2740:11:12"},"referencedDeclaration":2673,"src":"2740:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2673_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:12"},"scope":2782,"src":"2679:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"3020:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:12","statements":[{"nodeType":"YulAssignment","src":"3069:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2733,"isOffset":false,"isSlot":true,"src":"3069:6:12","suffix":"slot","valueSize":1},{"declaration":2729,"isOffset":false,"isSlot":false,"src":"3079:4:12","valueSize":1}],"flags":["memory-safe"],"id":2735,"nodeType":"InlineAssembly","src":"3030:63:12"}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"2848:85:12","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:12","nodeType":"FunctionDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"slot","nameLocation":"2969:4:12","nodeType":"VariableDeclaration","scope":2737,"src":"2961:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:12"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"r","nameLocation":"3017:1:12","nodeType":"VariableDeclaration","scope":2737,"src":"2998:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2676_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"Int256Slot","nameLocations":["2998:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2676,"src":"2998:10:12"},"referencedDeclaration":2676,"src":"2998:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2676_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:12"},"scope":2782,"src":"2938:161:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2747,"nodeType":"Block","src":"3277:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:12","statements":[{"nodeType":"YulAssignment","src":"3326:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2744,"isOffset":false,"isSlot":true,"src":"3326:6:12","suffix":"slot","valueSize":1},{"declaration":2740,"isOffset":false,"isSlot":false,"src":"3336:4:12","valueSize":1}],"flags":["memory-safe"],"id":2746,"nodeType":"InlineAssembly","src":"3287:63:12"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"3105:85:12","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2748,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:12","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"slot","nameLocation":"3226:4:12","nodeType":"VariableDeclaration","scope":2748,"src":"3218:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:12"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"r","nameLocation":"3274:1:12","nodeType":"VariableDeclaration","scope":2748,"src":"3255:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2679_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2743,"nodeType":"UserDefinedTypeName","pathNode":{"id":2742,"name":"StringSlot","nameLocations":["3255:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2679,"src":"3255:10:12"},"referencedDeclaration":2679,"src":"3255:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2679_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:12"},"scope":2782,"src":"3195:161:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"3558:85:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:12","statements":[{"nodeType":"YulAssignment","src":"3607:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2755,"isOffset":false,"isSlot":true,"src":"3607:6:12","suffix":"slot","valueSize":1},{"declaration":2751,"isOffset":false,"isSlot":true,"src":"3617:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2757,"nodeType":"InlineAssembly","src":"3568:69:12"}]},"documentation":{"id":2749,"nodeType":"StructuredDocumentation","src":"3362:101:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:12","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"store","nameLocation":"3506:5:12","nodeType":"VariableDeclaration","scope":2759,"src":"3491:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2750,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:12"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"r","nameLocation":"3555:1:12","nodeType":"VariableDeclaration","scope":2759,"src":"3536:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2679_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"StringSlot","nameLocations":["3536:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2679,"src":"3536:10:12"},"referencedDeclaration":2679,"src":"3536:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2679_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:12"},"scope":2782,"src":"3468:175:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2769,"nodeType":"Block","src":"3818:79:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:12","statements":[{"nodeType":"YulAssignment","src":"3867:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2766,"isOffset":false,"isSlot":true,"src":"3867:6:12","suffix":"slot","valueSize":1},{"declaration":2762,"isOffset":false,"isSlot":false,"src":"3877:4:12","valueSize":1}],"flags":["memory-safe"],"id":2768,"nodeType":"InlineAssembly","src":"3828:63:12"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"3649:84:12","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2770,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:12","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"slot","nameLocation":"3768:4:12","nodeType":"VariableDeclaration","scope":2770,"src":"3760:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:12"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"r","nameLocation":"3815:1:12","nodeType":"VariableDeclaration","scope":2770,"src":"3797:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2682_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2765,"nodeType":"UserDefinedTypeName","pathNode":{"id":2764,"name":"BytesSlot","nameLocations":["3797:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2682,"src":"3797:9:12"},"referencedDeclaration":2682,"src":"3797:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2682_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:12"},"scope":2782,"src":"3738:159:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"4094:85:12","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:12","statements":[{"nodeType":"YulAssignment","src":"4143:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2777,"isOffset":false,"isSlot":true,"src":"4143:6:12","suffix":"slot","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":true,"src":"4153:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2779,"nodeType":"InlineAssembly","src":"4104:69:12"}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"3903:99:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:12","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"store","nameLocation":"4043:5:12","nodeType":"VariableDeclaration","scope":2781,"src":"4029:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2772,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:12"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"r","nameLocation":"4091:1:12","nodeType":"VariableDeclaration","scope":2781,"src":"4073:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2682_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2776,"nodeType":"UserDefinedTypeName","pathNode":{"id":2775,"name":"BytesSlot","nameLocations":["4073:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2682,"src":"4073:9:12"},"referencedDeclaration":2682,"src":"4073:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2682_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:12"},"scope":2782,"src":"4007:172:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2783,"src":"1407:2774:12","usedErrors":[],"usedEvents":[]}],"src":"193:3989:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5624],"SafeCast":[7389],"SignedMath":[7533],"Strings":[3982]},"id":3983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2784,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3983,"sourceUnit":5625,"src":"127:37:13","symbolAliases":[{"foreign":{"id":2785,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"135:4:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3983,"sourceUnit":7390,"src":"165:45:13","symbolAliases":[{"foreign":{"id":2787,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3983,"sourceUnit":7534,"src":"211:49:13","symbolAliases":[{"foreign":{"id":2789,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"219:10:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"262:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":3982,"linearizedBaseContracts":[3982],"name":"Strings","nameLocation":"305:7:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2793,"libraryName":{"id":2792,"name":"SafeCast","nameLocations":["325:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":7389,"src":"325:8:13"},"nodeType":"UsingForDirective","src":"319:21:13"},{"constant":true,"id":2796,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:13","nodeType":"VariableDeclaration","scope":3982,"src":"346:56:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2794,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2799,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:13","nodeType":"VariableDeclaration","scope":3982,"src":"408:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2797,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"457:81:13","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2806,"name":"StringsInsufficientHexLength","nameLocation":"549:28:13","nodeType":"ErrorDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"value","nameLocation":"586:5:13","nodeType":"VariableDeclaration","scope":2806,"src":"578:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"length","nameLocation":"601:6:13","nodeType":"VariableDeclaration","scope":2806,"src":"593:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:13"},"src":"543:66:13"},{"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"615:108:13","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2809,"name":"StringsInvalidChar","nameLocation":"734:18:13","nodeType":"ErrorDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[],"src":"752:2:13"},"src":"728:27:13"},{"documentation":{"id":2810,"nodeType":"StructuredDocumentation","src":"761:84:13","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2812,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:13","nodeType":"ErrorDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[],"src":"883:2:13"},"src":"850:36:13"},{"body":{"id":2859,"nodeType":"Block","src":"1058:561:13","statements":[{"id":2858,"nodeType":"UncheckedBlock","src":"1068:545:13","statements":[{"assignments":[2821],"declarations":[{"constant":false,"id":2821,"mutability":"mutable","name":"length","nameLocation":"1100:6:13","nodeType":"VariableDeclaration","scope":2858,"src":"1092:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2828,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1120:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2822,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"1109:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5624_$","typeString":"type(library Math)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:13","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5396,"src":"1109:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:13"},{"assignments":[2830],"declarations":[{"constant":false,"id":2830,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:13","nodeType":"VariableDeclaration","scope":2858,"src":"1144:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2829,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2835,"initialValue":{"arguments":[{"id":2833,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"1178:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2831,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:13"},{"assignments":[2837],"declarations":[{"constant":false,"id":2837,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:13","nodeType":"VariableDeclaration","scope":2858,"src":"1199:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"nodeType":"VariableDeclarationStatement","src":"1199:11:13"},{"AST":{"nodeType":"YulBlock","src":"1249:67:13","statements":[{"nodeType":"YulAssignment","src":"1267:35:13","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:13","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:13"},"nodeType":"YulFunctionCall","src":"1286:15:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:13"},"nodeType":"YulFunctionCall","src":"1274:28:13"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2830,"isOffset":false,"isSlot":false,"src":"1278:6:13","valueSize":1},{"declaration":2821,"isOffset":false,"isSlot":false,"src":"1294:6:13","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"1267:3:13","valueSize":1}],"flags":["memory-safe"],"id":2839,"nodeType":"InlineAssembly","src":"1224:92:13"},{"body":{"id":2854,"nodeType":"Block","src":"1342:234:13","statements":[{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:13","subExpression":{"id":2841,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1360:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2843,"nodeType":"ExpressionStatement","src":"1360:5:13"},{"AST":{"nodeType":"YulBlock","src":"1408:86:13","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:13"},"nodeType":"YulFunctionCall","src":"1448:14:13"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:13"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:13"},"nodeType":"YulFunctionCall","src":"1443:32:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:13"},"nodeType":"YulFunctionCall","src":"1430:46:13"},"nodeType":"YulExpressionStatement","src":"1430:46:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2796,"isOffset":false,"isSlot":false,"src":"1464:10:13","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"1438:3:13","valueSize":1},{"declaration":2815,"isOffset":false,"isSlot":false,"src":"1452:5:13","valueSize":1}],"flags":["memory-safe"],"id":2844,"nodeType":"InlineAssembly","src":"1383:111:13"},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1511:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"1511:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1544:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2853,"nodeType":"IfStatement","src":"1540:21:13","trueBody":{"id":2852,"nodeType":"Break","src":"1556:5:13"}}]},"condition":{"hexValue":"74727565","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2855,"nodeType":"WhileStatement","src":"1329:247:13"},{"expression":{"id":2856,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1596:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2819,"id":2857,"nodeType":"Return","src":"1589:13:13"}]}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"892:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:13","nodeType":"FunctionDefinition","parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"value","nameLocation":"1013:5:13","nodeType":"VariableDeclaration","scope":2860,"src":"1005:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:13"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2860,"src":"1043:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2817,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:13"},"scope":3982,"src":"987:632:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"1795:92:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"1826:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:13","trueExpression":{"hexValue":"2d","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"1872:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2878,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"1857:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7533_$","typeString":"type(library SignedMath)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:13","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7532,"src":"1857:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2877,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1848:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:13","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:13","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2867,"id":2884,"nodeType":"Return","src":"1805:75:13"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"1625:89:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:13","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"value","nameLocation":"1750:5:13","nodeType":"VariableDeclaration","scope":2886,"src":"1743:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2862,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:13"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"1780:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2865,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:13"},"scope":3982,"src":"1719:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2905,"nodeType":"Block","src":"2066:100:13","statements":[{"id":2904,"nodeType":"UncheckedBlock","src":"2076:84:13","statements":[{"expression":{"arguments":[{"id":2895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"2119:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"2138:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2896,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"2126:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5624_$","typeString":"type(library Math)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:13","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5567,"src":"2126:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2894,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":2989,"src":"2107:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2893,"id":2903,"nodeType":"Return","src":"2100:49:13"}]}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"1893:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2906,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:13","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"2021:5:13","nodeType":"VariableDeclaration","scope":2906,"src":"2013:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:13"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2906,"src":"2051:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2891,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:13"},"scope":3982,"src":"1992:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2988,"nodeType":"Block","src":"2379:435:13","statements":[{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:13","nodeType":"VariableDeclaration","scope":2988,"src":"2389:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2919,"initialValue":{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:13"},{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:13","nodeType":"VariableDeclaration","scope":2988,"src":"2425:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2920,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2930,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2925,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2461:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2922,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:13"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2931,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2482:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2933,"indexExpression":{"hexValue":"30","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2936,"nodeType":"ExpressionStatement","src":"2482:15:13"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2937,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2507:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2939,"indexExpression":{"hexValue":"31","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2942,"nodeType":"ExpressionStatement","src":"2507:15:13"},{"body":{"id":2971,"nodeType":"Block","src":"2577:95:13","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2957,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2591:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2959,"indexExpression":{"id":2958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2598:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2960,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"2603:10:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2964,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2614:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2966,"nodeType":"ExpressionStatement","src":"2591:40:13"},{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2967,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2645:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ExpressionStatement","src":"2645:16:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2565:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"initializationExpression":{"assignments":[2944],"declarations":[{"constant":false,"id":2944,"mutability":"mutable","name":"i","nameLocation":"2545:1:13","nodeType":"VariableDeclaration","scope":2972,"src":"2537:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2950,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2946,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2553:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:13"},"loopExpression":{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:13","subExpression":{"id":2954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2574:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"2572:3:13"},"nodeType":"ForStatement","src":"2532:140:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2685:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"2681:96:13","trueBody":{"id":2981,"nodeType":"Block","src":"2702:75:13","statements":[{"errorCall":{"arguments":[{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2752:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2978,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2759:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2976,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"2723:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2980,"nodeType":"RevertStatement","src":"2716:50:13"}]}},{"expression":{"arguments":[{"id":2985,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2800:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2983,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:13","typeDescriptions":{}}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2915,"id":2987,"nodeType":"Return","src":"2786:21:13"}]},"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"2172:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2989,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:13","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"value","nameLocation":"2318:5:13","nodeType":"VariableDeclaration","scope":2989,"src":"2310:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"length","nameLocation":"2333:6:13","nodeType":"VariableDeclaration","scope":2989,"src":"2325:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:13"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2989,"src":"2364:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2913,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:13"},"scope":3982,"src":"2289:525:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3008,"nodeType":"Block","src":"3046:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3002,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"3091:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3000,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:13","typeDescriptions":{}}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:13","typeDescriptions":{}}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3005,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3099:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2997,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":2989,"src":"3063:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2996,"id":3007,"nodeType":"Return","src":"3056:58:13"}]},"documentation":{"id":2990,"nodeType":"StructuredDocumentation","src":"2820:148:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3009,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:13","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"addr","nameLocation":"3002:4:13","nodeType":"VariableDeclaration","scope":3009,"src":"2994:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2991,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:13"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3009,"src":"3031:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2994,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:13"},"scope":3982,"src":"2973:148:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3073,"nodeType":"Block","src":"3378:642:13","statements":[{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:13","nodeType":"VariableDeclaration","scope":3073,"src":"3388:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3025,"initialValue":{"arguments":[{"arguments":[{"id":3022,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"3428:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3021,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":3009,"src":"3416:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3019,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:13","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:13"},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:13","nodeType":"VariableDeclaration","scope":3073,"src":"3519:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3028,"nodeType":"VariableDeclarationStatement","src":"3519:17:13"},{"AST":{"nodeType":"YulBlock","src":"3571:78:13","statements":[{"nodeType":"YulAssignment","src":"3585:54:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:13","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:13"},"nodeType":"YulFunctionCall","src":"3616:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:13","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:13"},"nodeType":"YulFunctionCall","src":"3606:32:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:13"},"nodeType":"YulFunctionCall","src":"3598:41:13"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3018,"isOffset":false,"isSlot":false,"src":"3620:6:13","valueSize":1},{"declaration":3027,"isOffset":false,"isSlot":false,"src":"3585:9:13","valueSize":1}],"flags":["memory-safe"],"id":3029,"nodeType":"InlineAssembly","src":"3546:103:13"},{"body":{"id":3066,"nodeType":"Block","src":"3692:291:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3798:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3047,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3827:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3049,"indexExpression":{"id":3048,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3834:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3045,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:13","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3061,"nodeType":"IfStatement","src":"3794:150:13","trueBody":{"id":3060,"nodeType":"Block","src":"3844:100:13","statements":[{"expression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3054,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3912:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3056,"indexExpression":{"id":3055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3919:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3059,"nodeType":"ExpressionStatement","src":"3912:17:13"}]}},{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3062,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3957:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"3957:15:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3680:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3067,"initializationExpression":{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"i","nameLocation":"3672:1:13","nodeType":"VariableDeclaration","scope":3067,"src":"3664:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3033,"initialValue":{"hexValue":"3431","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:13","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:13"},"loopExpression":{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:13","subExpression":{"id":3037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3689:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"3687:3:13"},"nodeType":"ForStatement","src":"3659:324:13"},{"expression":{"arguments":[{"id":3070,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"4006:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3068,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:13","typeDescriptions":{}}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3016,"id":3072,"nodeType":"Return","src":"3992:21:13"}]},"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"3127:165:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3074,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:13","nodeType":"FunctionDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"addr","nameLocation":"3334:4:13","nodeType":"VariableDeclaration","scope":3074,"src":"3326:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:13"},"returnParameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3074,"src":"3363:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3014,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:13"},"scope":3982,"src":"3297:723:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"4175:104:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3086,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4198:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3084,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:13","typeDescriptions":{}}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:13","memberName":"length","nodeType":"MemberAccess","src":"4192:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"4217:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3089,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:13","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:13","memberName":"length","nodeType":"MemberAccess","src":"4211:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4246:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3096,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:13","typeDescriptions":{}}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4230:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"4269:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3102,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:13","typeDescriptions":{}}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3101,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4253:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3083,"id":3109,"nodeType":"Return","src":"4185:87:13"}]},"documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"4026:66:13","text":" @dev Returns true if the two strings are equal."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:13","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"a","nameLocation":"4126:1:13","nodeType":"VariableDeclaration","scope":3111,"src":"4112:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3076,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"b","nameLocation":"4143:1:13","nodeType":"VariableDeclaration","scope":3111,"src":"4129:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3078,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:13"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"4169:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3081,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:13"},"scope":3982,"src":"4097:182:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3129,"nodeType":"Block","src":"4576:64:13","statements":[{"expression":{"arguments":[{"id":3120,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"4603:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3124,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"4619:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3122,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:13","typeDescriptions":{}}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:13","memberName":"length","nodeType":"MemberAccess","src":"4613:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3119,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3130,3161],"referencedDeclaration":3161,"src":"4593:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3118,"id":3128,"nodeType":"Return","src":"4586:47:13"}]},"documentation":{"id":3112,"nodeType":"StructuredDocumentation","src":"4285:214:13","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3130,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:13","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"input","nameLocation":"4537:5:13","nodeType":"VariableDeclaration","scope":3130,"src":"4523:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3113,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:13"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3130,"src":"4567:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:13"},"scope":3982,"src":"4504:136:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3160,"nodeType":"Block","src":"5038:153:13","statements":[{"assignments":[3143,3145],"declarations":[{"constant":false,"id":3143,"mutability":"mutable","name":"success","nameLocation":"5054:7:13","nodeType":"VariableDeclaration","scope":3160,"src":"5049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3142,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"value","nameLocation":"5071:5:13","nodeType":"VariableDeclaration","scope":3160,"src":"5063:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3151,"initialValue":{"arguments":[{"id":3147,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"5093:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3148,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"5100:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3149,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"5107:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3146,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3182,3219],"referencedDeclaration":3219,"src":"5080:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:13"},{"condition":{"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:13","subExpression":{"id":3152,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"5126:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3157,"nodeType":"IfStatement","src":"5121:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3154,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"5142:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3156,"nodeType":"RevertStatement","src":"5135:27:13"}},{"expression":{"id":3158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"5179:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3141,"id":3159,"nodeType":"Return","src":"5172:12:13"}]},"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"4646:287:13","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3161,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:13","nodeType":"FunctionDefinition","parameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"input","nameLocation":"4971:5:13","nodeType":"VariableDeclaration","scope":3161,"src":"4957:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3132,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"begin","nameLocation":"4986:5:13","nodeType":"VariableDeclaration","scope":3161,"src":"4978:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"end","nameLocation":"5001:3:13","nodeType":"VariableDeclaration","scope":3161,"src":"4993:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:13"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3161,"src":"5029:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:13"},"scope":3982,"src":"4938:253:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"5512:83:13","statements":[{"expression":{"arguments":[{"id":3172,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"5558:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3176,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"5574:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3174,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:13","typeDescriptions":{}}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:13","memberName":"length","nodeType":"MemberAccess","src":"5568:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3171,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5529:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3170,"id":3180,"nodeType":"Return","src":"5522:66:13"}]},"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"5197:215:13","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:13","nodeType":"FunctionDefinition","parameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"input","nameLocation":"5453:5:13","nodeType":"VariableDeclaration","scope":3182,"src":"5439:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3163,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:13"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"success","nameLocation":"5488:7:13","nodeType":"VariableDeclaration","scope":3182,"src":"5483:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3166,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"value","nameLocation":"5505:5:13","nodeType":"VariableDeclaration","scope":3182,"src":"5497:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:13"},"scope":3982,"src":"5417:178:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"5997:144:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6011:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3199,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"6023:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3197,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:13","typeDescriptions":{}}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:13","memberName":"length","nodeType":"MemberAccess","src":"6017:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"6040:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3204,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6048:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3211,"nodeType":"IfStatement","src":"6007:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3195,"id":3210,"nodeType":"Return","src":"6053:17:13"}},{"expression":{"arguments":[{"id":3213,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"6116:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3214,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"6123:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3215,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6130:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3212,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"6087:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3195,"id":3217,"nodeType":"Return","src":"6080:54:13"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"5601:238:13","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:13","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"input","nameLocation":"5889:5:13","nodeType":"VariableDeclaration","scope":3219,"src":"5875:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3184,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"begin","nameLocation":"5912:5:13","nodeType":"VariableDeclaration","scope":3219,"src":"5904:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"end","nameLocation":"5935:3:13","nodeType":"VariableDeclaration","scope":3219,"src":"5927:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:13"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"success","nameLocation":"5973:7:13","nodeType":"VariableDeclaration","scope":3219,"src":"5968:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3191,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"5990:5:13","nodeType":"VariableDeclaration","scope":3219,"src":"5982:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:13"},"scope":3982,"src":"5844:297:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3288,"nodeType":"Block","src":"6521:347:13","statements":[{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:13","nodeType":"VariableDeclaration","scope":3288,"src":"6531:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3233,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3239,"initialValue":{"arguments":[{"id":3237,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6559:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3235,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:13","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:13"},{"assignments":[3241],"declarations":[{"constant":false,"id":3241,"mutability":"mutable","name":"result","nameLocation":"6584:6:13","nodeType":"VariableDeclaration","scope":3288,"src":"6576:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3243,"initialValue":{"hexValue":"30","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:13"},{"body":{"id":3282,"nodeType":"Block","src":"6642:189:13","statements":[{"assignments":[3255],"declarations":[{"constant":false,"id":3255,"mutability":"mutable","name":"chr","nameLocation":"6662:3:13","nodeType":"VariableDeclaration","scope":3282,"src":"6656:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3254,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3265,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3260,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"6711:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3261,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"6719:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3259,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"6688:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3257,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:13","typeDescriptions":{}}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3256,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"6668:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"6741:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3273,"nodeType":"IfStatement","src":"6737:30:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3232,"id":3272,"nodeType":"Return","src":"6750:17:13"}},{"expression":{"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"6781:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3277,"nodeType":"ExpressionStatement","src":"6781:12:13"},{"expression":{"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"6807:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3279,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"6817:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3281,"nodeType":"ExpressionStatement","src":"6807:13:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"6628:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3249,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"6632:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"initializationExpression":{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"i","nameLocation":"6617:1:13","nodeType":"VariableDeclaration","scope":3283,"src":"6609:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3247,"initialValue":{"id":3246,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"6621:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:13"},"loopExpression":{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:13","subExpression":{"id":3251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"6639:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ExpressionStatement","src":"6637:3:13"},"nodeType":"ForStatement","src":"6604:227:13"},{"expression":{"components":[{"hexValue":"74727565","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"6854:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3232,"id":3287,"nodeType":"Return","src":"6840:21:13"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"6147:201:13","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3289,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:13","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"input","nameLocation":"6414:5:13","nodeType":"VariableDeclaration","scope":3289,"src":"6400:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3221,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"begin","nameLocation":"6437:5:13","nodeType":"VariableDeclaration","scope":3289,"src":"6429:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"end","nameLocation":"6460:3:13","nodeType":"VariableDeclaration","scope":3289,"src":"6452:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:13"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"success","nameLocation":"6497:7:13","nodeType":"VariableDeclaration","scope":3289,"src":"6492:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3228,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"value","nameLocation":"6514:5:13","nodeType":"VariableDeclaration","scope":3289,"src":"6506:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:13"},"scope":3982,"src":"6353:515:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3307,"nodeType":"Block","src":"7165:63:13","statements":[{"expression":{"arguments":[{"id":3298,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"7191:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3302,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"7207:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3300,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:13","typeDescriptions":{}}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:13","memberName":"length","nodeType":"MemberAccess","src":"7201:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3297,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3308,3339],"referencedDeclaration":3339,"src":"7182:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3296,"id":3306,"nodeType":"Return","src":"7175:46:13"}]},"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"6874:216:13","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3308,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:13","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"input","nameLocation":"7127:5:13","nodeType":"VariableDeclaration","scope":3308,"src":"7113:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3291,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:13"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3308,"src":"7157:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3294,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:13"},"scope":3982,"src":"7095:133:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"7633:151:13","statements":[{"assignments":[3321,3323],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"success","nameLocation":"7649:7:13","nodeType":"VariableDeclaration","scope":3338,"src":"7644:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3320,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"value","nameLocation":"7665:5:13","nodeType":"VariableDeclaration","scope":3338,"src":"7658:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3322,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3329,"initialValue":{"arguments":[{"id":3325,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"7686:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3326,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"7693:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3327,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"7700:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3324,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3360,3402],"referencedDeclaration":3402,"src":"7674:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:13"},{"condition":{"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:13","subExpression":{"id":3330,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"7719:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3335,"nodeType":"IfStatement","src":"7714:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3332,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"7735:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3334,"nodeType":"RevertStatement","src":"7728:27:13"}},{"expression":{"id":3336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"7772:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3319,"id":3337,"nodeType":"Return","src":"7765:12:13"}]},"documentation":{"id":3309,"nodeType":"StructuredDocumentation","src":"7234:296:13","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:13","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"input","nameLocation":"7567:5:13","nodeType":"VariableDeclaration","scope":3339,"src":"7553:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3310,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"begin","nameLocation":"7582:5:13","nodeType":"VariableDeclaration","scope":3339,"src":"7574:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"end","nameLocation":"7597:3:13","nodeType":"VariableDeclaration","scope":3339,"src":"7589:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:13"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"7625:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3317,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:13"},"scope":3982,"src":"7535:249:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3359,"nodeType":"Block","src":"8175:82:13","statements":[{"expression":{"arguments":[{"id":3350,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"8220:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3354,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"8236:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3352,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:13","typeDescriptions":{}}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:13","memberName":"length","nodeType":"MemberAccess","src":"8230:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3349,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"8192:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3348,"id":3358,"nodeType":"Return","src":"8185:65:13"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"7790:287:13","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3360,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:13","nodeType":"FunctionDefinition","parameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"input","nameLocation":"8117:5:13","nodeType":"VariableDeclaration","scope":3360,"src":"8103:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3341,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:13"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"success","nameLocation":"8152:7:13","nodeType":"VariableDeclaration","scope":3360,"src":"8147:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3344,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"value","nameLocation":"8168:5:13","nodeType":"VariableDeclaration","scope":3360,"src":"8161:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3346,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:13"},"scope":3982,"src":"8082:175:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3365,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:13","nodeType":"VariableDeclaration","scope":3982,"src":"8263:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3401,"nodeType":"Block","src":"8779:143:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"8793:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3382,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"8805:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3380,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:13","typeDescriptions":{}}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:13","memberName":"length","nodeType":"MemberAccess","src":"8799:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"8822:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3387,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"8830:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3394,"nodeType":"IfStatement","src":"8789:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3378,"id":3393,"nodeType":"Return","src":"8835:17:13"}},{"expression":{"arguments":[{"id":3396,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"8897:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3397,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"8904:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3398,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"8911:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3395,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"8869:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3378,"id":3400,"nodeType":"Return","src":"8862:53:13"}]},"documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"8320:303:13","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:13","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"input","nameLocation":"8672:5:13","nodeType":"VariableDeclaration","scope":3402,"src":"8658:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3367,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"begin","nameLocation":"8695:5:13","nodeType":"VariableDeclaration","scope":3402,"src":"8687:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"end","nameLocation":"8718:3:13","nodeType":"VariableDeclaration","scope":3402,"src":"8710:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:13"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"success","nameLocation":"8756:7:13","nodeType":"VariableDeclaration","scope":3402,"src":"8751:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3374,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"value","nameLocation":"8772:5:13","nodeType":"VariableDeclaration","scope":3402,"src":"8765:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3376,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:13"},"scope":3982,"src":"8628:294:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3522,"nodeType":"Block","src":"9299:812:13","statements":[{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:13","nodeType":"VariableDeclaration","scope":3522,"src":"9309:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3416,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3422,"initialValue":{"arguments":[{"id":3420,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"9337:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3418,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:13","typeDescriptions":{}}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:13"},{"assignments":[3424],"declarations":[{"constant":false,"id":3424,"mutability":"mutable","name":"sign","nameLocation":"9407:4:13","nodeType":"VariableDeclaration","scope":3522,"src":"9400:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3423,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3440,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"9414:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3426,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3435,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9471:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3436,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"9479:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3434,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"9448:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3432,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:13","typeDescriptions":{}}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:13","trueExpression":{"arguments":[{"hexValue":"30","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3428,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:13","typeDescriptions":{}}},"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:13"},{"assignments":[3442],"declarations":[{"constant":false,"id":3442,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:13","nodeType":"VariableDeclaration","scope":3522,"src":"9567:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3441,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3449,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"9587:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3444,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:13","typeDescriptions":{}}},"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:13"},{"assignments":[3451],"declarations":[{"constant":false,"id":3451,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:13","nodeType":"VariableDeclaration","scope":3522,"src":"9616:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3450,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3458,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3452,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"9636:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3453,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:13","typeDescriptions":{}}},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:13"},{"assignments":[3460],"declarations":[{"constant":false,"id":3460,"mutability":"mutable","name":"offset","nameLocation":"9673:6:13","nodeType":"VariableDeclaration","scope":3522,"src":"9665:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3467,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"9683:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3462,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"9699:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"9682:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:13"},{"assignments":[3469,3471],"declarations":[{"constant":false,"id":3469,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:13","nodeType":"VariableDeclaration","scope":3522,"src":"9733:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3468,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:13","nodeType":"VariableDeclaration","scope":3522,"src":"9750:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3479,"initialValue":{"arguments":[{"id":3473,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"9783:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3474,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"9790:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3475,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"9798:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3477,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"9806:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3472,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3182,3219],"referencedDeclaration":3219,"src":"9770:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3480,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"9825:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"9839:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3482,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"9850:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"9967:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3501,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"9981:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"9997:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3504,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"10009:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3415,"id":3519,"nodeType":"Return","src":"10087:17:13"},"id":3520,"nodeType":"IfStatement","src":"9963:141:13","trueBody":{"id":3515,"nodeType":"Block","src":"10025:56:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3509,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10053:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:13","memberName":"min","nodeType":"MemberAccess","src":"10053:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3415,"id":3514,"nodeType":"Return","src":"10039:31:13"}]}},"id":3521,"nodeType":"IfStatement","src":"9821:283:13","trueBody":{"id":3499,"nodeType":"Block","src":"9866:91:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3486,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"9894:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3494,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"9936:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3492,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:13","typeDescriptions":{}}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:13","trueExpression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:13","subExpression":{"arguments":[{"id":3489,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"9917:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3487,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:13","typeDescriptions":{}}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3415,"id":3498,"nodeType":"Return","src":"9880:66:13"}]}}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"8928:200:13","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3523,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:13","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"input","nameLocation":"9193:5:13","nodeType":"VariableDeclaration","scope":3523,"src":"9179:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3404,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"begin","nameLocation":"9216:5:13","nodeType":"VariableDeclaration","scope":3523,"src":"9208:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"end","nameLocation":"9239:3:13","nodeType":"VariableDeclaration","scope":3523,"src":"9231:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:13"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"success","nameLocation":"9276:7:13","nodeType":"VariableDeclaration","scope":3523,"src":"9271:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3411,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"value","nameLocation":"9292:5:13","nodeType":"VariableDeclaration","scope":3523,"src":"9285:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3413,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:13"},"scope":3982,"src":"9133:978:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3541,"nodeType":"Block","src":"10456:67:13","statements":[{"expression":{"arguments":[{"id":3532,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"10486:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3536,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"10502:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3534,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:13","typeDescriptions":{}}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:13","memberName":"length","nodeType":"MemberAccess","src":"10496:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3531,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3542,3573],"referencedDeclaration":3573,"src":"10473:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3530,"id":3540,"nodeType":"Return","src":"10466:50:13"}]},"documentation":{"id":3524,"nodeType":"StructuredDocumentation","src":"10117:259:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:13","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"input","nameLocation":"10417:5:13","nodeType":"VariableDeclaration","scope":3542,"src":"10403:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3525,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:13"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3542,"src":"10447:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:13"},"scope":3982,"src":"10381:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3572,"nodeType":"Block","src":"10937:156:13","statements":[{"assignments":[3555,3557],"declarations":[{"constant":false,"id":3555,"mutability":"mutable","name":"success","nameLocation":"10953:7:13","nodeType":"VariableDeclaration","scope":3572,"src":"10948:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3554,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"value","nameLocation":"10970:5:13","nodeType":"VariableDeclaration","scope":3572,"src":"10962:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3563,"initialValue":{"arguments":[{"id":3559,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"10995:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3560,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"11002:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3561,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"11009:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3558,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3594,3631],"referencedDeclaration":3631,"src":"10979:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:13"},{"condition":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:13","subExpression":{"id":3564,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"11028:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"nodeType":"IfStatement","src":"11023:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3566,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"11044:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3568,"nodeType":"RevertStatement","src":"11037:27:13"}},{"expression":{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"11081:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3553,"id":3571,"nodeType":"Return","src":"11074:12:13"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"10529:300:13","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:13","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"input","nameLocation":"10870:5:13","nodeType":"VariableDeclaration","scope":3573,"src":"10856:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3544,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"begin","nameLocation":"10885:5:13","nodeType":"VariableDeclaration","scope":3573,"src":"10877:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"end","nameLocation":"10900:3:13","nodeType":"VariableDeclaration","scope":3573,"src":"10892:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:13"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"10928:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:13"},"scope":3982,"src":"10834:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3593,"nodeType":"Block","src":"11420:86:13","statements":[{"expression":{"arguments":[{"id":3584,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"11469:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3588,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"11485:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3586,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:13","typeDescriptions":{}}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:13","memberName":"length","nodeType":"MemberAccess","src":"11479:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3583,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11437:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3582,"id":3592,"nodeType":"Return","src":"11430:69:13"}]},"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"11099:218:13","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3594,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:13","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"input","nameLocation":"11361:5:13","nodeType":"VariableDeclaration","scope":3594,"src":"11347:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3575,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:13"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"success","nameLocation":"11396:7:13","nodeType":"VariableDeclaration","scope":3594,"src":"11391:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3578,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"value","nameLocation":"11413:5:13","nodeType":"VariableDeclaration","scope":3594,"src":"11405:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:13"},"scope":3982,"src":"11322:184:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3630,"nodeType":"Block","src":"11914:147:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11928:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3611,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"11940:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3609,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:13","typeDescriptions":{}}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:13","memberName":"length","nodeType":"MemberAccess","src":"11934:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"11957:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3616,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11965:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3623,"nodeType":"IfStatement","src":"11924:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3607,"id":3622,"nodeType":"Return","src":"11970:17:13"}},{"expression":{"arguments":[{"id":3625,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"12036:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3626,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"12043:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3627,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"12050:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3624,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"12004:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3607,"id":3629,"nodeType":"Return","src":"11997:57:13"}]},"documentation":{"id":3595,"nodeType":"StructuredDocumentation","src":"11512:241:13","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:13","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"input","nameLocation":"11806:5:13","nodeType":"VariableDeclaration","scope":3631,"src":"11792:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3596,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"begin","nameLocation":"11829:5:13","nodeType":"VariableDeclaration","scope":3631,"src":"11821:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"end","nameLocation":"11852:3:13","nodeType":"VariableDeclaration","scope":3631,"src":"11844:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:13"},"returnParameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"success","nameLocation":"11890:7:13","nodeType":"VariableDeclaration","scope":3631,"src":"11885:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3603,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"value","nameLocation":"11907:5:13","nodeType":"VariableDeclaration","scope":3631,"src":"11899:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:13"},"scope":3982,"src":"11758:303:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3733,"nodeType":"Block","src":"12447:880:13","statements":[{"assignments":[3646],"declarations":[{"constant":false,"id":3646,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:13","nodeType":"VariableDeclaration","scope":3733,"src":"12457:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3645,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3651,"initialValue":{"arguments":[{"id":3649,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"12485:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3647,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:13","typeDescriptions":{}}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:13"},{"assignments":[3653],"declarations":[{"constant":false,"id":3653,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:13","nodeType":"VariableDeclaration","scope":3733,"src":"12539:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3652,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3673,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"12557:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3655,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"12563:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3663,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"12607:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3664,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"12615:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3662,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"12584:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3660,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:13","typeDescriptions":{}}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3667,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:13","typeDescriptions":{}}},"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:13"},{"assignments":[3675],"declarations":[{"constant":false,"id":3675,"mutability":"mutable","name":"offset","nameLocation":"12727:6:13","nodeType":"VariableDeclaration","scope":3733,"src":"12719:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3681,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3676,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"12736:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"12736:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:13"},{"assignments":[3683],"declarations":[{"constant":false,"id":3683,"mutability":"mutable","name":"result","nameLocation":"12777:6:13","nodeType":"VariableDeclaration","scope":3733,"src":"12769:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3685,"initialValue":{"hexValue":"30","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:13"},{"body":{"id":3727,"nodeType":"Block","src":"12844:446:13","statements":[{"assignments":[3699],"declarations":[{"constant":false,"id":3699,"mutability":"mutable","name":"chr","nameLocation":"12864:3:13","nodeType":"VariableDeclaration","scope":3727,"src":"12858:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3698,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3709,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3704,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"12913:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"12921:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3703,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"12890:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3701,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:13","typeDescriptions":{}}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3700,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"12870:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"12943:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3717,"nodeType":"IfStatement","src":"12939:31:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3644,"id":3716,"nodeType":"Return","src":"12953:17:13"}},{"expression":{"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"12984:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3721,"nodeType":"ExpressionStatement","src":"12984:12:13"},{"id":3726,"nodeType":"UncheckedBlock","src":"13010:270:13","statements":[{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"13252:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3723,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"13262:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"13252:13:13"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3692,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"12830:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3693,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"12834:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3728,"initializationExpression":{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"i","nameLocation":"12810:1:13","nodeType":"VariableDeclaration","scope":3728,"src":"12802:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3691,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"12814:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3689,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"12822:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:13"},"loopExpression":{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:13","subExpression":{"id":3695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"12841:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3697,"nodeType":"ExpressionStatement","src":"12839:3:13"},"nodeType":"ForStatement","src":"12797:493:13"},{"expression":{"components":[{"hexValue":"74727565","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"13313:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3644,"id":3732,"nodeType":"Return","src":"13299:21:13"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"12067:204:13","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3734,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:13","nodeType":"FunctionDefinition","parameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"input","nameLocation":"12340:5:13","nodeType":"VariableDeclaration","scope":3734,"src":"12326:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3633,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3636,"mutability":"mutable","name":"begin","nameLocation":"12363:5:13","nodeType":"VariableDeclaration","scope":3734,"src":"12355:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"end","nameLocation":"12386:3:13","nodeType":"VariableDeclaration","scope":3734,"src":"12378:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:13"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"success","nameLocation":"12423:7:13","nodeType":"VariableDeclaration","scope":3734,"src":"12418:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3640,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3643,"mutability":"mutable","name":"value","nameLocation":"12440:5:13","nodeType":"VariableDeclaration","scope":3734,"src":"12432:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:13"},"scope":3982,"src":"12276:1051:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3752,"nodeType":"Block","src":"13625:67:13","statements":[{"expression":{"arguments":[{"id":3743,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"13655:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3747,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"13671:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3745,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:13","typeDescriptions":{}}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:13","memberName":"length","nodeType":"MemberAccess","src":"13665:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3742,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3753,3784],"referencedDeclaration":3784,"src":"13642:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3741,"id":3751,"nodeType":"Return","src":"13635:50:13"}]},"documentation":{"id":3735,"nodeType":"StructuredDocumentation","src":"13333:212:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3753,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:13","nodeType":"FunctionDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"input","nameLocation":"13586:5:13","nodeType":"VariableDeclaration","scope":3753,"src":"13572:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3736,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:13"},"returnParameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3753,"src":"13616:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3739,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:13"},"scope":3982,"src":"13550:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3783,"nodeType":"Block","src":"14058:165:13","statements":[{"assignments":[3766,3768],"declarations":[{"constant":false,"id":3766,"mutability":"mutable","name":"success","nameLocation":"14074:7:13","nodeType":"VariableDeclaration","scope":3783,"src":"14069:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3765,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"value","nameLocation":"14091:5:13","nodeType":"VariableDeclaration","scope":3783,"src":"14083:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3767,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3774,"initialValue":{"arguments":[{"id":3770,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"14116:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3771,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"14123:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3772,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"14130:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3769,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3805,3909],"referencedDeclaration":3909,"src":"14100:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:13"},{"condition":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:13","subExpression":{"id":3775,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"14149:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"IfStatement","src":"14144:50:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3777,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"14165:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3779,"nodeType":"RevertStatement","src":"14158:36:13"}},{"expression":{"id":3781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"14211:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3764,"id":3782,"nodeType":"Return","src":"14204:12:13"}]},"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"13698:252:13","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3784,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:13","nodeType":"FunctionDefinition","parameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"input","nameLocation":"13991:5:13","nodeType":"VariableDeclaration","scope":3784,"src":"13977:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3755,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"begin","nameLocation":"14006:5:13","nodeType":"VariableDeclaration","scope":3784,"src":"13998:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"end","nameLocation":"14021:3:13","nodeType":"VariableDeclaration","scope":3784,"src":"14013:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:13"},"returnParameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3784,"src":"14049:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3762,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:13"},"scope":3982,"src":"13955:268:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3804,"nodeType":"Block","src":"14523:70:13","statements":[{"expression":{"arguments":[{"id":3795,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"14556:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3799,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"14572:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3797,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:13","typeDescriptions":{}}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:13","memberName":"length","nodeType":"MemberAccess","src":"14566:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3794,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3805,3909],"referencedDeclaration":3909,"src":"14540:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3793,"id":3803,"nodeType":"Return","src":"14533:53:13"}]},"documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"14229:191:13","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3805,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:13","nodeType":"FunctionDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"input","nameLocation":"14464:5:13","nodeType":"VariableDeclaration","scope":3805,"src":"14450:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3786,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:13"},"returnParameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"success","nameLocation":"14499:7:13","nodeType":"VariableDeclaration","scope":3805,"src":"14494:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3789,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"value","nameLocation":"14516:5:13","nodeType":"VariableDeclaration","scope":3805,"src":"14508:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:13"},"scope":3982,"src":"14425:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3908,"nodeType":"Block","src":"14963:733:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"14977:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3822,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"14989:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3820,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:13","typeDescriptions":{}}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:13","memberName":"length","nodeType":"MemberAccess","src":"14983:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3826,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"15006:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3827,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"15014:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3837,"nodeType":"IfStatement","src":"14973:72:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3831,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:13","typeDescriptions":{}}},"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3818,"id":3836,"nodeType":"Return","src":"15019:26:13"}},{"assignments":[3839],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:13","nodeType":"VariableDeclaration","scope":3908,"src":"15056:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3838,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3862,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"15074:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"15080:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3851,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"15130:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3849,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:13","typeDescriptions":{}}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3853,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"15138:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3848,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"15101:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3846,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:13","typeDescriptions":{}}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3856,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:13","typeDescriptions":{}}},"id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:13"},{"assignments":[3864],"declarations":[{"constant":false,"id":3864,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:13","nodeType":"VariableDeclaration","scope":3908,"src":"15242:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3872,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3866,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"15272:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"15272:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"15359:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3874,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"15365:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3876,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"15374:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3906,"nodeType":"Block","src":"15639:51:13","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3900,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:13","typeDescriptions":{}}},"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3818,"id":3905,"nodeType":"Return","src":"15653:26:13"}]},"id":3907,"nodeType":"IfStatement","src":"15355:335:13","trueBody":{"id":3898,"nodeType":"Block","src":"15390:243:13","statements":[{"assignments":[3879,3881],"declarations":[{"constant":false,"id":3879,"mutability":"mutable","name":"s","nameLocation":"15511:1:13","nodeType":"VariableDeclaration","scope":3898,"src":"15506:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3878,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3881,"mutability":"mutable","name":"v","nameLocation":"15522:1:13","nodeType":"VariableDeclaration","scope":3898,"src":"15514:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3887,"initialValue":{"arguments":[{"id":3883,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"15559:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3884,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"15566:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3885,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"15573:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3882,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"15527:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:13"},{"expression":{"components":[{"id":3888,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"15599:1:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3893,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"15618:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3891,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:13","typeDescriptions":{}}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:13","typeDescriptions":{}}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3818,"id":3897,"nodeType":"Return","src":"15591:31:13"}]}}]},"documentation":{"id":3806,"nodeType":"StructuredDocumentation","src":"14599:203:13","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3909,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:13","nodeType":"FunctionDefinition","parameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"input","nameLocation":"14855:5:13","nodeType":"VariableDeclaration","scope":3909,"src":"14841:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3807,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"begin","nameLocation":"14878:5:13","nodeType":"VariableDeclaration","scope":3909,"src":"14870:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3812,"mutability":"mutable","name":"end","nameLocation":"14901:3:13","nodeType":"VariableDeclaration","scope":3909,"src":"14893:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:13"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"success","nameLocation":"14939:7:13","nodeType":"VariableDeclaration","scope":3909,"src":"14934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3814,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"value","nameLocation":"14956:5:13","nodeType":"VariableDeclaration","scope":3909,"src":"14948:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3816,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:13"},"scope":3982,"src":"14807:889:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3968,"nodeType":"Block","src":"15765:461:13","statements":[{"assignments":[3917],"declarations":[{"constant":false,"id":3917,"mutability":"mutable","name":"value","nameLocation":"15781:5:13","nodeType":"VariableDeclaration","scope":3968,"src":"15775:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3916,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3922,"initialValue":{"arguments":[{"id":3920,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"15795:3:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3918,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:13","typeDescriptions":{}}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:13"},{"id":3965,"nodeType":"UncheckedBlock","src":"15959:238:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"15987:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:13","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16001:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:13","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16047:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16061:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:13","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16108:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16122:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:13","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3957,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16171:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:13","memberName":"max","nodeType":"MemberAccess","src":"16171:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3915,"id":3961,"nodeType":"Return","src":"16164:22:13"},"id":3962,"nodeType":"IfStatement","src":"16104:82:13","trueBody":{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16134:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:13","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3955,"nodeType":"ExpressionStatement","src":"16134:11:13"}},"id":3963,"nodeType":"IfStatement","src":"16043:143:13","trueBody":{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16074:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:13","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3944,"nodeType":"ExpressionStatement","src":"16074:11:13"}},"id":3964,"nodeType":"IfStatement","src":"15983:203:13","trueBody":{"expression":{"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16013:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3933,"nodeType":"ExpressionStatement","src":"16013:11:13"}}]},{"expression":{"id":3966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"16214:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3915,"id":3967,"nodeType":"Return","src":"16207:12:13"}]},"id":3969,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:13","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"chr","nameLocation":"15731:3:13","nodeType":"VariableDeclaration","scope":3969,"src":"15724:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3910,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:13"},"returnParameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3969,"src":"15758:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3913,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:13"},"scope":3982,"src":"15702:524:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3980,"nodeType":"Block","src":"16611:225:13","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:13","statements":[{"nodeType":"YulAssignment","src":"16774:46:13","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:13","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:13"},"nodeType":"YulFunctionCall","src":"16801:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:13"},"nodeType":"YulFunctionCall","src":"16789:30:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:13"},"nodeType":"YulFunctionCall","src":"16783:37:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3972,"isOffset":false,"isSlot":false,"src":"16793:6:13","valueSize":1},{"declaration":3974,"isOffset":false,"isSlot":false,"src":"16811:6:13","valueSize":1},{"declaration":3977,"isOffset":false,"isSlot":false,"src":"16774:5:13","valueSize":1}],"flags":["memory-safe"],"id":3979,"nodeType":"InlineAssembly","src":"16735:95:13"}]},"documentation":{"id":3970,"nodeType":"StructuredDocumentation","src":"16232:268:13","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:13","nodeType":"FunctionDefinition","parameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3972,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:13","nodeType":"VariableDeclaration","scope":3981,"src":"16537:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3971,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3974,"mutability":"mutable","name":"offset","nameLocation":"16566:6:13","nodeType":"VariableDeclaration","scope":3981,"src":"16558:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:13"},"returnParameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"value","nameLocation":"16604:5:13","nodeType":"VariableDeclaration","scope":3981,"src":"16596:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:13"},"scope":3982,"src":"16505:331:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3983,"src":"297:16541:13","usedErrors":[2806,2809,2812],"usedEvents":[]}],"src":"101:16738:13"},"id":13},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4006],"IERC165":[4018]},"id":4007,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3986,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4007,"sourceUnit":4019,"src":"140:38:14","symbolAliases":[{"foreign":{"id":3985,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"148:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3988,"name":"IERC165","nameLocations":["688:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":4018,"src":"688:7:14"},"id":3989,"nodeType":"InheritanceSpecifier","src":"688:7:14"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3987,"nodeType":"StructuredDocumentation","src":"180:479:14","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4006,"linearizedBaseContracts":[4006,4018],"name":"ERC165","nameLocation":"678:6:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4017],"body":{"id":4004,"nodeType":"Block","src":"845:64:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3997,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"862:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3999,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"882:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4018_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4018_$","typeString":"type(contract IERC165)"}],"id":3998,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"877:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4018","typeString":"type(contract IERC165)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:14","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3996,"id":4003,"nodeType":"Return","src":"855:47:14"}]},"documentation":{"id":3990,"nodeType":"StructuredDocumentation","src":"702:56:14","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4005,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:14","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:14","nodeType":"VariableDeclaration","scope":4005,"src":"790:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3991,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:14"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4005,"src":"839:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3994,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:14"},"scope":4006,"src":"763:146:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4007,"src":"660:251:14","usedErrors":[],"usedEvents":[]}],"src":"114:798:14"},"id":14},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4018]},"id":4019,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4008,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4009,"nodeType":"StructuredDocumentation","src":"141:280:15","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4018,"linearizedBaseContracts":[4018],"name":"IERC165","nameLocation":"432:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4010,"nodeType":"StructuredDocumentation","src":"446:340:15","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4017,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:15","nodeType":"FunctionDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:15","nodeType":"VariableDeclaration","scope":4017,"src":"818:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4011,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:15"},"returnParameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4017,"src":"861:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4014,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:15"},"scope":4018,"src":"791:76:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4019,"src":"422:447:15","usedErrors":[],"usedEvents":[]}],"src":"115:755:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5624],"Panic":[2528],"SafeCast":[7389]},"id":5625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4020,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5625,"sourceUnit":2529,"src":"129:35:16","symbolAliases":[{"foreign":{"id":4021,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"137:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5625,"sourceUnit":7390,"src":"165:40:16","symbolAliases":[{"foreign":{"id":4023,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"207:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5624,"linearizedBaseContracts":[5624],"name":"Math","nameLocation":"289:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4030,"members":[{"id":4026,"name":"Floor","nameLocation":"324:5:16","nodeType":"EnumValue","src":"324:5:16"},{"id":4027,"name":"Ceil","nameLocation":"367:4:16","nodeType":"EnumValue","src":"367:4:16"},{"id":4028,"name":"Trunc","nameLocation":"409:5:16","nodeType":"EnumValue","src":"409:5:16"},{"id":4029,"name":"Expand","nameLocation":"439:6:16","nodeType":"EnumValue","src":"439:6:16"}],"name":"Rounding","nameLocation":"305:8:16","nodeType":"EnumDefinition","src":"300:169:16"},{"body":{"id":4061,"nodeType":"Block","src":"677:140:16","statements":[{"id":4060,"nodeType":"UncheckedBlock","src":"687:124:16","statements":[{"assignments":[4043],"declarations":[{"constant":false,"id":4043,"mutability":"mutable","name":"c","nameLocation":"719:1:16","nodeType":"VariableDeclaration","scope":4060,"src":"711:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4047,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"723:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4045,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"727:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4048,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"746:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4049,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"750:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4055,"nodeType":"IfStatement","src":"742:28:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4041,"id":4054,"nodeType":"Return","src":"753:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4057,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"798:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4041,"id":4059,"nodeType":"Return","src":"784:16:16"}]}]},"documentation":{"id":4031,"nodeType":"StructuredDocumentation","src":"475:106:16","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:16","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"a","nameLocation":"610:1:16","nodeType":"VariableDeclaration","scope":4062,"src":"602:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"b","nameLocation":"621:1:16","nodeType":"VariableDeclaration","scope":4062,"src":"613:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:16"},"returnParameters":{"id":4041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"success","nameLocation":"652:7:16","nodeType":"VariableDeclaration","scope":4062,"src":"647:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4037,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4040,"mutability":"mutable","name":"result","nameLocation":"669:6:16","nodeType":"VariableDeclaration","scope":4062,"src":"661:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:16"},"scope":5624,"src":"586:231:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"1028:113:16","statements":[{"id":4088,"nodeType":"UncheckedBlock","src":"1038:97:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"1066:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"1070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4081,"nodeType":"IfStatement","src":"1062:28:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4073,"id":4080,"nodeType":"Return","src":"1073:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4083,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"1118:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"1122:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4073,"id":4087,"nodeType":"Return","src":"1104:20:16"}]}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"823:109:16","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:16","nodeType":"FunctionDefinition","parameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"a","nameLocation":"961:1:16","nodeType":"VariableDeclaration","scope":4090,"src":"953:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4064,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4067,"mutability":"mutable","name":"b","nameLocation":"972:1:16","nodeType":"VariableDeclaration","scope":4090,"src":"964:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:16"},"returnParameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"success","nameLocation":"1003:7:16","nodeType":"VariableDeclaration","scope":4090,"src":"998:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4069,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"result","nameLocation":"1020:6:16","nodeType":"VariableDeclaration","scope":4090,"src":"1012:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:16"},"scope":5624,"src":"937:204:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4131,"nodeType":"Block","src":"1355:417:16","statements":[{"id":4130,"nodeType":"UncheckedBlock","src":"1365:401:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"1623:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4109,"nodeType":"IfStatement","src":"1619:28:16","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4101,"id":4108,"nodeType":"Return","src":"1631:16:16"}},{"assignments":[4111],"declarations":[{"constant":false,"id":4111,"mutability":"mutable","name":"c","nameLocation":"1669:1:16","nodeType":"VariableDeclaration","scope":4130,"src":"1661:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4115,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"1673:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4113,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"1677:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4116,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"1696:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"1700:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4119,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"1705:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4125,"nodeType":"IfStatement","src":"1692:33:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4101,"id":4124,"nodeType":"Return","src":"1708:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4127,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"1753:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4101,"id":4129,"nodeType":"Return","src":"1739:16:16"}]}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"1147:112:16","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4132,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:16","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"a","nameLocation":"1288:1:16","nodeType":"VariableDeclaration","scope":4132,"src":"1280:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"b","nameLocation":"1299:1:16","nodeType":"VariableDeclaration","scope":4132,"src":"1291:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:16"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"success","nameLocation":"1330:7:16","nodeType":"VariableDeclaration","scope":4132,"src":"1325:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4097,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"result","nameLocation":"1347:6:16","nodeType":"VariableDeclaration","scope":4132,"src":"1339:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:16"},"scope":5624,"src":"1264:508:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4159,"nodeType":"Block","src":"1987:114:16","statements":[{"id":4158,"nodeType":"UncheckedBlock","src":"1997:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"2025:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4151,"nodeType":"IfStatement","src":"2021:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4143,"id":4150,"nodeType":"Return","src":"2033:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2078:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"2082:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4143,"id":4157,"nodeType":"Return","src":"2064:20:16"}]}]},"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"1778:113:16","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:16","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"a","nameLocation":"1920:1:16","nodeType":"VariableDeclaration","scope":4160,"src":"1912:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"b","nameLocation":"1931:1:16","nodeType":"VariableDeclaration","scope":4160,"src":"1923:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:16"},"returnParameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"success","nameLocation":"1962:7:16","nodeType":"VariableDeclaration","scope":4160,"src":"1957:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4139,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"result","nameLocation":"1979:6:16","nodeType":"VariableDeclaration","scope":4160,"src":"1971:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:16"},"scope":5624,"src":"1896:205:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4187,"nodeType":"Block","src":"2326:114:16","statements":[{"id":4186,"nodeType":"UncheckedBlock","src":"2336:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4172,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"2364:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4179,"nodeType":"IfStatement","src":"2360:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4171,"id":4178,"nodeType":"Return","src":"2372:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"2417:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4182,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"2421:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4171,"id":4185,"nodeType":"Return","src":"2403:20:16"}]}]},"documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"2107:123:16","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:16","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"a","nameLocation":"2259:1:16","nodeType":"VariableDeclaration","scope":4188,"src":"2251:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"b","nameLocation":"2270:1:16","nodeType":"VariableDeclaration","scope":4188,"src":"2262:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:16"},"returnParameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"success","nameLocation":"2301:7:16","nodeType":"VariableDeclaration","scope":4188,"src":"2296:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4167,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"result","nameLocation":"2318:6:16","nodeType":"VariableDeclaration","scope":4188,"src":"2310:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:16"},"scope":5624,"src":"2235:205:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4214,"nodeType":"Block","src":"2912:207:16","statements":[{"id":4213,"nodeType":"UncheckedBlock","src":"2922:191:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"3060:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"3066:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4202,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"3070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4207,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"3091:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4205,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"3075:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"3075:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4199,"id":4212,"nodeType":"Return","src":"3053:49:16"}]}]},"documentation":{"id":4189,"nodeType":"StructuredDocumentation","src":"2446:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4215,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:16","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"condition","nameLocation":"2847:9:16","nodeType":"VariableDeclaration","scope":4215,"src":"2842:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4190,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4193,"mutability":"mutable","name":"a","nameLocation":"2866:1:16","nodeType":"VariableDeclaration","scope":4215,"src":"2858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4195,"mutability":"mutable","name":"b","nameLocation":"2877:1:16","nodeType":"VariableDeclaration","scope":4215,"src":"2869:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:16"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4215,"src":"2903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:16"},"scope":5624,"src":"2825:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4233,"nodeType":"Block","src":"3256:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"3281:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"3285:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"3288:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4230,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"3291:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4225,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"3273:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4224,"id":4232,"nodeType":"Return","src":"3266:27:16"}]},"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"3125:59:16","text":" @dev Returns the largest of two numbers."},"id":4234,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:16","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"a","nameLocation":"3210:1:16","nodeType":"VariableDeclaration","scope":4234,"src":"3202:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4220,"mutability":"mutable","name":"b","nameLocation":"3221:1:16","nodeType":"VariableDeclaration","scope":4234,"src":"3213:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:16"},"returnParameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4234,"src":"3247:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:16"},"scope":5624,"src":"3189:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4252,"nodeType":"Block","src":"3438:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"3463:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"3467:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"3470:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"3473:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4244,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"3455:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4243,"id":4251,"nodeType":"Return","src":"3448:27:16"}]},"documentation":{"id":4235,"nodeType":"StructuredDocumentation","src":"3306:60:16","text":" @dev Returns the smallest of two numbers."},"id":4253,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:16","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"a","nameLocation":"3392:1:16","nodeType":"VariableDeclaration","scope":4253,"src":"3384:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"b","nameLocation":"3403:1:16","nodeType":"VariableDeclaration","scope":4253,"src":"3395:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:16"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4253,"src":"3429:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:16"},"scope":5624,"src":"3371:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4275,"nodeType":"Block","src":"3666:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"3721:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"3725:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"3731:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"3735:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4262,"id":4274,"nodeType":"Return","src":"3713:28:16"}]},"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"3488:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4276,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:16","nodeType":"FunctionDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"a","nameLocation":"3620:1:16","nodeType":"VariableDeclaration","scope":4276,"src":"3612:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"b","nameLocation":"3631:1:16","nodeType":"VariableDeclaration","scope":4276,"src":"3623:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:16"},"returnParameters":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4276,"src":"3657:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4260,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:16"},"scope":5624,"src":"3595:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4316,"nodeType":"Block","src":"4040:633:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"4054:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4297,"nodeType":"IfStatement","src":"4050:150:16","trueBody":{"id":4296,"nodeType":"Block","src":"4062:138:16","statements":[{"expression":{"arguments":[{"expression":{"id":4292,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4166:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"4166:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4289,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4154:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"4154:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4295,"nodeType":"ExpressionStatement","src":"4154:35:16"}]}},{"id":4315,"nodeType":"UncheckedBlock","src":"4583:84:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"4630:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4298,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"4614:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"4614:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"4641:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"4650:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4285,"id":4314,"nodeType":"Return","src":"4607:49:16"}]}]},"documentation":{"id":4277,"nodeType":"StructuredDocumentation","src":"3754:210:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4317,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:16","nodeType":"FunctionDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"a","nameLocation":"3994:1:16","nodeType":"VariableDeclaration","scope":4317,"src":"3986:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"b","nameLocation":"4005:1:16","nodeType":"VariableDeclaration","scope":4317,"src":"3997:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:16"},"returnParameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4317,"src":"4031:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:16"},"scope":5624,"src":"3969:704:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4453,"nodeType":"Block","src":"5094:4128:16","statements":[{"id":4452,"nodeType":"UncheckedBlock","src":"5104:4112:16","statements":[{"assignments":[4330],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:16","nodeType":"VariableDeclaration","scope":4452,"src":"5433:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4334,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"5449:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4332,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"5453:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:16"},{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:16","nodeType":"VariableDeclaration","scope":4452,"src":"5513:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4337,"nodeType":"VariableDeclarationStatement","src":"5513:13:16"},{"AST":{"nodeType":"YulBlock","src":"5593:122:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:16"},"nodeType":"YulFunctionCall","src":"5634:6:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:16"},"nodeType":"YulFunctionCall","src":"5621:20:16"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:16","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:16"},"nodeType":"YulFunctionCall","src":"5671:14:16"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:16"},"nodeType":"YulFunctionCall","src":"5687:13:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:16"},"nodeType":"YulFunctionCall","src":"5667:34:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4330,"isOffset":false,"isSlot":false,"src":"5679:5:16","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"5694:5:16","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"5658:5:16","valueSize":1},{"declaration":4320,"isOffset":false,"isSlot":false,"src":"5628:1:16","valueSize":1},{"declaration":4322,"isOffset":false,"isSlot":false,"src":"5631:1:16","valueSize":1}],"id":4338,"nodeType":"InlineAssembly","src":"5584:131:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"5796:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4347,"nodeType":"IfStatement","src":"5792:368:16","trueBody":{"id":4346,"nodeType":"Block","src":"5808:352:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"6126:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4343,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"6134:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4328,"id":4345,"nodeType":"Return","src":"6119:26:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"6270:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4349,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"6285:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4366,"nodeType":"IfStatement","src":"6266:143:16","trueBody":{"id":4365,"nodeType":"Block","src":"6292:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"6330:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4358,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6348:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"6348:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4360,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6372:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:16","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2491,"src":"6372:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4354,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"6322:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4351,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6310:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"6310:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4364,"nodeType":"ExpressionStatement","src":"6310:84:16"}]}},{"assignments":[4368],"declarations":[{"constant":false,"id":4368,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:16","nodeType":"VariableDeclaration","scope":4452,"src":"6664:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4369,"nodeType":"VariableDeclarationStatement","src":"6664:17:16"},{"AST":{"nodeType":"YulBlock","src":"6704:291:16","statements":[{"nodeType":"YulAssignment","src":"6773:38:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:16"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:16"},"nodeType":"YulFunctionCall","src":"6786:25:16"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:16"}]},{"nodeType":"YulAssignment","src":"6893:41:16","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:16"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:16"},"nodeType":"YulFunctionCall","src":"6913:20:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:16"},"nodeType":"YulFunctionCall","src":"6902:32:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:16"}]},{"nodeType":"YulAssignment","src":"6951:30:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:16"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:16"},"nodeType":"YulFunctionCall","src":"6960:21:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4324,"isOffset":false,"isSlot":false,"src":"6799:11:16","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"6927:5:16","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"6951:5:16","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"6964:5:16","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"6893:5:16","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"6906:5:16","valueSize":1},{"declaration":4368,"isOffset":false,"isSlot":false,"src":"6773:9:16","valueSize":1},{"declaration":4368,"isOffset":false,"isSlot":false,"src":"6916:9:16","valueSize":1},{"declaration":4368,"isOffset":false,"isSlot":false,"src":"6971:9:16","valueSize":1},{"declaration":4320,"isOffset":false,"isSlot":false,"src":"6793:1:16","valueSize":1},{"declaration":4322,"isOffset":false,"isSlot":false,"src":"6796:1:16","valueSize":1}],"id":4370,"nodeType":"InlineAssembly","src":"6695:300:16"},{"assignments":[4372],"declarations":[{"constant":false,"id":4372,"mutability":"mutable","name":"twos","nameLocation":"7207:4:16","nodeType":"VariableDeclaration","scope":4452,"src":"7199:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4379,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"7214:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4375,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"7233:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:16"},{"AST":{"nodeType":"YulBlock","src":"7268:366:16","statements":[{"nodeType":"YulAssignment","src":"7333:37:16","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:16"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:16"},"nodeType":"YulFunctionCall","src":"7348:22:16"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:16"}]},{"nodeType":"YulAssignment","src":"7437:25:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:16"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:16"},"nodeType":"YulFunctionCall","src":"7446:16:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:16"}]},{"nodeType":"YulAssignment","src":"7581:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:16","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:16"},"nodeType":"YulFunctionCall","src":"7597:12:16"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:16"},"nodeType":"YulFunctionCall","src":"7593:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:16"},"nodeType":"YulFunctionCall","src":"7589:31:16"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4324,"isOffset":false,"isSlot":false,"src":"7333:11:16","valueSize":1},{"declaration":4324,"isOffset":false,"isSlot":false,"src":"7352:11:16","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"7437:5:16","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"7450:5:16","valueSize":1},{"declaration":4372,"isOffset":false,"isSlot":false,"src":"7365:4:16","valueSize":1},{"declaration":4372,"isOffset":false,"isSlot":false,"src":"7457:4:16","valueSize":1},{"declaration":4372,"isOffset":false,"isSlot":false,"src":"7581:4:16","valueSize":1},{"declaration":4372,"isOffset":false,"isSlot":false,"src":"7604:4:16","valueSize":1},{"declaration":4372,"isOffset":false,"isSlot":false,"src":"7611:4:16","valueSize":1}],"id":4380,"nodeType":"InlineAssembly","src":"7259:375:16"},{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4381,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"7700:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"7709:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4383,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"7717:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"7700:21:16"},{"assignments":[4388],"declarations":[{"constant":false,"id":4388,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:16","nodeType":"VariableDeclaration","scope":4452,"src":"8056:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4395,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4390,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8079:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:16"},{"expression":{"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4396,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8327:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4399,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8341:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4403,"nodeType":"ExpressionStatement","src":"8312:36:16"},{"expression":{"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4404,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8382:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8397:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4407,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8411:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4411,"nodeType":"ExpressionStatement","src":"8382:36:16"},{"expression":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8454:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4414,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8469:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4415,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8483:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4419,"nodeType":"ExpressionStatement","src":"8454:36:16"},{"expression":{"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4420,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8525:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4422,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8540:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4423,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8554:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4427,"nodeType":"ExpressionStatement","src":"8525:36:16"},{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4428,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8598:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4430,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8613:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4431,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"8598:36:16"},{"expression":{"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8672:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8687:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4439,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8701:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4443,"nodeType":"ExpressionStatement","src":"8672:36:16"},{"expression":{"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"9154:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4445,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"9163:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4446,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"9171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4449,"nodeType":"ExpressionStatement","src":"9154:24:16"},{"expression":{"id":4450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"9199:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4328,"id":4451,"nodeType":"Return","src":"9192:13:16"}]}]},"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"4679:312:16","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:16","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"x","nameLocation":"5020:1:16","nodeType":"VariableDeclaration","scope":4454,"src":"5012:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"y","nameLocation":"5031:1:16","nodeType":"VariableDeclaration","scope":4454,"src":"5023:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4324,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:16","nodeType":"VariableDeclaration","scope":4454,"src":"5034:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:16"},"returnParameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"result","nameLocation":"5086:6:16","nodeType":"VariableDeclaration","scope":4454,"src":"5078:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:16"},"scope":5624,"src":"4996:4226:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4490,"nodeType":"Block","src":"9461:128:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4470,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"9485:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4471,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"9488:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4472,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"9491:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4469,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4454,4491],"referencedDeclaration":4454,"src":"9478:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4477,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"9539:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}],"id":4476,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"9522:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4030_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4480,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"9559:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4481,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"9562:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4482,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"9565:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4479,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"9552:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4474,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"9506:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"9506:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4468,"id":4489,"nodeType":"Return","src":"9471:111:16"}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"9228:118:16","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4491,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:16","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"x","nameLocation":"9375:1:16","nodeType":"VariableDeclaration","scope":4491,"src":"9367:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"y","nameLocation":"9386:1:16","nodeType":"VariableDeclaration","scope":4491,"src":"9378:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:16","nodeType":"VariableDeclaration","scope":4491,"src":"9389:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:16","nodeType":"VariableDeclaration","scope":4491,"src":"9410:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"},"typeName":{"id":4463,"nodeType":"UserDefinedTypeName","pathNode":{"id":4462,"name":"Rounding","nameLocations":["9410:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"9410:8:16"},"referencedDeclaration":4030,"src":"9410:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:16"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4491,"src":"9452:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:16"},"scope":5624,"src":"9351:238:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4587,"nodeType":"Block","src":"10223:1849:16","statements":[{"id":4586,"nodeType":"UncheckedBlock","src":"10233:1833:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"10261:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4506,"nodeType":"IfStatement","src":"10257:20:16","trueBody":{"expression":{"hexValue":"30","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4500,"id":4505,"nodeType":"Return","src":"10269:8:16"}},{"assignments":[4508],"declarations":[{"constant":false,"id":4508,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:16","nodeType":"VariableDeclaration","scope":4586,"src":"10748:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4512,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"10768:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4510,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"10772:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:16"},{"assignments":[4514],"declarations":[{"constant":false,"id":4514,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:16","nodeType":"VariableDeclaration","scope":4586,"src":"10787:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4516,"initialValue":{"id":4515,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"10801:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:16"},{"assignments":[4518],"declarations":[{"constant":false,"id":4518,"mutability":"mutable","name":"x","nameLocation":"10945:1:16","nodeType":"VariableDeclaration","scope":4586,"src":"10938:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4517,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4520,"initialValue":{"hexValue":"30","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:16"},{"assignments":[4522],"declarations":[{"constant":false,"id":4522,"mutability":"mutable","name":"y","nameLocation":"10971:1:16","nodeType":"VariableDeclaration","scope":4586,"src":"10964:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4521,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4524,"initialValue":{"hexValue":"31","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:16"},{"body":{"id":4561,"nodeType":"Block","src":"11014:882:16","statements":[{"assignments":[4529],"declarations":[{"constant":false,"id":4529,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:16","nodeType":"VariableDeclaration","scope":4561,"src":"11032:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4533,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"11051:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4531,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"11057:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:16"},{"expression":{"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4534,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"11086:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4535,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"11091:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4536,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4537,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"11191:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"11436:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"11442:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4540,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"11454:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4545,"nodeType":"ExpressionStatement","src":"11085:395:16"},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4546,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"11500:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4547,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"11503:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4548,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4549,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"11585:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4550,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"11839:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"11843:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4554,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"11854:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4552,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:16","typeDescriptions":{}}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4560,"nodeType":"ExpressionStatement","src":"11499:382:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10998:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4562,"nodeType":"WhileStatement","src":"10991:905:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4563,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"11914:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"11910:22:16","trueBody":{"expression":{"hexValue":"30","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4500,"id":4567,"nodeType":"Return","src":"11924:8:16"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"11983:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"11990:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:16","subExpression":{"id":4576,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12003:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:16","typeDescriptions":{}}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4582,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"12015:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:16","typeDescriptions":{}}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4569,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"11975:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4500,"id":4585,"nodeType":"Return","src":"11968:50:16"}]}]},"documentation":{"id":4492,"nodeType":"StructuredDocumentation","src":"9595:553:16","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4588,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:16","nodeType":"FunctionDefinition","parameters":{"id":4497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"a","nameLocation":"10177:1:16","nodeType":"VariableDeclaration","scope":4588,"src":"10169:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4496,"mutability":"mutable","name":"n","nameLocation":"10188:1:16","nodeType":"VariableDeclaration","scope":4588,"src":"10180:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:16"},"returnParameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4588,"src":"10214:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:16"},"scope":5624,"src":"10153:1919:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4608,"nodeType":"Block","src":"12672:82:16","statements":[{"id":4607,"nodeType":"UncheckedBlock","src":"12682:66:16","statements":[{"expression":{"arguments":[{"id":4600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12725:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4601,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"12728:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4604,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"12735:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4598,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"12713:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5624_$","typeString":"type(library Math)"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:16","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"12713:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4597,"id":4606,"nodeType":"Return","src":"12706:31:16"}]}]},"documentation":{"id":4589,"nodeType":"StructuredDocumentation","src":"12078:514:16","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4609,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:16","nodeType":"FunctionDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4591,"mutability":"mutable","name":"a","nameLocation":"12626:1:16","nodeType":"VariableDeclaration","scope":4609,"src":"12618:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4593,"mutability":"mutable","name":"p","nameLocation":"12637:1:16","nodeType":"VariableDeclaration","scope":4609,"src":"12629:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:16"},"returnParameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4609,"src":"12663:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:16"},"scope":5624,"src":"12597:157:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4644,"nodeType":"Block","src":"13524:174:16","statements":[{"assignments":[4622,4624],"declarations":[{"constant":false,"id":4622,"mutability":"mutable","name":"success","nameLocation":"13540:7:16","nodeType":"VariableDeclaration","scope":4644,"src":"13535:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4621,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4624,"mutability":"mutable","name":"result","nameLocation":"13557:6:16","nodeType":"VariableDeclaration","scope":4644,"src":"13549:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4630,"initialValue":{"arguments":[{"id":4626,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"13577:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4627,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"13580:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4628,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"13583:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4625,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4669,4751],"referencedDeclaration":4669,"src":"13567:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:16"},{"condition":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:16","subExpression":{"id":4631,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"13600:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4641,"nodeType":"IfStatement","src":"13595:74:16","trueBody":{"id":4640,"nodeType":"Block","src":"13609:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":4636,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"13635:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"13635:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4633,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"13623:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"13623:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4639,"nodeType":"ExpressionStatement","src":"13623:35:16"}]}},{"expression":{"id":4642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"13685:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4620,"id":4643,"nodeType":"Return","src":"13678:13:16"}]},"documentation":{"id":4610,"nodeType":"StructuredDocumentation","src":"12760:678:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4645,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:16","nodeType":"FunctionDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"b","nameLocation":"13467:1:16","nodeType":"VariableDeclaration","scope":4645,"src":"13459:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"e","nameLocation":"13478:1:16","nodeType":"VariableDeclaration","scope":4645,"src":"13470:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4616,"mutability":"mutable","name":"m","nameLocation":"13489:1:16","nodeType":"VariableDeclaration","scope":4645,"src":"13481:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4615,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:16"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4645,"src":"13515:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4618,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:16"},"scope":5624,"src":"13443:255:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4668,"nodeType":"Block","src":"14552:1493:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"14566:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4666,"nodeType":"IfStatement","src":"14562:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4658,"id":4665,"nodeType":"Return","src":"14574:17:16"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:16"},"nodeType":"YulFunctionCall","src":"14651:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:16"},"nodeType":"YulFunctionCall","src":"15563:17:16"},"nodeType":"YulExpressionStatement","src":"15563:17:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:16"},"nodeType":"YulFunctionCall","src":"15600:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:16"},"nodeType":"YulFunctionCall","src":"15593:28:16"},"nodeType":"YulExpressionStatement","src":"15593:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:16"},"nodeType":"YulFunctionCall","src":"15641:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:16"},"nodeType":"YulFunctionCall","src":"15634:28:16"},"nodeType":"YulExpressionStatement","src":"15634:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:16"},"nodeType":"YulFunctionCall","src":"15682:14:16"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:16"},"nodeType":"YulFunctionCall","src":"15675:25:16"},"nodeType":"YulExpressionStatement","src":"15675:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:16"},"nodeType":"YulFunctionCall","src":"15720:14:16"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:16"},"nodeType":"YulFunctionCall","src":"15713:25:16"},"nodeType":"YulExpressionStatement","src":"15713:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:16"},"nodeType":"YulFunctionCall","src":"15758:14:16"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:16"},"nodeType":"YulFunctionCall","src":"15751:25:16"},"nodeType":"YulExpressionStatement","src":"15751:25:16"},{"nodeType":"YulAssignment","src":"15938:57:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:16"},"nodeType":"YulFunctionCall","src":"15960:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:16","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:16","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:16","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:16"},"nodeType":"YulFunctionCall","src":"15949:46:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:16"}]},{"nodeType":"YulAssignment","src":"16008:21:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:16","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:16"},"nodeType":"YulFunctionCall","src":"16018:11:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4648,"isOffset":false,"isSlot":false,"src":"15698:1:16","valueSize":1},{"declaration":4650,"isOffset":false,"isSlot":false,"src":"15736:1:16","valueSize":1},{"declaration":4652,"isOffset":false,"isSlot":false,"src":"15774:1:16","valueSize":1},{"declaration":4657,"isOffset":false,"isSlot":false,"src":"16008:6:16","valueSize":1},{"declaration":4655,"isOffset":false,"isSlot":false,"src":"15938:7:16","valueSize":1}],"flags":["memory-safe"],"id":4667,"nodeType":"InlineAssembly","src":"14601:1438:16"}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"13704:738:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4669,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:16","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"b","nameLocation":"14474:1:16","nodeType":"VariableDeclaration","scope":4669,"src":"14466:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"e","nameLocation":"14485:1:16","nodeType":"VariableDeclaration","scope":4669,"src":"14477:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"m","nameLocation":"14496:1:16","nodeType":"VariableDeclaration","scope":4669,"src":"14488:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:16"},"returnParameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"success","nameLocation":"14527:7:16","nodeType":"VariableDeclaration","scope":4669,"src":"14522:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4654,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4657,"mutability":"mutable","name":"result","nameLocation":"14544:6:16","nodeType":"VariableDeclaration","scope":4669,"src":"14536:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:16"},"scope":5624,"src":"14447:1598:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4704,"nodeType":"Block","src":"16242:179:16","statements":[{"assignments":[4682,4684],"declarations":[{"constant":false,"id":4682,"mutability":"mutable","name":"success","nameLocation":"16258:7:16","nodeType":"VariableDeclaration","scope":4704,"src":"16253:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4681,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4684,"mutability":"mutable","name":"result","nameLocation":"16280:6:16","nodeType":"VariableDeclaration","scope":4704,"src":"16267:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4683,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4690,"initialValue":{"arguments":[{"id":4686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"16300:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4687,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"16303:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4688,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"16306:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4685,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4669,4751],"referencedDeclaration":4751,"src":"16290:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:16"},{"condition":{"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:16","subExpression":{"id":4691,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"16323:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4701,"nodeType":"IfStatement","src":"16318:74:16","trueBody":{"id":4700,"nodeType":"Block","src":"16332:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":4696,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"16358:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"16358:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4693,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"16346:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2528_$","typeString":"type(library Panic)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2527,"src":"16346:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4699,"nodeType":"ExpressionStatement","src":"16346:35:16"}]}},{"expression":{"id":4702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"16408:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4680,"id":4703,"nodeType":"Return","src":"16401:13:16"}]},"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"16051:85:16","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4705,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:16","nodeType":"FunctionDefinition","parameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"b","nameLocation":"16170:1:16","nodeType":"VariableDeclaration","scope":4705,"src":"16157:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4671,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4674,"mutability":"mutable","name":"e","nameLocation":"16186:1:16","nodeType":"VariableDeclaration","scope":4705,"src":"16173:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4673,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4676,"mutability":"mutable","name":"m","nameLocation":"16202:1:16","nodeType":"VariableDeclaration","scope":4705,"src":"16189:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4675,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:16"},"returnParameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4705,"src":"16228:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4678,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:16"},"scope":5624,"src":"16141:280:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4750,"nodeType":"Block","src":"16675:771:16","statements":[{"condition":{"arguments":[{"id":4720,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"16700:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4719,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"16689:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4729,"nodeType":"IfStatement","src":"16685:47:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4723,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4718,"id":4728,"nodeType":"Return","src":"16704:28:16"}},{"assignments":[4731],"declarations":[{"constant":false,"id":4731,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:16","nodeType":"VariableDeclaration","scope":4750,"src":"16743:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4734,"initialValue":{"expression":{"id":4732,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"16758:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:16","memberName":"length","nodeType":"MemberAccess","src":"16758:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:16"},{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"16848:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"16874:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:16","memberName":"length","nodeType":"MemberAccess","src":"16874:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4740,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"16884:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:16","memberName":"length","nodeType":"MemberAccess","src":"16884:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4742,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"16894:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"16900:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4744,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"16903:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4745,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"16906:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4736,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"16857:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4748,"nodeType":"ExpressionStatement","src":"16848:60:16"},{"AST":{"nodeType":"YulBlock","src":"16944:496:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:16","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:16"},"nodeType":"YulFunctionCall","src":"16973:17:16"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:16","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:16"},"nodeType":"YulFunctionCall","src":"17102:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:16","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:16"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:16"},"nodeType":"YulFunctionCall","src":"17124:13:16"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:16"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:16"},"nodeType":"YulFunctionCall","src":"17091:62:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:16"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:16"},"nodeType":"YulFunctionCall","src":"17302:20:16"},"nodeType":"YulExpressionStatement","src":"17302:20:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:16","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:16"},"nodeType":"YulFunctionCall","src":"17411:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:16"},"nodeType":"YulFunctionCall","src":"17398:32:16"},"nodeType":"YulExpressionStatement","src":"17398:32:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4731,"isOffset":false,"isSlot":false,"src":"17148:4:16","valueSize":1},{"declaration":4731,"isOffset":false,"isSlot":false,"src":"17317:4:16","valueSize":1},{"declaration":4731,"isOffset":false,"isSlot":false,"src":"17424:4:16","valueSize":1},{"declaration":4717,"isOffset":false,"isSlot":false,"src":"16977:6:16","valueSize":1},{"declaration":4717,"isOffset":false,"isSlot":false,"src":"17130:6:16","valueSize":1},{"declaration":4717,"isOffset":false,"isSlot":false,"src":"17309:6:16","valueSize":1},{"declaration":4715,"isOffset":false,"isSlot":false,"src":"17080:7:16","valueSize":1}],"flags":["memory-safe"],"id":4749,"nodeType":"InlineAssembly","src":"16919:521:16"}]},"documentation":{"id":4706,"nodeType":"StructuredDocumentation","src":"16427:88:16","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4751,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:16","nodeType":"FunctionDefinition","parameters":{"id":4713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"b","nameLocation":"16561:1:16","nodeType":"VariableDeclaration","scope":4751,"src":"16548:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4707,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4710,"mutability":"mutable","name":"e","nameLocation":"16585:1:16","nodeType":"VariableDeclaration","scope":4751,"src":"16572:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4709,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4712,"mutability":"mutable","name":"m","nameLocation":"16609:1:16","nodeType":"VariableDeclaration","scope":4751,"src":"16596:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4711,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:16"},"returnParameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"success","nameLocation":"16645:7:16","nodeType":"VariableDeclaration","scope":4751,"src":"16640:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4714,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4717,"mutability":"mutable","name":"result","nameLocation":"16667:6:16","nodeType":"VariableDeclaration","scope":4751,"src":"16654:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4716,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:16"},"scope":5624,"src":"16520:926:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4783,"nodeType":"Block","src":"17601:176:16","statements":[{"body":{"id":4779,"nodeType":"Block","src":"17658:92:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4770,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"17676:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4772,"indexExpression":{"id":4771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"17686:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4778,"nodeType":"IfStatement","src":"17672:68:16","trueBody":{"id":4777,"nodeType":"Block","src":"17695:45:16","statements":[{"expression":{"hexValue":"66616c7365","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4758,"id":4776,"nodeType":"Return","src":"17713:12:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"17631:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4764,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"17635:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:16","memberName":"length","nodeType":"MemberAccess","src":"17635:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4780,"initializationExpression":{"assignments":[4760],"declarations":[{"constant":false,"id":4760,"mutability":"mutable","name":"i","nameLocation":"17624:1:16","nodeType":"VariableDeclaration","scope":4780,"src":"17616:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4762,"initialValue":{"hexValue":"30","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:16"},"loopExpression":{"expression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:16","subExpression":{"id":4767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"17655:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4769,"nodeType":"ExpressionStatement","src":"17653:3:16"},"nodeType":"ForStatement","src":"17611:139:16"},{"expression":{"hexValue":"74727565","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4758,"id":4782,"nodeType":"Return","src":"17759:11:16"}]},"documentation":{"id":4752,"nodeType":"StructuredDocumentation","src":"17452:72:16","text":" @dev Returns whether the provided byte array is zero."},"id":4784,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:16","nodeType":"FunctionDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:16","nodeType":"VariableDeclaration","scope":4784,"src":"17549:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4753,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:16"},"returnParameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4784,"src":"17595:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4756,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:16"},"scope":5624,"src":"17529:248:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5002,"nodeType":"Block","src":"18137:5124:16","statements":[{"id":5001,"nodeType":"UncheckedBlock","src":"18147:5108:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"18241:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4798,"nodeType":"IfStatement","src":"18237:53:16","trueBody":{"id":4797,"nodeType":"Block","src":"18249:41:16","statements":[{"expression":{"id":4795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"18274:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4791,"id":4796,"nodeType":"Return","src":"18267:8:16"}]}},{"assignments":[4800],"declarations":[{"constant":false,"id":4800,"mutability":"mutable","name":"aa","nameLocation":"19225:2:16","nodeType":"VariableDeclaration","scope":5001,"src":"19217:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4802,"initialValue":{"id":4801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"19230:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:16"},{"assignments":[4804],"declarations":[{"constant":false,"id":4804,"mutability":"mutable","name":"xn","nameLocation":"19253:2:16","nodeType":"VariableDeclaration","scope":5001,"src":"19245:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4806,"initialValue":{"hexValue":"31","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19278:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4822,"nodeType":"IfStatement","src":"19274:92:16","trueBody":{"id":4821,"nodeType":"Block","src":"19296:70:16","statements":[{"expression":{"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19314:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4816,"nodeType":"ExpressionStatement","src":"19314:10:16"},{"expression":{"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4817,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19342:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4820,"nodeType":"ExpressionStatement","src":"19342:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4823,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19383:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4838,"nodeType":"IfStatement","src":"19379:90:16","trueBody":{"id":4837,"nodeType":"Block","src":"19400:69:16","statements":[{"expression":{"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4829,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19418:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4832,"nodeType":"ExpressionStatement","src":"19418:9:16"},{"expression":{"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4833,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19445:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4836,"nodeType":"ExpressionStatement","src":"19445:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4839,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19486:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4854,"nodeType":"IfStatement","src":"19482:90:16","trueBody":{"id":4853,"nodeType":"Block","src":"19503:69:16","statements":[{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4845,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19521:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4848,"nodeType":"ExpressionStatement","src":"19521:9:16"},{"expression":{"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4849,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19548:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4852,"nodeType":"ExpressionStatement","src":"19548:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19589:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4870,"nodeType":"IfStatement","src":"19585:89:16","trueBody":{"id":4869,"nodeType":"Block","src":"19606:68:16","statements":[{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4861,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19624:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"19624:9:16"},{"expression":{"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19651:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4868,"nodeType":"ExpressionStatement","src":"19651:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19691:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4886,"nodeType":"IfStatement","src":"19687:87:16","trueBody":{"id":4885,"nodeType":"Block","src":"19707:67:16","statements":[{"expression":{"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4877,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19725:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4880,"nodeType":"ExpressionStatement","src":"19725:8:16"},{"expression":{"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19751:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4884,"nodeType":"ExpressionStatement","src":"19751:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19791:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4902,"nodeType":"IfStatement","src":"19787:87:16","trueBody":{"id":4901,"nodeType":"Block","src":"19807:67:16","statements":[{"expression":{"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19825:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4896,"nodeType":"ExpressionStatement","src":"19825:8:16"},{"expression":{"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4897,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19851:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4900,"nodeType":"ExpressionStatement","src":"19851:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19891:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4914,"nodeType":"IfStatement","src":"19887:61:16","trueBody":{"id":4913,"nodeType":"Block","src":"19907:41:16","statements":[{"expression":{"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4909,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19925:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4912,"nodeType":"ExpressionStatement","src":"19925:8:16"}]}},{"expression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4915,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"20368:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4917,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"20378:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4923,"nodeType":"ExpressionStatement","src":"20368:18:16"},{"expression":{"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4924,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22273:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22279:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"22284:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4927,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22288:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4934,"nodeType":"ExpressionStatement","src":"22273:23:16"},{"expression":{"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4935,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22382:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22388:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"22393:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4938,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22397:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4945,"nodeType":"ExpressionStatement","src":"22382:23:16"},{"expression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22493:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22499:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"22504:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4949,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22508:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4956,"nodeType":"ExpressionStatement","src":"22493:23:16"},{"expression":{"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22602:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22608:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"22613:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4960,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22617:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4967,"nodeType":"ExpressionStatement","src":"22602:23:16"},{"expression":{"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4968,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22712:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4969,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22718:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"22723:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4971,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22727:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4978,"nodeType":"ExpressionStatement","src":"22712:23:16"},{"expression":{"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4979,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22822:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22828:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"22833:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4982,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"22837:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4989,"nodeType":"ExpressionStatement","src":"22822:23:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4990,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"23211:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4993,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"23232:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"23237:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4995,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"23241:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4991,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"23216:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"23216:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4791,"id":5000,"nodeType":"Return","src":"23204:40:16"}]}]},"documentation":{"id":4785,"nodeType":"StructuredDocumentation","src":"17783:292:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5003,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:16","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"a","nameLocation":"18102:1:16","nodeType":"VariableDeclaration","scope":5003,"src":"18094:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:16"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5003,"src":"18128:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:16"},"scope":5624,"src":"18080:5181:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5036,"nodeType":"Block","src":"23434:171:16","statements":[{"id":5035,"nodeType":"UncheckedBlock","src":"23444:155:16","statements":[{"assignments":[5015],"declarations":[{"constant":false,"id":5015,"mutability":"mutable","name":"result","nameLocation":"23476:6:16","nodeType":"VariableDeclaration","scope":5035,"src":"23468:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5019,"initialValue":{"arguments":[{"id":5017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"23490:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5016,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5003,5037],"referencedDeclaration":5003,"src":"23485:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"23513:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5024,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"23555:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}],"id":5023,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"23538:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4030_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"23568:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"23577:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"23586:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5021,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"23522:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"23522:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5013,"id":5034,"nodeType":"Return","src":"23506:82:16"}]}]},"documentation":{"id":5004,"nodeType":"StructuredDocumentation","src":"23267:86:16","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5037,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:16","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"a","nameLocation":"23380:1:16","nodeType":"VariableDeclaration","scope":5037,"src":"23372:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5009,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:16","nodeType":"VariableDeclaration","scope":5037,"src":"23383:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"},"typeName":{"id":5008,"nodeType":"UserDefinedTypeName","pathNode":{"id":5007,"name":"Rounding","nameLocations":["23383:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"23383:8:16"},"referencedDeclaration":4030,"src":"23383:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:16"},"returnParameters":{"id":5013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5037,"src":"23425:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:16"},"scope":5624,"src":"23358:247:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5232,"nodeType":"Block","src":"23796:981:16","statements":[{"assignments":[5046],"declarations":[{"constant":false,"id":5046,"mutability":"mutable","name":"result","nameLocation":"23814:6:16","nodeType":"VariableDeclaration","scope":5232,"src":"23806:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5045,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5048,"initialValue":{"hexValue":"30","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:16"},{"assignments":[5050],"declarations":[{"constant":false,"id":5050,"mutability":"mutable","name":"exp","nameLocation":"23842:3:16","nodeType":"VariableDeclaration","scope":5232,"src":"23834:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5051,"nodeType":"VariableDeclarationStatement","src":"23834:11:16"},{"id":5229,"nodeType":"UncheckedBlock","src":"23855:893:16","statements":[{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5052,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"23879:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"23907:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5054,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"23891:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"23891:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5067,"nodeType":"ExpressionStatement","src":"23879:51:16"},{"expression":{"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"23944:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5069,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"23954:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5071,"nodeType":"ExpressionStatement","src":"23944:13:16"},{"expression":{"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"23971:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5073,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"23981:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5075,"nodeType":"ExpressionStatement","src":"23971:13:16"},{"expression":{"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5076,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"23999:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24026:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5078,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"24010:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"24010:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5091,"nodeType":"ExpressionStatement","src":"23999:49:16"},{"expression":{"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24062:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5093,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24072:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5095,"nodeType":"ExpressionStatement","src":"24062:13:16"},{"expression":{"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"24089:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5097,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24099:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5099,"nodeType":"ExpressionStatement","src":"24089:13:16"},{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5100,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24117:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24144:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5102,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"24128:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"24128:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5115,"nodeType":"ExpressionStatement","src":"24117:49:16"},{"expression":{"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24180:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5117,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24190:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5119,"nodeType":"ExpressionStatement","src":"24180:13:16"},{"expression":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"24207:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5121,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24217:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5123,"nodeType":"ExpressionStatement","src":"24207:13:16"},{"expression":{"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5124,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24235:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24262:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5126,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"24246:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"24246:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5139,"nodeType":"ExpressionStatement","src":"24235:49:16"},{"expression":{"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24298:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5141,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24308:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5143,"nodeType":"ExpressionStatement","src":"24298:13:16"},{"expression":{"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"24325:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5145,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24335:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5147,"nodeType":"ExpressionStatement","src":"24325:13:16"},{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5148,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24353:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24379:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5150,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"24363:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"24363:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5163,"nodeType":"ExpressionStatement","src":"24353:47:16"},{"expression":{"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24414:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5165,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24424:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5167,"nodeType":"ExpressionStatement","src":"24414:13:16"},{"expression":{"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5168,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"24441:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5169,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24451:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5171,"nodeType":"ExpressionStatement","src":"24441:13:16"},{"expression":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5172,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24469:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24495:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5174,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"24479:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"24479:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5187,"nodeType":"ExpressionStatement","src":"24469:47:16"},{"expression":{"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24530:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5189,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24540:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5191,"nodeType":"ExpressionStatement","src":"24530:13:16"},{"expression":{"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"24557:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5193,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24567:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5195,"nodeType":"ExpressionStatement","src":"24557:13:16"},{"expression":{"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5196,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24585:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24611:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5198,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"24595:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"24595:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5211,"nodeType":"ExpressionStatement","src":"24585:47:16"},{"expression":{"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24646:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5213,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24656:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5215,"nodeType":"ExpressionStatement","src":"24646:13:16"},{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"24673:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5217,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"24683:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5219,"nodeType":"ExpressionStatement","src":"24673:13:16"},{"expression":{"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"24701:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"24727:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5221,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"24711:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"24711:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5228,"nodeType":"ExpressionStatement","src":"24701:36:16"}]},{"expression":{"id":5230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"24764:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5044,"id":5231,"nodeType":"Return","src":"24757:13:16"}]},"documentation":{"id":5038,"nodeType":"StructuredDocumentation","src":"23611:119:16","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5233,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:16","nodeType":"FunctionDefinition","parameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"value","nameLocation":"23757:5:16","nodeType":"VariableDeclaration","scope":5233,"src":"23749:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:16"},"returnParameters":{"id":5044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5233,"src":"23787:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:16"},"scope":5624,"src":"23735:1042:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5266,"nodeType":"Block","src":"25010:175:16","statements":[{"id":5265,"nodeType":"UncheckedBlock","src":"25020:159:16","statements":[{"assignments":[5245],"declarations":[{"constant":false,"id":5245,"mutability":"mutable","name":"result","nameLocation":"25052:6:16","nodeType":"VariableDeclaration","scope":5265,"src":"25044:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5249,"initialValue":{"arguments":[{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"25066:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5246,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5233,5267],"referencedDeclaration":5233,"src":"25061:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"25093:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5254,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"25135:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}],"id":5253,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"25118:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4030_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"25153:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"25162:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5251,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"25102:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"25102:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5243,"id":5264,"nodeType":"Return","src":"25086:82:16"}]}]},"documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"24783:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5267,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:16","nodeType":"FunctionDefinition","parameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"value","nameLocation":"24952:5:16","nodeType":"VariableDeclaration","scope":5267,"src":"24944:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5239,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:16","nodeType":"VariableDeclaration","scope":5267,"src":"24959:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"},"typeName":{"id":5238,"nodeType":"UserDefinedTypeName","pathNode":{"id":5237,"name":"Rounding","nameLocations":["24959:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"24959:8:16"},"referencedDeclaration":4030,"src":"24959:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:16"},"returnParameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5267,"src":"25001:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5241,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:16"},"scope":5624,"src":"24930:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5395,"nodeType":"Block","src":"25378:854:16","statements":[{"assignments":[5276],"declarations":[{"constant":false,"id":5276,"mutability":"mutable","name":"result","nameLocation":"25396:6:16","nodeType":"VariableDeclaration","scope":5395,"src":"25388:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5275,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5278,"initialValue":{"hexValue":"30","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:16"},{"id":5392,"nodeType":"UncheckedBlock","src":"25416:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25444:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5295,"nodeType":"IfStatement","src":"25440:103:16","trueBody":{"id":5294,"nodeType":"Block","src":"25463:80:16","statements":[{"expression":{"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25481:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5289,"nodeType":"ExpressionStatement","src":"25481:17:16"},{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"25516:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5293,"nodeType":"ExpressionStatement","src":"25516:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25560:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5312,"nodeType":"IfStatement","src":"25556:103:16","trueBody":{"id":5311,"nodeType":"Block","src":"25579:80:16","statements":[{"expression":{"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25597:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5306,"nodeType":"ExpressionStatement","src":"25597:17:16"},{"expression":{"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"25632:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5310,"nodeType":"ExpressionStatement","src":"25632:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25676:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5329,"nodeType":"IfStatement","src":"25672:103:16","trueBody":{"id":5328,"nodeType":"Block","src":"25695:80:16","statements":[{"expression":{"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25713:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5323,"nodeType":"ExpressionStatement","src":"25713:17:16"},{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"25748:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5327,"nodeType":"ExpressionStatement","src":"25748:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25792:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5346,"nodeType":"IfStatement","src":"25788:100:16","trueBody":{"id":5345,"nodeType":"Block","src":"25810:78:16","statements":[{"expression":{"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25828:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5340,"nodeType":"ExpressionStatement","src":"25828:16:16"},{"expression":{"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"25862:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5344,"nodeType":"ExpressionStatement","src":"25862:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25905:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5363,"nodeType":"IfStatement","src":"25901:100:16","trueBody":{"id":5362,"nodeType":"Block","src":"25923:78:16","statements":[{"expression":{"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"25941:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5357,"nodeType":"ExpressionStatement","src":"25941:16:16"},{"expression":{"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"25975:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5361,"nodeType":"ExpressionStatement","src":"25975:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"26018:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5380,"nodeType":"IfStatement","src":"26014:100:16","trueBody":{"id":5379,"nodeType":"Block","src":"26036:78:16","statements":[{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"26054:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5374,"nodeType":"ExpressionStatement","src":"26054:16:16"},{"expression":{"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"26088:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5378,"nodeType":"ExpressionStatement","src":"26088:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"26131:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5391,"nodeType":"IfStatement","src":"26127:66:16","trueBody":{"id":5390,"nodeType":"Block","src":"26149:44:16","statements":[{"expression":{"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"26167:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5389,"nodeType":"ExpressionStatement","src":"26167:11:16"}]}}]},{"expression":{"id":5393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"26219:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5274,"id":5394,"nodeType":"Return","src":"26212:13:16"}]},"documentation":{"id":5268,"nodeType":"StructuredDocumentation","src":"25191:120:16","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5396,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:16","nodeType":"FunctionDefinition","parameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"value","nameLocation":"25339:5:16","nodeType":"VariableDeclaration","scope":5396,"src":"25331:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5269,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:16"},"returnParameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5396,"src":"25369:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5272,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:16"},"scope":5624,"src":"25316:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5429,"nodeType":"Block","src":"26467:177:16","statements":[{"id":5428,"nodeType":"UncheckedBlock","src":"26477:161:16","statements":[{"assignments":[5408],"declarations":[{"constant":false,"id":5408,"mutability":"mutable","name":"result","nameLocation":"26509:6:16","nodeType":"VariableDeclaration","scope":5428,"src":"26501:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5412,"initialValue":{"arguments":[{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"26524:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5409,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5396,5430],"referencedDeclaration":5396,"src":"26518:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"26551:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5417,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"26593:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}],"id":5416,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"26576:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4030_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"26612:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"26621:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5414,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"26560:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"26560:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5406,"id":5427,"nodeType":"Return","src":"26544:83:16"}]}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"26238:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5430,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:16","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"value","nameLocation":"26409:5:16","nodeType":"VariableDeclaration","scope":5430,"src":"26401:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5402,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:16","nodeType":"VariableDeclaration","scope":5430,"src":"26416:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"},"typeName":{"id":5401,"nodeType":"UserDefinedTypeName","pathNode":{"id":5400,"name":"Rounding","nameLocations":["26416:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"26416:8:16"},"referencedDeclaration":4030,"src":"26416:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:16"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5430,"src":"26458:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5404,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:16"},"scope":5624,"src":"26386:258:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"26964:674:16","statements":[{"assignments":[5439],"declarations":[{"constant":false,"id":5439,"mutability":"mutable","name":"result","nameLocation":"26982:6:16","nodeType":"VariableDeclaration","scope":5566,"src":"26974:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5441,"initialValue":{"hexValue":"30","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:16"},{"assignments":[5443],"declarations":[{"constant":false,"id":5443,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:16","nodeType":"VariableDeclaration","scope":5566,"src":"27002:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5442,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5444,"nodeType":"VariableDeclarationStatement","src":"27002:12:16"},{"id":5563,"nodeType":"UncheckedBlock","src":"27024:585:16","statements":[{"expression":{"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5445,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27048:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27071:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5446,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"27055:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"27055:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5458,"nodeType":"ExpressionStatement","src":"27048:46:16"},{"expression":{"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27108:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27118:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5464,"nodeType":"ExpressionStatement","src":"27108:20:16"},{"expression":{"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"27142:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5466,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27152:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5470,"nodeType":"ExpressionStatement","src":"27142:19:16"},{"expression":{"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5471,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27176:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27199:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5472,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"27183:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"27183:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5484,"nodeType":"ExpressionStatement","src":"27176:45:16"},{"expression":{"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27235:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5486,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27245:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5490,"nodeType":"ExpressionStatement","src":"27235:19:16"},{"expression":{"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"27268:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5492,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27278:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5496,"nodeType":"ExpressionStatement","src":"27268:18:16"},{"expression":{"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5497,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27301:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27324:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5498,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"27308:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"27308:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5510,"nodeType":"ExpressionStatement","src":"27301:45:16"},{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27360:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5512,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27370:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5516,"nodeType":"ExpressionStatement","src":"27360:19:16"},{"expression":{"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5517,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"27393:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5518,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27403:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5522,"nodeType":"ExpressionStatement","src":"27393:18:16"},{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27426:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27449:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5524,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"27433:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"27433:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5536,"nodeType":"ExpressionStatement","src":"27426:45:16"},{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27485:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5538,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27495:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5542,"nodeType":"ExpressionStatement","src":"27485:19:16"},{"expression":{"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"27518:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"27528:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5548,"nodeType":"ExpressionStatement","src":"27518:18:16"},{"expression":{"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"27551:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"27577:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5550,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"27561:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"27561:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5562,"nodeType":"ExpressionStatement","src":"27551:47:16"}]},{"expression":{"id":5564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"27625:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5437,"id":5565,"nodeType":"Return","src":"27618:13:16"}]},"documentation":{"id":5431,"nodeType":"StructuredDocumentation","src":"26650:246:16","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:16","nodeType":"FunctionDefinition","parameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"value","nameLocation":"26925:5:16","nodeType":"VariableDeclaration","scope":5567,"src":"26917:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:16"},"returnParameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"26955:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:16"},"scope":5624,"src":"26901:737:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5603,"nodeType":"Block","src":"27875:184:16","statements":[{"id":5602,"nodeType":"UncheckedBlock","src":"27885:168:16","statements":[{"assignments":[5579],"declarations":[{"constant":false,"id":5579,"mutability":"mutable","name":"result","nameLocation":"27917:6:16","nodeType":"VariableDeclaration","scope":5602,"src":"27909:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5578,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5583,"initialValue":{"arguments":[{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"27933:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5580,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5567,5604],"referencedDeclaration":5567,"src":"27926:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"27960:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5588,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"28002:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}],"id":5587,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"27985:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4030_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"28021:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"28036:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5585,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"27969:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"27969:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5577,"id":5601,"nodeType":"Return","src":"27953:89:16"}]}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"27644:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5604,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:16","nodeType":"FunctionDefinition","parameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"value","nameLocation":"27817:5:16","nodeType":"VariableDeclaration","scope":5604,"src":"27809:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5573,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:16","nodeType":"VariableDeclaration","scope":5604,"src":"27824:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"},"typeName":{"id":5572,"nodeType":"UserDefinedTypeName","pathNode":{"id":5571,"name":"Rounding","nameLocations":["27824:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"27824:8:16"},"referencedDeclaration":4030,"src":"27824:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:16"},"returnParameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5604,"src":"27866:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:16"},"scope":5624,"src":"27793:266:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"28257:48:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5615,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"28280:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}],"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5613,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:16","typeDescriptions":{}}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5612,"id":5621,"nodeType":"Return","src":"28267:31:16"}]},"documentation":{"id":5605,"nodeType":"StructuredDocumentation","src":"28065:113:16","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:16","nodeType":"FunctionDefinition","parameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:16","nodeType":"VariableDeclaration","scope":5623,"src":"28209:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"},"typeName":{"id":5607,"nodeType":"UserDefinedTypeName","pathNode":{"id":5606,"name":"Rounding","nameLocations":["28209:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"28209:8:16"},"referencedDeclaration":4030,"src":"28209:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4030","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:16"},"returnParameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5623,"src":"28251:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5610,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:16"},"scope":5624,"src":"28183:122:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5625,"src":"281:28026:16","usedErrors":[],"usedEvents":[]}],"src":"103:28205:16"},"id":16},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7389]},"id":7390,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5626,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5627,"nodeType":"StructuredDocumentation","src":"218:550:17","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7389,"linearizedBaseContracts":[7389],"name":"SafeCast","nameLocation":"777:8:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"792:68:17","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5634,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:17","nodeType":"ErrorDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"bits","nameLocation":"908:4:17","nodeType":"VariableDeclaration","scope":5634,"src":"902:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5629,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5632,"mutability":"mutable","name":"value","nameLocation":"922:5:17","nodeType":"VariableDeclaration","scope":5634,"src":"914:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:17"},"src":"865:64:17"},{"documentation":{"id":5635,"nodeType":"StructuredDocumentation","src":"935:75:17","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5639,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:17","nodeType":"ErrorDefinition","parameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"value","nameLocation":"1056:5:17","nodeType":"VariableDeclaration","scope":5639,"src":"1049:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5636,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:17"},"src":"1015:48:17"},{"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"1069:67:17","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5646,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:17","nodeType":"ErrorDefinition","parameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"bits","nameLocation":"1183:4:17","nodeType":"VariableDeclaration","scope":5646,"src":"1177:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5641,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5644,"mutability":"mutable","name":"value","nameLocation":"1196:5:17","nodeType":"VariableDeclaration","scope":5646,"src":"1189:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5643,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:17"},"src":"1141:62:17"},{"documentation":{"id":5647,"nodeType":"StructuredDocumentation","src":"1209:75:17","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5651,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:17","nodeType":"ErrorDefinition","parameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"value","nameLocation":"1331:5:17","nodeType":"VariableDeclaration","scope":5651,"src":"1323:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:17"},"src":"1289:49:17"},{"body":{"id":5678,"nodeType":"Block","src":"1695:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"1709:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5661,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1717:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:17","memberName":"max","nodeType":"MemberAccess","src":"1717:17:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"nodeType":"IfStatement","src":"1705:105:17","trueBody":{"id":5671,"nodeType":"Block","src":"1736:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"1793:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5666,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"1757:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5670,"nodeType":"RevertStatement","src":"1750:49:17"}]}},{"expression":{"arguments":[{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5673,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:17","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5658,"id":5677,"nodeType":"Return","src":"1819:21:17"}]},"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"1344:280:17","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:17","nodeType":"FunctionDefinition","parameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"value","nameLocation":"1656:5:17","nodeType":"VariableDeclaration","scope":5679,"src":"1648:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:17"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"1686:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5656,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:17"},"scope":7389,"src":"1629:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5706,"nodeType":"Block","src":"2204:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"2218:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5689,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2226:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:17","memberName":"max","nodeType":"MemberAccess","src":"2226:17:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5700,"nodeType":"IfStatement","src":"2214:105:17","trueBody":{"id":5699,"nodeType":"Block","src":"2245:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"2302:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5694,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"2266:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5698,"nodeType":"RevertStatement","src":"2259:49:17"}]}},{"expression":{"arguments":[{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"2343:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5701,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:17","typeDescriptions":{}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5686,"id":5705,"nodeType":"Return","src":"2328:21:17"}]},"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"1853:280:17","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:17","nodeType":"FunctionDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"value","nameLocation":"2165:5:17","nodeType":"VariableDeclaration","scope":5707,"src":"2157:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:17"},"returnParameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5707,"src":"2195:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5684,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:17"},"scope":7389,"src":"2138:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5734,"nodeType":"Block","src":"2713:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"2727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5717,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2735:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:17","memberName":"max","nodeType":"MemberAccess","src":"2735:17:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5728,"nodeType":"IfStatement","src":"2723:105:17","trueBody":{"id":5727,"nodeType":"Block","src":"2754:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"2811:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5722,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"2775:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5726,"nodeType":"RevertStatement","src":"2768:49:17"}]}},{"expression":{"arguments":[{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"2852:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5729,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:17","typeDescriptions":{}}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5714,"id":5733,"nodeType":"Return","src":"2837:21:17"}]},"documentation":{"id":5708,"nodeType":"StructuredDocumentation","src":"2362:280:17","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5735,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:17","nodeType":"FunctionDefinition","parameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"value","nameLocation":"2674:5:17","nodeType":"VariableDeclaration","scope":5735,"src":"2666:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:17"},"returnParameters":{"id":5714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5735,"src":"2704:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5712,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:17"},"scope":7389,"src":"2647:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5762,"nodeType":"Block","src":"3222:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"3236:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5745,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3244:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:17","memberName":"max","nodeType":"MemberAccess","src":"3244:17:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5756,"nodeType":"IfStatement","src":"3232:105:17","trueBody":{"id":5755,"nodeType":"Block","src":"3263:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"3320:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5750,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"3284:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5754,"nodeType":"RevertStatement","src":"3277:49:17"}]}},{"expression":{"arguments":[{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"3361:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5757,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:17","typeDescriptions":{}}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5742,"id":5761,"nodeType":"Return","src":"3346:21:17"}]},"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"2871:280:17","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5763,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:17","nodeType":"FunctionDefinition","parameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"value","nameLocation":"3183:5:17","nodeType":"VariableDeclaration","scope":5763,"src":"3175:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5737,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:17"},"returnParameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5763,"src":"3213:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5740,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:17"},"scope":7389,"src":"3156:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5790,"nodeType":"Block","src":"3731:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5773,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3753:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:17","memberName":"max","nodeType":"MemberAccess","src":"3753:17:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5784,"nodeType":"IfStatement","src":"3741:105:17","trueBody":{"id":5783,"nodeType":"Block","src":"3772:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"3829:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5778,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"3793:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5782,"nodeType":"RevertStatement","src":"3786:49:17"}]}},{"expression":{"arguments":[{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"3870:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5785,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:17","typeDescriptions":{}}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5770,"id":5789,"nodeType":"Return","src":"3855:21:17"}]},"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"3380:280:17","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:17","nodeType":"FunctionDefinition","parameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"value","nameLocation":"3692:5:17","nodeType":"VariableDeclaration","scope":5791,"src":"3684:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5765,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:17"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5791,"src":"3722:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5768,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:17"},"scope":7389,"src":"3665:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5818,"nodeType":"Block","src":"4240:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"4254:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5801,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4262:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:17","memberName":"max","nodeType":"MemberAccess","src":"4262:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5812,"nodeType":"IfStatement","src":"4250:105:17","trueBody":{"id":5811,"nodeType":"Block","src":"4281:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"4338:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5806,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"4302:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5810,"nodeType":"RevertStatement","src":"4295:49:17"}]}},{"expression":{"arguments":[{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"4379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5813,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:17","typeDescriptions":{}}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5798,"id":5817,"nodeType":"Return","src":"4364:21:17"}]},"documentation":{"id":5792,"nodeType":"StructuredDocumentation","src":"3889:280:17","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:17","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"value","nameLocation":"4201:5:17","nodeType":"VariableDeclaration","scope":5819,"src":"4193:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5793,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:17"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5819,"src":"4231:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5796,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:17"},"scope":7389,"src":"4174:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5846,"nodeType":"Block","src":"4749:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"4763:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5829,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5828,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4771:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:17","memberName":"max","nodeType":"MemberAccess","src":"4771:17:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5840,"nodeType":"IfStatement","src":"4759:105:17","trueBody":{"id":5839,"nodeType":"Block","src":"4790:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"4847:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"4811:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5838,"nodeType":"RevertStatement","src":"4804:49:17"}]}},{"expression":{"arguments":[{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"4888:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5841,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:17","typeDescriptions":{}}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5826,"id":5845,"nodeType":"Return","src":"4873:21:17"}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"4398:280:17","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5847,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:17","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"value","nameLocation":"4710:5:17","nodeType":"VariableDeclaration","scope":5847,"src":"4702:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:17"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5847,"src":"4740:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5824,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:17"},"scope":7389,"src":"4683:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5874,"nodeType":"Block","src":"5258:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"5272:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5857,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5856,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5280:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:17","memberName":"max","nodeType":"MemberAccess","src":"5280:17:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5868,"nodeType":"IfStatement","src":"5268:105:17","trueBody":{"id":5867,"nodeType":"Block","src":"5299:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"5356:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5862,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"5320:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5866,"nodeType":"RevertStatement","src":"5313:49:17"}]}},{"expression":{"arguments":[{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"5397:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5869,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:17","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5854,"id":5873,"nodeType":"Return","src":"5382:21:17"}]},"documentation":{"id":5848,"nodeType":"StructuredDocumentation","src":"4907:280:17","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:17","nodeType":"FunctionDefinition","parameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"value","nameLocation":"5219:5:17","nodeType":"VariableDeclaration","scope":5875,"src":"5211:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:17"},"returnParameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5875,"src":"5249:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5852,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:17"},"scope":7389,"src":"5192:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5902,"nodeType":"Block","src":"5767:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"5781:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5885,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5789:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:17","memberName":"max","nodeType":"MemberAccess","src":"5789:17:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5896,"nodeType":"IfStatement","src":"5777:105:17","trueBody":{"id":5895,"nodeType":"Block","src":"5808:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"5865:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5890,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"5829:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5894,"nodeType":"RevertStatement","src":"5822:49:17"}]}},{"expression":{"arguments":[{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"5906:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5897,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:17","typeDescriptions":{}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5882,"id":5901,"nodeType":"Return","src":"5891:21:17"}]},"documentation":{"id":5876,"nodeType":"StructuredDocumentation","src":"5416:280:17","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5903,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:17","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"value","nameLocation":"5728:5:17","nodeType":"VariableDeclaration","scope":5903,"src":"5720:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:17"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5903,"src":"5758:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5880,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:17"},"scope":7389,"src":"5701:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"6276:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"6290:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5913,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:17","memberName":"max","nodeType":"MemberAccess","src":"6298:17:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5924,"nodeType":"IfStatement","src":"6286:105:17","trueBody":{"id":5923,"nodeType":"Block","src":"6317:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"6374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5918,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"6338:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5922,"nodeType":"RevertStatement","src":"6331:49:17"}]}},{"expression":{"arguments":[{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"6415:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5925,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:17","typeDescriptions":{}}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5910,"id":5929,"nodeType":"Return","src":"6400:21:17"}]},"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"5925:280:17","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:17","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"value","nameLocation":"6237:5:17","nodeType":"VariableDeclaration","scope":5931,"src":"6229:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:17"},"returnParameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5931,"src":"6267:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5908,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:17"},"scope":7389,"src":"6210:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5958,"nodeType":"Block","src":"6785:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"6799:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5941,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6807:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:17","memberName":"max","nodeType":"MemberAccess","src":"6807:17:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5952,"nodeType":"IfStatement","src":"6795:105:17","trueBody":{"id":5951,"nodeType":"Block","src":"6826:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"6883:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5946,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"6847:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5950,"nodeType":"RevertStatement","src":"6840:49:17"}]}},{"expression":{"arguments":[{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"6924:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5953,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:17","typeDescriptions":{}}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5938,"id":5957,"nodeType":"Return","src":"6909:21:17"}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"6434:280:17","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5959,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:17","nodeType":"FunctionDefinition","parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"value","nameLocation":"6746:5:17","nodeType":"VariableDeclaration","scope":5959,"src":"6738:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:17"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5959,"src":"6776:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5936,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:17"},"scope":7389,"src":"6719:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5986,"nodeType":"Block","src":"7294:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"7308:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5969,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5968,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7316:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:17","memberName":"max","nodeType":"MemberAccess","src":"7316:17:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5980,"nodeType":"IfStatement","src":"7304:105:17","trueBody":{"id":5979,"nodeType":"Block","src":"7335:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"7392:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5974,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"7356:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5978,"nodeType":"RevertStatement","src":"7349:49:17"}]}},{"expression":{"arguments":[{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"7433:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5981,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:17","typeDescriptions":{}}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5966,"id":5985,"nodeType":"Return","src":"7418:21:17"}]},"documentation":{"id":5960,"nodeType":"StructuredDocumentation","src":"6943:280:17","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5987,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:17","nodeType":"FunctionDefinition","parameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"value","nameLocation":"7255:5:17","nodeType":"VariableDeclaration","scope":5987,"src":"7247:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5961,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:17"},"returnParameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5987,"src":"7285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5964,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:17"},"scope":7389,"src":"7228:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6014,"nodeType":"Block","src":"7803:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"7817:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5997,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5996,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7825:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:17","memberName":"max","nodeType":"MemberAccess","src":"7825:17:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6008,"nodeType":"IfStatement","src":"7813:105:17","trueBody":{"id":6007,"nodeType":"Block","src":"7844:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"7901:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6002,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"7865:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6006,"nodeType":"RevertStatement","src":"7858:49:17"}]}},{"expression":{"arguments":[{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"7942:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6009,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:17","typeDescriptions":{}}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5994,"id":6013,"nodeType":"Return","src":"7927:21:17"}]},"documentation":{"id":5988,"nodeType":"StructuredDocumentation","src":"7452:280:17","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6015,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:17","nodeType":"FunctionDefinition","parameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"value","nameLocation":"7764:5:17","nodeType":"VariableDeclaration","scope":6015,"src":"7756:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5989,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:17"},"returnParameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6015,"src":"7794:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5992,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:17"},"scope":7389,"src":"7737:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6042,"nodeType":"Block","src":"8312:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"8326:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6025,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8334:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:17","memberName":"max","nodeType":"MemberAccess","src":"8334:17:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6036,"nodeType":"IfStatement","src":"8322:105:17","trueBody":{"id":6035,"nodeType":"Block","src":"8353:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"8410:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6030,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"8374:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6034,"nodeType":"RevertStatement","src":"8367:49:17"}]}},{"expression":{"arguments":[{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"8451:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6037,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:17","typeDescriptions":{}}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6022,"id":6041,"nodeType":"Return","src":"8436:21:17"}]},"documentation":{"id":6016,"nodeType":"StructuredDocumentation","src":"7961:280:17","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6043,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:17","nodeType":"FunctionDefinition","parameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"value","nameLocation":"8273:5:17","nodeType":"VariableDeclaration","scope":6043,"src":"8265:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:17"},"returnParameters":{"id":6022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6043,"src":"8303:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6020,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:17"},"scope":7389,"src":"8246:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6070,"nodeType":"Block","src":"8821:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"8835:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6053,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6052,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8843:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:17","memberName":"max","nodeType":"MemberAccess","src":"8843:17:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6064,"nodeType":"IfStatement","src":"8831:105:17","trueBody":{"id":6063,"nodeType":"Block","src":"8862:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"8919:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6058,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"8883:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6062,"nodeType":"RevertStatement","src":"8876:49:17"}]}},{"expression":{"arguments":[{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"8960:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6065,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:17","typeDescriptions":{}}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6050,"id":6069,"nodeType":"Return","src":"8945:21:17"}]},"documentation":{"id":6044,"nodeType":"StructuredDocumentation","src":"8470:280:17","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6071,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:17","nodeType":"FunctionDefinition","parameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"value","nameLocation":"8782:5:17","nodeType":"VariableDeclaration","scope":6071,"src":"8774:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:17"},"returnParameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6071,"src":"8812:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6048,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:17"},"scope":7389,"src":"8755:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6098,"nodeType":"Block","src":"9330:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"9344:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6081,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6080,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9352:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:17","memberName":"max","nodeType":"MemberAccess","src":"9352:17:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6092,"nodeType":"IfStatement","src":"9340:105:17","trueBody":{"id":6091,"nodeType":"Block","src":"9371:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"9428:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6086,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"9392:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6090,"nodeType":"RevertStatement","src":"9385:49:17"}]}},{"expression":{"arguments":[{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"9469:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6093,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:17","typeDescriptions":{}}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6078,"id":6097,"nodeType":"Return","src":"9454:21:17"}]},"documentation":{"id":6072,"nodeType":"StructuredDocumentation","src":"8979:280:17","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6099,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:17","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"value","nameLocation":"9291:5:17","nodeType":"VariableDeclaration","scope":6099,"src":"9283:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:17"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6099,"src":"9321:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6076,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:17"},"scope":7389,"src":"9264:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6126,"nodeType":"Block","src":"9839:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"9853:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6109,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6108,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9861:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:17","memberName":"max","nodeType":"MemberAccess","src":"9861:17:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6120,"nodeType":"IfStatement","src":"9849:105:17","trueBody":{"id":6119,"nodeType":"Block","src":"9880:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"9937:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6114,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"9901:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6118,"nodeType":"RevertStatement","src":"9894:49:17"}]}},{"expression":{"arguments":[{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"9978:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6121,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:17","typeDescriptions":{}}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6106,"id":6125,"nodeType":"Return","src":"9963:21:17"}]},"documentation":{"id":6100,"nodeType":"StructuredDocumentation","src":"9488:280:17","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6127,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:17","nodeType":"FunctionDefinition","parameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"value","nameLocation":"9800:5:17","nodeType":"VariableDeclaration","scope":6127,"src":"9792:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6101,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:17"},"returnParameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6127,"src":"9830:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6104,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:17"},"scope":7389,"src":"9773:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6154,"nodeType":"Block","src":"10348:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"10362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6137,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6136,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10370:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:17","memberName":"max","nodeType":"MemberAccess","src":"10370:17:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6148,"nodeType":"IfStatement","src":"10358:105:17","trueBody":{"id":6147,"nodeType":"Block","src":"10389:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"10446:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6142,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"10410:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6146,"nodeType":"RevertStatement","src":"10403:49:17"}]}},{"expression":{"arguments":[{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"10487:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6149,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:17","typeDescriptions":{}}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6134,"id":6153,"nodeType":"Return","src":"10472:21:17"}]},"documentation":{"id":6128,"nodeType":"StructuredDocumentation","src":"9997:280:17","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6155,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:17","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"value","nameLocation":"10309:5:17","nodeType":"VariableDeclaration","scope":6155,"src":"10301:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6129,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:17"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6155,"src":"10339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6132,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:17"},"scope":7389,"src":"10282:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6182,"nodeType":"Block","src":"10857:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"10871:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6165,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6164,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10879:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:17","memberName":"max","nodeType":"MemberAccess","src":"10879:17:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6176,"nodeType":"IfStatement","src":"10867:105:17","trueBody":{"id":6175,"nodeType":"Block","src":"10898:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"10955:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6170,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"10919:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6174,"nodeType":"RevertStatement","src":"10912:49:17"}]}},{"expression":{"arguments":[{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"10996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6177,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:17","typeDescriptions":{}}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6162,"id":6181,"nodeType":"Return","src":"10981:21:17"}]},"documentation":{"id":6156,"nodeType":"StructuredDocumentation","src":"10506:280:17","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6183,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:17","nodeType":"FunctionDefinition","parameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6158,"mutability":"mutable","name":"value","nameLocation":"10818:5:17","nodeType":"VariableDeclaration","scope":6183,"src":"10810:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:17"},"returnParameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6183,"src":"10848:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6160,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:17"},"scope":7389,"src":"10791:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6210,"nodeType":"Block","src":"11360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"11374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6193,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6192,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:17","memberName":"max","nodeType":"MemberAccess","src":"11382:16:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6204,"nodeType":"IfStatement","src":"11370:103:17","trueBody":{"id":6203,"nodeType":"Block","src":"11400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"11456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6198,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"11421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6202,"nodeType":"RevertStatement","src":"11414:48:17"}]}},{"expression":{"arguments":[{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"11496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6205,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:17","typeDescriptions":{}}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6190,"id":6209,"nodeType":"Return","src":"11482:20:17"}]},"documentation":{"id":6184,"nodeType":"StructuredDocumentation","src":"11015:276:17","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6211,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"value","nameLocation":"11322:5:17","nodeType":"VariableDeclaration","scope":6211,"src":"11314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6185,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:17"},"returnParameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6211,"src":"11352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6188,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:17"},"scope":7389,"src":"11296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6238,"nodeType":"Block","src":"11860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"11874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6221,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6220,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:17","memberName":"max","nodeType":"MemberAccess","src":"11882:16:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6232,"nodeType":"IfStatement","src":"11870:103:17","trueBody":{"id":6231,"nodeType":"Block","src":"11900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"11956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6226,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"11921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6230,"nodeType":"RevertStatement","src":"11914:48:17"}]}},{"expression":{"arguments":[{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"11996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6233,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:17","typeDescriptions":{}}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6218,"id":6237,"nodeType":"Return","src":"11982:20:17"}]},"documentation":{"id":6212,"nodeType":"StructuredDocumentation","src":"11515:276:17","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6239,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"value","nameLocation":"11822:5:17","nodeType":"VariableDeclaration","scope":6239,"src":"11814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6213,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:17"},"returnParameters":{"id":6218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6239,"src":"11852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6216,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:17"},"scope":7389,"src":"11796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6266,"nodeType":"Block","src":"12360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"12374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6249,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:17","memberName":"max","nodeType":"MemberAccess","src":"12382:16:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6260,"nodeType":"IfStatement","src":"12370:103:17","trueBody":{"id":6259,"nodeType":"Block","src":"12400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"12456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6254,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"12421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"RevertStatement","src":"12414:48:17"}]}},{"expression":{"arguments":[{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"12496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6261,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:17","typeDescriptions":{}}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6246,"id":6265,"nodeType":"Return","src":"12482:20:17"}]},"documentation":{"id":6240,"nodeType":"StructuredDocumentation","src":"12015:276:17","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6267,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"value","nameLocation":"12322:5:17","nodeType":"VariableDeclaration","scope":6267,"src":"12314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6241,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:17"},"returnParameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6267,"src":"12352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6244,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:17"},"scope":7389,"src":"12296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6294,"nodeType":"Block","src":"12860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"12874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6277,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6276,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:17","memberName":"max","nodeType":"MemberAccess","src":"12882:16:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6288,"nodeType":"IfStatement","src":"12870:103:17","trueBody":{"id":6287,"nodeType":"Block","src":"12900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"12956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6282,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"12921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6286,"nodeType":"RevertStatement","src":"12914:48:17"}]}},{"expression":{"arguments":[{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"12996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6289,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:17","typeDescriptions":{}}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6274,"id":6293,"nodeType":"Return","src":"12982:20:17"}]},"documentation":{"id":6268,"nodeType":"StructuredDocumentation","src":"12515:276:17","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6295,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6270,"mutability":"mutable","name":"value","nameLocation":"12822:5:17","nodeType":"VariableDeclaration","scope":6295,"src":"12814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6269,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:17"},"returnParameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6295,"src":"12852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6272,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:17"},"scope":7389,"src":"12796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6322,"nodeType":"Block","src":"13360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"13374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6305,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6304,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:17","memberName":"max","nodeType":"MemberAccess","src":"13382:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6316,"nodeType":"IfStatement","src":"13370:103:17","trueBody":{"id":6315,"nodeType":"Block","src":"13400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"13456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6310,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"13421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6314,"nodeType":"RevertStatement","src":"13414:48:17"}]}},{"expression":{"arguments":[{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"13496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6317,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:17","typeDescriptions":{}}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6302,"id":6321,"nodeType":"Return","src":"13482:20:17"}]},"documentation":{"id":6296,"nodeType":"StructuredDocumentation","src":"13015:276:17","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6323,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6298,"mutability":"mutable","name":"value","nameLocation":"13322:5:17","nodeType":"VariableDeclaration","scope":6323,"src":"13314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6297,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:17"},"returnParameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6323,"src":"13352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6300,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:17"},"scope":7389,"src":"13296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6350,"nodeType":"Block","src":"13860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"13874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6333,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6332,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:17","memberName":"max","nodeType":"MemberAccess","src":"13882:16:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6344,"nodeType":"IfStatement","src":"13870:103:17","trueBody":{"id":6343,"nodeType":"Block","src":"13900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"13956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6338,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"13921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6342,"nodeType":"RevertStatement","src":"13914:48:17"}]}},{"expression":{"arguments":[{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"13996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6345,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:17","typeDescriptions":{}}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6330,"id":6349,"nodeType":"Return","src":"13982:20:17"}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"13515:276:17","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6351,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"value","nameLocation":"13822:5:17","nodeType":"VariableDeclaration","scope":6351,"src":"13814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:17"},"returnParameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6351,"src":"13852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6328,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:17"},"scope":7389,"src":"13796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6378,"nodeType":"Block","src":"14360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"14374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6361,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6360,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:17","memberName":"max","nodeType":"MemberAccess","src":"14382:16:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6372,"nodeType":"IfStatement","src":"14370:103:17","trueBody":{"id":6371,"nodeType":"Block","src":"14400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"14456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6366,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"14421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6370,"nodeType":"RevertStatement","src":"14414:48:17"}]}},{"expression":{"arguments":[{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"14496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6373,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:17","typeDescriptions":{}}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6358,"id":6377,"nodeType":"Return","src":"14482:20:17"}]},"documentation":{"id":6352,"nodeType":"StructuredDocumentation","src":"14015:276:17","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6379,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6354,"mutability":"mutable","name":"value","nameLocation":"14322:5:17","nodeType":"VariableDeclaration","scope":6379,"src":"14314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6353,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:17"},"returnParameters":{"id":6358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6379,"src":"14352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6356,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:17"},"scope":7389,"src":"14296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6406,"nodeType":"Block","src":"14860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"14874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6389,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6388,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:17","memberName":"max","nodeType":"MemberAccess","src":"14882:16:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6400,"nodeType":"IfStatement","src":"14870:103:17","trueBody":{"id":6399,"nodeType":"Block","src":"14900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"14956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6394,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"14921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6398,"nodeType":"RevertStatement","src":"14914:48:17"}]}},{"expression":{"arguments":[{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"14996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6401,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:17","typeDescriptions":{}}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6386,"id":6405,"nodeType":"Return","src":"14982:20:17"}]},"documentation":{"id":6380,"nodeType":"StructuredDocumentation","src":"14515:276:17","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6382,"mutability":"mutable","name":"value","nameLocation":"14822:5:17","nodeType":"VariableDeclaration","scope":6407,"src":"14814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6381,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:17"},"returnParameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6407,"src":"14852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6384,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:17"},"scope":7389,"src":"14796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6434,"nodeType":"Block","src":"15360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"15374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6417,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6416,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:17","memberName":"max","nodeType":"MemberAccess","src":"15382:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6428,"nodeType":"IfStatement","src":"15370:103:17","trueBody":{"id":6427,"nodeType":"Block","src":"15400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"15456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6422,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"15421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6426,"nodeType":"RevertStatement","src":"15414:48:17"}]}},{"expression":{"arguments":[{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"15496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6429,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:17","typeDescriptions":{}}},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6414,"id":6433,"nodeType":"Return","src":"15482:20:17"}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"15015:276:17","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6435,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"value","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":6435,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6409,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:17"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6435,"src":"15352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6412,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:17"},"scope":7389,"src":"15296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6462,"nodeType":"Block","src":"15860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"15874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6445,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6444,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:17","memberName":"max","nodeType":"MemberAccess","src":"15882:16:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6456,"nodeType":"IfStatement","src":"15870:103:17","trueBody":{"id":6455,"nodeType":"Block","src":"15900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"15956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6450,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"15921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6454,"nodeType":"RevertStatement","src":"15914:48:17"}]}},{"expression":{"arguments":[{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"15996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6457,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:17","typeDescriptions":{}}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6442,"id":6461,"nodeType":"Return","src":"15982:20:17"}]},"documentation":{"id":6436,"nodeType":"StructuredDocumentation","src":"15515:276:17","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6463,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"value","nameLocation":"15822:5:17","nodeType":"VariableDeclaration","scope":6463,"src":"15814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6437,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:17"},"returnParameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6463,"src":"15852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6440,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:17"},"scope":7389,"src":"15796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6490,"nodeType":"Block","src":"16360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"16374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6473,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:17","memberName":"max","nodeType":"MemberAccess","src":"16382:16:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6484,"nodeType":"IfStatement","src":"16370:103:17","trueBody":{"id":6483,"nodeType":"Block","src":"16400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"16456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6478,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"16421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6482,"nodeType":"RevertStatement","src":"16414:48:17"}]}},{"expression":{"arguments":[{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"16496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6485,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:17","typeDescriptions":{}}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6470,"id":6489,"nodeType":"Return","src":"16482:20:17"}]},"documentation":{"id":6464,"nodeType":"StructuredDocumentation","src":"16015:276:17","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6491,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"value","nameLocation":"16322:5:17","nodeType":"VariableDeclaration","scope":6491,"src":"16314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6465,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:17"},"returnParameters":{"id":6470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6491,"src":"16352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6468,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:17"},"scope":7389,"src":"16296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6518,"nodeType":"Block","src":"16854:146:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"16868:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6501,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6500,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16876:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:17","memberName":"max","nodeType":"MemberAccess","src":"16876:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6512,"nodeType":"IfStatement","src":"16864:101:17","trueBody":{"id":6511,"nodeType":"Block","src":"16893:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"16948:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6506,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"16914:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6510,"nodeType":"RevertStatement","src":"16907:47:17"}]}},{"expression":{"arguments":[{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"16987:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6513,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:17","typeDescriptions":{}}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6498,"id":6517,"nodeType":"Return","src":"16974:19:17"}]},"documentation":{"id":6492,"nodeType":"StructuredDocumentation","src":"16515:272:17","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6519,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:17","nodeType":"FunctionDefinition","parameters":{"id":6495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"value","nameLocation":"16817:5:17","nodeType":"VariableDeclaration","scope":6519,"src":"16809:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6493,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:17"},"returnParameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6519,"src":"16847:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6496,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:17"},"scope":7389,"src":"16792:208:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6541,"nodeType":"Block","src":"17236:128:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"17250:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6535,"nodeType":"IfStatement","src":"17246:81:17","trueBody":{"id":6534,"nodeType":"Block","src":"17261:66:17","statements":[{"errorCall":{"arguments":[{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"17310:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6530,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"17282:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6533,"nodeType":"RevertStatement","src":"17275:41:17"}]}},{"expression":{"arguments":[{"id":6538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"17351:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6536,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:17","typeDescriptions":{}}},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6526,"id":6540,"nodeType":"Return","src":"17336:21:17"}]},"documentation":{"id":6520,"nodeType":"StructuredDocumentation","src":"17006:160:17","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:17","nodeType":"FunctionDefinition","parameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"value","nameLocation":"17197:5:17","nodeType":"VariableDeclaration","scope":6542,"src":"17190:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6521,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:17"},"returnParameters":{"id":6526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6542,"src":"17227:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6524,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:17"},"scope":7389,"src":"17171:193:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6567,"nodeType":"Block","src":"17761:150:17","statements":[{"expression":{"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"17771:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"17791:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6551,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:17","typeDescriptions":{}}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6556,"nodeType":"ExpressionStatement","src":"17771:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6557,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"17811:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"17825:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6566,"nodeType":"IfStatement","src":"17807:98:17","trueBody":{"id":6565,"nodeType":"Block","src":"17832:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"17888:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6560,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"17853:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"RevertStatement","src":"17846:48:17"}]}}]},"documentation":{"id":6543,"nodeType":"StructuredDocumentation","src":"17370:312:17","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6568,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:17","nodeType":"FunctionDefinition","parameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"value","nameLocation":"17712:5:17","nodeType":"VariableDeclaration","scope":6568,"src":"17705:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6544,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:17"},"returnParameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:17","nodeType":"VariableDeclaration","scope":6568,"src":"17742:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6547,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:17"},"scope":7389,"src":"17687:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6593,"nodeType":"Block","src":"18308:150:17","statements":[{"expression":{"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"18318:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"18338:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6577,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:17","typeDescriptions":{}}},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6582,"nodeType":"ExpressionStatement","src":"18318:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6583,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"18358:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"18372:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"nodeType":"IfStatement","src":"18354:98:17","trueBody":{"id":6591,"nodeType":"Block","src":"18379:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"18435:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6586,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"18400:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6590,"nodeType":"RevertStatement","src":"18393:48:17"}]}}]},"documentation":{"id":6569,"nodeType":"StructuredDocumentation","src":"17917:312:17","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6594,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:17","nodeType":"FunctionDefinition","parameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"value","nameLocation":"18259:5:17","nodeType":"VariableDeclaration","scope":6594,"src":"18252:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6570,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:17"},"returnParameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:17","nodeType":"VariableDeclaration","scope":6594,"src":"18289:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6573,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:17"},"scope":7389,"src":"18234:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6619,"nodeType":"Block","src":"18855:150:17","statements":[{"expression":{"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"18865:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"18885:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6603,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:17","typeDescriptions":{}}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6608,"nodeType":"ExpressionStatement","src":"18865:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"18905:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"18919:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6618,"nodeType":"IfStatement","src":"18901:98:17","trueBody":{"id":6617,"nodeType":"Block","src":"18926:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"18982:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6612,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"18947:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"RevertStatement","src":"18940:48:17"}]}}]},"documentation":{"id":6595,"nodeType":"StructuredDocumentation","src":"18464:312:17","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6620,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:17","nodeType":"FunctionDefinition","parameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"value","nameLocation":"18806:5:17","nodeType":"VariableDeclaration","scope":6620,"src":"18799:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6596,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:17"},"returnParameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:17","nodeType":"VariableDeclaration","scope":6620,"src":"18836:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6599,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:17"},"scope":7389,"src":"18781:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6645,"nodeType":"Block","src":"19402:150:17","statements":[{"expression":{"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19412:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"19432:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6629,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:17","typeDescriptions":{}}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6634,"nodeType":"ExpressionStatement","src":"19412:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"19452:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"19466:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6644,"nodeType":"IfStatement","src":"19448:98:17","trueBody":{"id":6643,"nodeType":"Block","src":"19473:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"19529:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6638,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"19494:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6642,"nodeType":"RevertStatement","src":"19487:48:17"}]}}]},"documentation":{"id":6621,"nodeType":"StructuredDocumentation","src":"19011:312:17","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6646,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:17","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"value","nameLocation":"19353:5:17","nodeType":"VariableDeclaration","scope":6646,"src":"19346:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6622,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:17"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:17","nodeType":"VariableDeclaration","scope":6646,"src":"19383:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6625,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:17"},"scope":7389,"src":"19328:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6671,"nodeType":"Block","src":"19949:150:17","statements":[{"expression":{"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"19959:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"19979:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6655,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:17","typeDescriptions":{}}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6660,"nodeType":"ExpressionStatement","src":"19959:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6661,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"19999:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"20013:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6670,"nodeType":"IfStatement","src":"19995:98:17","trueBody":{"id":6669,"nodeType":"Block","src":"20020:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"20076:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6664,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"20041:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6668,"nodeType":"RevertStatement","src":"20034:48:17"}]}}]},"documentation":{"id":6647,"nodeType":"StructuredDocumentation","src":"19558:312:17","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6672,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:17","nodeType":"FunctionDefinition","parameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"value","nameLocation":"19900:5:17","nodeType":"VariableDeclaration","scope":6672,"src":"19893:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6648,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:17"},"returnParameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:17","nodeType":"VariableDeclaration","scope":6672,"src":"19930:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6651,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:17"},"scope":7389,"src":"19875:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6697,"nodeType":"Block","src":"20496:150:17","statements":[{"expression":{"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"20506:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"20526:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6681,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:17","typeDescriptions":{}}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6686,"nodeType":"ExpressionStatement","src":"20506:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"20546:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"20560:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6696,"nodeType":"IfStatement","src":"20542:98:17","trueBody":{"id":6695,"nodeType":"Block","src":"20567:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"20623:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6690,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"20588:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6694,"nodeType":"RevertStatement","src":"20581:48:17"}]}}]},"documentation":{"id":6673,"nodeType":"StructuredDocumentation","src":"20105:312:17","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6698,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:17","nodeType":"FunctionDefinition","parameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"value","nameLocation":"20447:5:17","nodeType":"VariableDeclaration","scope":6698,"src":"20440:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6674,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:17"},"returnParameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:17","nodeType":"VariableDeclaration","scope":6698,"src":"20477:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6677,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:17"},"scope":7389,"src":"20422:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6723,"nodeType":"Block","src":"21043:150:17","statements":[{"expression":{"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"21053:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"21073:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6707,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:17","typeDescriptions":{}}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6712,"nodeType":"ExpressionStatement","src":"21053:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"21093:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"21107:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6722,"nodeType":"IfStatement","src":"21089:98:17","trueBody":{"id":6721,"nodeType":"Block","src":"21114:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"21170:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6716,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"21135:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6720,"nodeType":"RevertStatement","src":"21128:48:17"}]}}]},"documentation":{"id":6699,"nodeType":"StructuredDocumentation","src":"20652:312:17","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6724,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:17","nodeType":"FunctionDefinition","parameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"value","nameLocation":"20994:5:17","nodeType":"VariableDeclaration","scope":6724,"src":"20987:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6700,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:17"},"returnParameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:17","nodeType":"VariableDeclaration","scope":6724,"src":"21024:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6703,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:17"},"scope":7389,"src":"20969:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6749,"nodeType":"Block","src":"21590:150:17","statements":[{"expression":{"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"21600:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"21620:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6733,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:17","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6738,"nodeType":"ExpressionStatement","src":"21600:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6739,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"21640:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"21654:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6748,"nodeType":"IfStatement","src":"21636:98:17","trueBody":{"id":6747,"nodeType":"Block","src":"21661:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"21717:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6742,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"21682:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6746,"nodeType":"RevertStatement","src":"21675:48:17"}]}}]},"documentation":{"id":6725,"nodeType":"StructuredDocumentation","src":"21199:312:17","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6750,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:17","nodeType":"FunctionDefinition","parameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"mutability":"mutable","name":"value","nameLocation":"21541:5:17","nodeType":"VariableDeclaration","scope":6750,"src":"21534:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6726,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:17"},"returnParameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:17","nodeType":"VariableDeclaration","scope":6750,"src":"21571:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6729,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:17"},"scope":7389,"src":"21516:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6775,"nodeType":"Block","src":"22137:150:17","statements":[{"expression":{"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6758,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"22147:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"22167:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6759,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:17","typeDescriptions":{}}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6764,"nodeType":"ExpressionStatement","src":"22147:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6765,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"22187:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"22201:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6774,"nodeType":"IfStatement","src":"22183:98:17","trueBody":{"id":6773,"nodeType":"Block","src":"22208:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"22264:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6768,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"22229:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6772,"nodeType":"RevertStatement","src":"22222:48:17"}]}}]},"documentation":{"id":6751,"nodeType":"StructuredDocumentation","src":"21746:312:17","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6776,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:17","nodeType":"FunctionDefinition","parameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"value","nameLocation":"22088:5:17","nodeType":"VariableDeclaration","scope":6776,"src":"22081:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6752,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:17"},"returnParameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:17","nodeType":"VariableDeclaration","scope":6776,"src":"22118:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6755,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:17"},"scope":7389,"src":"22063:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6801,"nodeType":"Block","src":"22684:150:17","statements":[{"expression":{"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6784,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"22694:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"22714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6785,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:17","typeDescriptions":{}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6790,"nodeType":"ExpressionStatement","src":"22694:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"22734:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"22748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6800,"nodeType":"IfStatement","src":"22730:98:17","trueBody":{"id":6799,"nodeType":"Block","src":"22755:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"22811:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6794,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"22776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6798,"nodeType":"RevertStatement","src":"22769:48:17"}]}}]},"documentation":{"id":6777,"nodeType":"StructuredDocumentation","src":"22293:312:17","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6802,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:17","nodeType":"FunctionDefinition","parameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"value","nameLocation":"22635:5:17","nodeType":"VariableDeclaration","scope":6802,"src":"22628:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6778,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:17"},"returnParameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:17","nodeType":"VariableDeclaration","scope":6802,"src":"22665:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6781,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:17"},"scope":7389,"src":"22610:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"23231:150:17","statements":[{"expression":{"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"23241:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"23261:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6811,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:17","typeDescriptions":{}}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6816,"nodeType":"ExpressionStatement","src":"23241:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"23281:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"23295:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6826,"nodeType":"IfStatement","src":"23277:98:17","trueBody":{"id":6825,"nodeType":"Block","src":"23302:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"23358:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6820,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"23323:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6824,"nodeType":"RevertStatement","src":"23316:48:17"}]}}]},"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"22840:312:17","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:17","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"value","nameLocation":"23182:5:17","nodeType":"VariableDeclaration","scope":6828,"src":"23175:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6804,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:17"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:17","nodeType":"VariableDeclaration","scope":6828,"src":"23212:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6807,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:17"},"scope":7389,"src":"23157:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6853,"nodeType":"Block","src":"23778:150:17","statements":[{"expression":{"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"23788:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"23808:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6837,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:17","typeDescriptions":{}}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6842,"nodeType":"ExpressionStatement","src":"23788:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"23828:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"23842:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6852,"nodeType":"IfStatement","src":"23824:98:17","trueBody":{"id":6851,"nodeType":"Block","src":"23849:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"23905:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6846,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"23870:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6850,"nodeType":"RevertStatement","src":"23863:48:17"}]}}]},"documentation":{"id":6829,"nodeType":"StructuredDocumentation","src":"23387:312:17","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6854,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:17","nodeType":"FunctionDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"value","nameLocation":"23729:5:17","nodeType":"VariableDeclaration","scope":6854,"src":"23722:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6830,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:17"},"returnParameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:17","nodeType":"VariableDeclaration","scope":6854,"src":"23759:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6833,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:17"},"scope":7389,"src":"23704:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6879,"nodeType":"Block","src":"24325:150:17","statements":[{"expression":{"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"24335:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"24355:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6863,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:17","typeDescriptions":{}}},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6868,"nodeType":"ExpressionStatement","src":"24335:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"24375:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"24389:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6878,"nodeType":"IfStatement","src":"24371:98:17","trueBody":{"id":6877,"nodeType":"Block","src":"24396:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"24452:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6872,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"24417:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6876,"nodeType":"RevertStatement","src":"24410:48:17"}]}}]},"documentation":{"id":6855,"nodeType":"StructuredDocumentation","src":"23934:312:17","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6880,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:17","nodeType":"FunctionDefinition","parameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"value","nameLocation":"24276:5:17","nodeType":"VariableDeclaration","scope":6880,"src":"24269:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6856,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:17"},"returnParameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:17","nodeType":"VariableDeclaration","scope":6880,"src":"24306:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6859,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:17"},"scope":7389,"src":"24251:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6905,"nodeType":"Block","src":"24872:150:17","statements":[{"expression":{"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"24882:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"24902:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6889,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:17","typeDescriptions":{}}},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6894,"nodeType":"ExpressionStatement","src":"24882:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"24922:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"24936:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6904,"nodeType":"IfStatement","src":"24918:98:17","trueBody":{"id":6903,"nodeType":"Block","src":"24943:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"24999:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6898,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"24964:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6902,"nodeType":"RevertStatement","src":"24957:48:17"}]}}]},"documentation":{"id":6881,"nodeType":"StructuredDocumentation","src":"24481:312:17","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:17","nodeType":"FunctionDefinition","parameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"value","nameLocation":"24823:5:17","nodeType":"VariableDeclaration","scope":6906,"src":"24816:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6882,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:17"},"returnParameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:17","nodeType":"VariableDeclaration","scope":6906,"src":"24853:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6885,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:17"},"scope":7389,"src":"24798:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6931,"nodeType":"Block","src":"25419:150:17","statements":[{"expression":{"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"25429:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"25449:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6915,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:17","typeDescriptions":{}}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6920,"nodeType":"ExpressionStatement","src":"25429:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"25469:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"25483:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6930,"nodeType":"IfStatement","src":"25465:98:17","trueBody":{"id":6929,"nodeType":"Block","src":"25490:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"25546:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6924,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"25511:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6928,"nodeType":"RevertStatement","src":"25504:48:17"}]}}]},"documentation":{"id":6907,"nodeType":"StructuredDocumentation","src":"25028:312:17","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6932,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:17","nodeType":"FunctionDefinition","parameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"value","nameLocation":"25370:5:17","nodeType":"VariableDeclaration","scope":6932,"src":"25363:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6908,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:17"},"returnParameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:17","nodeType":"VariableDeclaration","scope":6932,"src":"25400:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6911,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:17"},"scope":7389,"src":"25345:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6957,"nodeType":"Block","src":"25966:150:17","statements":[{"expression":{"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"25976:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"25996:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6941,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:17","typeDescriptions":{}}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6946,"nodeType":"ExpressionStatement","src":"25976:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"26016:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"26030:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6956,"nodeType":"IfStatement","src":"26012:98:17","trueBody":{"id":6955,"nodeType":"Block","src":"26037:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"26093:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6950,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"26058:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6954,"nodeType":"RevertStatement","src":"26051:48:17"}]}}]},"documentation":{"id":6933,"nodeType":"StructuredDocumentation","src":"25575:312:17","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6958,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:17","nodeType":"FunctionDefinition","parameters":{"id":6936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"value","nameLocation":"25917:5:17","nodeType":"VariableDeclaration","scope":6958,"src":"25910:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6934,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:17"},"returnParameters":{"id":6939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:17","nodeType":"VariableDeclaration","scope":6958,"src":"25947:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6937,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:17"},"scope":7389,"src":"25892:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6983,"nodeType":"Block","src":"26513:150:17","statements":[{"expression":{"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"26523:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"26543:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6967,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:17","typeDescriptions":{}}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6972,"nodeType":"ExpressionStatement","src":"26523:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"26563:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"26577:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6982,"nodeType":"IfStatement","src":"26559:98:17","trueBody":{"id":6981,"nodeType":"Block","src":"26584:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"26640:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6976,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"26605:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6980,"nodeType":"RevertStatement","src":"26598:48:17"}]}}]},"documentation":{"id":6959,"nodeType":"StructuredDocumentation","src":"26122:312:17","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6984,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:17","nodeType":"FunctionDefinition","parameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"value","nameLocation":"26464:5:17","nodeType":"VariableDeclaration","scope":6984,"src":"26457:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6960,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:17"},"returnParameters":{"id":6965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6964,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:17","nodeType":"VariableDeclaration","scope":6984,"src":"26494:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6963,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:17"},"scope":7389,"src":"26439:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7009,"nodeType":"Block","src":"27060:150:17","statements":[{"expression":{"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"27070:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"27090:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6993,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:17","typeDescriptions":{}}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6998,"nodeType":"ExpressionStatement","src":"27070:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"27110:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"27124:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7008,"nodeType":"IfStatement","src":"27106:98:17","trueBody":{"id":7007,"nodeType":"Block","src":"27131:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"27187:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7002,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"27152:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7006,"nodeType":"RevertStatement","src":"27145:48:17"}]}}]},"documentation":{"id":6985,"nodeType":"StructuredDocumentation","src":"26669:312:17","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:17","nodeType":"FunctionDefinition","parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"mutability":"mutable","name":"value","nameLocation":"27011:5:17","nodeType":"VariableDeclaration","scope":7010,"src":"27004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6986,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:17"},"returnParameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:17","nodeType":"VariableDeclaration","scope":7010,"src":"27041:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6989,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:17"},"scope":7389,"src":"26986:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7035,"nodeType":"Block","src":"27607:150:17","statements":[{"expression":{"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"27617:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"27637:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7019,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:17","typeDescriptions":{}}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7024,"nodeType":"ExpressionStatement","src":"27617:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"27657:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"27671:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7034,"nodeType":"IfStatement","src":"27653:98:17","trueBody":{"id":7033,"nodeType":"Block","src":"27678:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"27734:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7028,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"27699:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7032,"nodeType":"RevertStatement","src":"27692:48:17"}]}}]},"documentation":{"id":7011,"nodeType":"StructuredDocumentation","src":"27216:312:17","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7036,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:17","nodeType":"FunctionDefinition","parameters":{"id":7014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7013,"mutability":"mutable","name":"value","nameLocation":"27558:5:17","nodeType":"VariableDeclaration","scope":7036,"src":"27551:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7012,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:17"},"returnParameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7016,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:17","nodeType":"VariableDeclaration","scope":7036,"src":"27588:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7015,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:17"},"scope":7389,"src":"27533:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7061,"nodeType":"Block","src":"28147:148:17","statements":[{"expression":{"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"28157:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"28176:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7045,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:17","typeDescriptions":{}}},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7050,"nodeType":"ExpressionStatement","src":"28157:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"28196:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"28210:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7060,"nodeType":"IfStatement","src":"28192:97:17","trueBody":{"id":7059,"nodeType":"Block","src":"28217:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"28272:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7054,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"28238:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7058,"nodeType":"RevertStatement","src":"28231:47:17"}]}}]},"documentation":{"id":7037,"nodeType":"StructuredDocumentation","src":"27763:307:17","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7062,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:17","nodeType":"FunctionDefinition","parameters":{"id":7040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"value","nameLocation":"28099:5:17","nodeType":"VariableDeclaration","scope":7062,"src":"28092:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7038,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:17"},"returnParameters":{"id":7043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7042,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:17","nodeType":"VariableDeclaration","scope":7062,"src":"28129:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7041,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:17"},"scope":7389,"src":"28075:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7087,"nodeType":"Block","src":"28685:148:17","statements":[{"expression":{"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"28695:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"28714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7071,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:17","typeDescriptions":{}}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7076,"nodeType":"ExpressionStatement","src":"28695:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"28734:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"28748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7086,"nodeType":"IfStatement","src":"28730:97:17","trueBody":{"id":7085,"nodeType":"Block","src":"28755:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"28810:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7080,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"28776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7084,"nodeType":"RevertStatement","src":"28769:47:17"}]}}]},"documentation":{"id":7063,"nodeType":"StructuredDocumentation","src":"28301:307:17","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7088,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:17","nodeType":"FunctionDefinition","parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"value","nameLocation":"28637:5:17","nodeType":"VariableDeclaration","scope":7088,"src":"28630:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7064,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:17"},"returnParameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:17","nodeType":"VariableDeclaration","scope":7088,"src":"28667:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7067,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:17"},"scope":7389,"src":"28613:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7113,"nodeType":"Block","src":"29223:148:17","statements":[{"expression":{"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"29233:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"29252:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7097,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:17","typeDescriptions":{}}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7102,"nodeType":"ExpressionStatement","src":"29233:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"29272:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"29286:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7112,"nodeType":"IfStatement","src":"29268:97:17","trueBody":{"id":7111,"nodeType":"Block","src":"29293:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"29348:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7106,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"29314:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7110,"nodeType":"RevertStatement","src":"29307:47:17"}]}}]},"documentation":{"id":7089,"nodeType":"StructuredDocumentation","src":"28839:307:17","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:17","nodeType":"FunctionDefinition","parameters":{"id":7092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7091,"mutability":"mutable","name":"value","nameLocation":"29175:5:17","nodeType":"VariableDeclaration","scope":7114,"src":"29168:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7090,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:17"},"returnParameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:17","nodeType":"VariableDeclaration","scope":7114,"src":"29205:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7093,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:17"},"scope":7389,"src":"29151:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7139,"nodeType":"Block","src":"29761:148:17","statements":[{"expression":{"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"29771:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"29790:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7123,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:17","typeDescriptions":{}}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7128,"nodeType":"ExpressionStatement","src":"29771:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"29810:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"29824:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7138,"nodeType":"IfStatement","src":"29806:97:17","trueBody":{"id":7137,"nodeType":"Block","src":"29831:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"29886:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7132,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"29852:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7136,"nodeType":"RevertStatement","src":"29845:47:17"}]}}]},"documentation":{"id":7115,"nodeType":"StructuredDocumentation","src":"29377:307:17","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7140,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:17","nodeType":"FunctionDefinition","parameters":{"id":7118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"value","nameLocation":"29713:5:17","nodeType":"VariableDeclaration","scope":7140,"src":"29706:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7116,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:17"},"returnParameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:17","nodeType":"VariableDeclaration","scope":7140,"src":"29743:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7119,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:17"},"scope":7389,"src":"29689:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7165,"nodeType":"Block","src":"30299:148:17","statements":[{"expression":{"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"30309:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"30328:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7149,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:17","typeDescriptions":{}}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7154,"nodeType":"ExpressionStatement","src":"30309:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"30348:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"30362:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7164,"nodeType":"IfStatement","src":"30344:97:17","trueBody":{"id":7163,"nodeType":"Block","src":"30369:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"30424:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7158,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"30390:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7162,"nodeType":"RevertStatement","src":"30383:47:17"}]}}]},"documentation":{"id":7141,"nodeType":"StructuredDocumentation","src":"29915:307:17","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:17","nodeType":"FunctionDefinition","parameters":{"id":7144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7143,"mutability":"mutable","name":"value","nameLocation":"30251:5:17","nodeType":"VariableDeclaration","scope":7166,"src":"30244:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7142,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:17"},"returnParameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7146,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:17","nodeType":"VariableDeclaration","scope":7166,"src":"30281:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7145,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:17"},"scope":7389,"src":"30227:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7191,"nodeType":"Block","src":"30837:148:17","statements":[{"expression":{"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"30847:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"30866:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7175,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:17","typeDescriptions":{}}},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7180,"nodeType":"ExpressionStatement","src":"30847:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"30886:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"30900:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7190,"nodeType":"IfStatement","src":"30882:97:17","trueBody":{"id":7189,"nodeType":"Block","src":"30907:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"30962:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7184,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"30928:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7188,"nodeType":"RevertStatement","src":"30921:47:17"}]}}]},"documentation":{"id":7167,"nodeType":"StructuredDocumentation","src":"30453:307:17","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:17","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7169,"mutability":"mutable","name":"value","nameLocation":"30789:5:17","nodeType":"VariableDeclaration","scope":7192,"src":"30782:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7168,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:17"},"returnParameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:17","nodeType":"VariableDeclaration","scope":7192,"src":"30819:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7171,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:17"},"scope":7389,"src":"30765:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7217,"nodeType":"Block","src":"31375:148:17","statements":[{"expression":{"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"31385:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"31404:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7201,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:17","typeDescriptions":{}}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7206,"nodeType":"ExpressionStatement","src":"31385:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"31424:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"31438:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7216,"nodeType":"IfStatement","src":"31420:97:17","trueBody":{"id":7215,"nodeType":"Block","src":"31445:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"31500:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7210,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"31466:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7214,"nodeType":"RevertStatement","src":"31459:47:17"}]}}]},"documentation":{"id":7193,"nodeType":"StructuredDocumentation","src":"30991:307:17","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7218,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:17","nodeType":"FunctionDefinition","parameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"value","nameLocation":"31327:5:17","nodeType":"VariableDeclaration","scope":7218,"src":"31320:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7194,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:17"},"returnParameters":{"id":7199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:17","nodeType":"VariableDeclaration","scope":7218,"src":"31357:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7197,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:17"},"scope":7389,"src":"31303:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7243,"nodeType":"Block","src":"31913:148:17","statements":[{"expression":{"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"31923:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"31942:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7227,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:17","typeDescriptions":{}}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7232,"nodeType":"ExpressionStatement","src":"31923:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"31962:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"31976:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7242,"nodeType":"IfStatement","src":"31958:97:17","trueBody":{"id":7241,"nodeType":"Block","src":"31983:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"32038:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7236,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"32004:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7240,"nodeType":"RevertStatement","src":"31997:47:17"}]}}]},"documentation":{"id":7219,"nodeType":"StructuredDocumentation","src":"31529:307:17","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:17","nodeType":"FunctionDefinition","parameters":{"id":7222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7221,"mutability":"mutable","name":"value","nameLocation":"31865:5:17","nodeType":"VariableDeclaration","scope":7244,"src":"31858:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7220,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:17"},"returnParameters":{"id":7225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7224,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:17","nodeType":"VariableDeclaration","scope":7244,"src":"31895:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7223,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:17"},"scope":7389,"src":"31841:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7269,"nodeType":"Block","src":"32451:148:17","statements":[{"expression":{"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"32461:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"32480:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7253,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:17","typeDescriptions":{}}},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7258,"nodeType":"ExpressionStatement","src":"32461:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"32500:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"32514:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7268,"nodeType":"IfStatement","src":"32496:97:17","trueBody":{"id":7267,"nodeType":"Block","src":"32521:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"32576:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7262,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"32542:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7266,"nodeType":"RevertStatement","src":"32535:47:17"}]}}]},"documentation":{"id":7245,"nodeType":"StructuredDocumentation","src":"32067:307:17","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:17","nodeType":"FunctionDefinition","parameters":{"id":7248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7247,"mutability":"mutable","name":"value","nameLocation":"32403:5:17","nodeType":"VariableDeclaration","scope":7270,"src":"32396:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7246,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:17"},"returnParameters":{"id":7251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7250,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:17","nodeType":"VariableDeclaration","scope":7270,"src":"32433:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7249,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:17"},"scope":7389,"src":"32379:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7295,"nodeType":"Block","src":"32989:148:17","statements":[{"expression":{"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"32999:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"33018:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7279,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:17","typeDescriptions":{}}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7284,"nodeType":"ExpressionStatement","src":"32999:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"33038:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"33052:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7294,"nodeType":"IfStatement","src":"33034:97:17","trueBody":{"id":7293,"nodeType":"Block","src":"33059:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"33114:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"33080:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7292,"nodeType":"RevertStatement","src":"33073:47:17"}]}}]},"documentation":{"id":7271,"nodeType":"StructuredDocumentation","src":"32605:307:17","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:17","nodeType":"FunctionDefinition","parameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7273,"mutability":"mutable","name":"value","nameLocation":"32941:5:17","nodeType":"VariableDeclaration","scope":7296,"src":"32934:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7272,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:17"},"returnParameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:17","nodeType":"VariableDeclaration","scope":7296,"src":"32971:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7275,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:17"},"scope":7389,"src":"32917:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7321,"nodeType":"Block","src":"33527:148:17","statements":[{"expression":{"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"33537:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"33556:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7305,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:17","typeDescriptions":{}}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7310,"nodeType":"ExpressionStatement","src":"33537:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"33576:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"33590:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7320,"nodeType":"IfStatement","src":"33572:97:17","trueBody":{"id":7319,"nodeType":"Block","src":"33597:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"33652:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"33618:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7318,"nodeType":"RevertStatement","src":"33611:47:17"}]}}]},"documentation":{"id":7297,"nodeType":"StructuredDocumentation","src":"33143:307:17","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:17","nodeType":"FunctionDefinition","parameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"value","nameLocation":"33479:5:17","nodeType":"VariableDeclaration","scope":7322,"src":"33472:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7298,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:17"},"returnParameters":{"id":7303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:17","nodeType":"VariableDeclaration","scope":7322,"src":"33509:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7301,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:17"},"scope":7389,"src":"33455:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7347,"nodeType":"Block","src":"34058:146:17","statements":[{"expression":{"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"34068:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"34086:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7331,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:17","typeDescriptions":{}}},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7336,"nodeType":"ExpressionStatement","src":"34068:24:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"34106:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"34120:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7346,"nodeType":"IfStatement","src":"34102:96:17","trueBody":{"id":7345,"nodeType":"Block","src":"34127:71:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"34181:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"34148:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7344,"nodeType":"RevertStatement","src":"34141:46:17"}]}}]},"documentation":{"id":7323,"nodeType":"StructuredDocumentation","src":"33681:302:17","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:17","nodeType":"FunctionDefinition","parameters":{"id":7326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7325,"mutability":"mutable","name":"value","nameLocation":"34011:5:17","nodeType":"VariableDeclaration","scope":7348,"src":"34004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7324,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:17"},"returnParameters":{"id":7329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7328,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:17","nodeType":"VariableDeclaration","scope":7348,"src":"34041:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7327,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:17"},"scope":7389,"src":"33988:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7377,"nodeType":"Block","src":"34444:250:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"34557:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7360,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"34573:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:17","memberName":"max","nodeType":"MemberAccess","src":"34573:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7357,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:17","typeDescriptions":{}}},"id":7364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7371,"nodeType":"IfStatement","src":"34553:105:17","trueBody":{"id":7370,"nodeType":"Block","src":"34592:66:17","statements":[{"errorCall":{"arguments":[{"id":7367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"34641:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7366,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"34613:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7369,"nodeType":"RevertStatement","src":"34606:41:17"}]}},{"expression":{"arguments":[{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"34681:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7372,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:17","typeDescriptions":{}}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7355,"id":7376,"nodeType":"Return","src":"34667:20:17"}]},"documentation":{"id":7349,"nodeType":"StructuredDocumentation","src":"34210:165:17","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7378,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:17","nodeType":"FunctionDefinition","parameters":{"id":7352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7351,"mutability":"mutable","name":"value","nameLocation":"34406:5:17","nodeType":"VariableDeclaration","scope":7378,"src":"34398:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7350,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:17"},"returnParameters":{"id":7355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7378,"src":"34436:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7353,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:17"},"scope":7389,"src":"34380:314:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7387,"nodeType":"Block","src":"34853:87:17","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:17","statements":[{"nodeType":"YulAssignment","src":"34902:22:17","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:17"},"nodeType":"YulFunctionCall","src":"34914:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:17"},"nodeType":"YulFunctionCall","src":"34907:17:17"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7381,"isOffset":false,"isSlot":false,"src":"34921:1:17","valueSize":1},{"declaration":7384,"isOffset":false,"isSlot":false,"src":"34902:1:17","valueSize":1}],"flags":["memory-safe"],"id":7386,"nodeType":"InlineAssembly","src":"34863:71:17"}]},"documentation":{"id":7379,"nodeType":"StructuredDocumentation","src":"34700:90:17","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7388,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:17","nodeType":"FunctionDefinition","parameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7381,"mutability":"mutable","name":"b","nameLocation":"34816:1:17","nodeType":"VariableDeclaration","scope":7388,"src":"34811:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7380,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:17"},"returnParameters":{"id":7385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7384,"mutability":"mutable","name":"u","nameLocation":"34850:1:17","nodeType":"VariableDeclaration","scope":7388,"src":"34842:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7383,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:17"},"scope":7389,"src":"34795:145:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7390,"src":"769:34173:17","usedErrors":[5634,5639,5646,5651],"usedEvents":[]}],"src":"192:34751:17"},"id":17},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7389],"SignedMath":[7533]},"id":7534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7391,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7534,"sourceUnit":7390,"src":"135:40:18","symbolAliases":[{"foreign":{"id":7392,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"143:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7394,"nodeType":"StructuredDocumentation","src":"177:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7533,"linearizedBaseContracts":[7533],"name":"SignedMath","nameLocation":"266:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":7423,"nodeType":"Block","src":"746:215:18","statements":[{"id":7422,"nodeType":"UncheckedBlock","src":"756:199:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"894:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7399,"src":"900:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7408,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"904:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7415,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"932:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7413,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"916:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7389_$","typeString":"type(library SafeCast)"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"916:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7411,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:18","typeDescriptions":{}}},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7405,"id":7421,"nodeType":"Return","src":"887:57:18"}]}]},"documentation":{"id":7395,"nodeType":"StructuredDocumentation","src":"283:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7424,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:18","nodeType":"FunctionDefinition","parameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"condition","nameLocation":"684:9:18","nodeType":"VariableDeclaration","scope":7424,"src":"679:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7396,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7399,"mutability":"mutable","name":"a","nameLocation":"702:1:18","nodeType":"VariableDeclaration","scope":7424,"src":"695:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7398,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7401,"mutability":"mutable","name":"b","nameLocation":"712:1:18","nodeType":"VariableDeclaration","scope":7424,"src":"705:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7400,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:18"},"returnParameters":{"id":7405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7424,"src":"738:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7403,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:18"},"scope":7533,"src":"662:299:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7442,"nodeType":"Block","src":"1102:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"1127:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"1131:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"1134:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"1137:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7434,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"1119:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7433,"id":7441,"nodeType":"Return","src":"1112:27:18"}]},"documentation":{"id":7425,"nodeType":"StructuredDocumentation","src":"967:66:18","text":" @dev Returns the largest of two signed numbers."},"id":7443,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:18","nodeType":"FunctionDefinition","parameters":{"id":7430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"a","nameLocation":"1058:1:18","nodeType":"VariableDeclaration","scope":7443,"src":"1051:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7426,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7429,"mutability":"mutable","name":"b","nameLocation":"1068:1:18","nodeType":"VariableDeclaration","scope":7443,"src":"1061:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7428,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:18"},"returnParameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7443,"src":"1094:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7431,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:18"},"scope":7533,"src":"1038:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7461,"nodeType":"Block","src":"1288:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7454,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7446,"src":"1313:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7455,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"1317:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7446,"src":"1320:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7458,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"1323:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7453,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"1305:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7452,"id":7460,"nodeType":"Return","src":"1298:27:18"}]},"documentation":{"id":7444,"nodeType":"StructuredDocumentation","src":"1152:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":7462,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:18","nodeType":"FunctionDefinition","parameters":{"id":7449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7446,"mutability":"mutable","name":"a","nameLocation":"1244:1:18","nodeType":"VariableDeclaration","scope":7462,"src":"1237:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7445,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7448,"mutability":"mutable","name":"b","nameLocation":"1254:1:18","nodeType":"VariableDeclaration","scope":7462,"src":"1247:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7447,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:18"},"returnParameters":{"id":7452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7462,"src":"1280:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7450,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:18"},"scope":7533,"src":"1224:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7505,"nodeType":"Block","src":"1537:162:18","statements":[{"assignments":[7473],"declarations":[{"constant":false,"id":7473,"mutability":"mutable","name":"x","nameLocation":"1606:1:18","nodeType":"VariableDeclaration","scope":7505,"src":"1599:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7472,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7486,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7474,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"1611:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7475,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"1615:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"1622:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"1626:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7487,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"1651:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7492,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"1671:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:18","typeDescriptions":{}}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7488,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:18","typeDescriptions":{}}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"1685:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"1689:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7471,"id":7504,"nodeType":"Return","src":"1644:48:18"}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"1338:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7506,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:18","nodeType":"FunctionDefinition","parameters":{"id":7468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7465,"mutability":"mutable","name":"a","nameLocation":"1493:1:18","nodeType":"VariableDeclaration","scope":7506,"src":"1486:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7464,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7467,"mutability":"mutable","name":"b","nameLocation":"1503:1:18","nodeType":"VariableDeclaration","scope":7506,"src":"1496:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7466,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:18"},"returnParameters":{"id":7471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7506,"src":"1529:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7469,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:18"},"scope":7533,"src":"1469:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7531,"nodeType":"Block","src":"1843:767:18","statements":[{"id":7530,"nodeType":"UncheckedBlock","src":"1853:751:18","statements":[{"assignments":[7515],"declarations":[{"constant":false,"id":7515,"mutability":"mutable","name":"mask","nameLocation":"2424:4:18","nodeType":"VariableDeclaration","scope":7530,"src":"2417:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7514,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7519,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7516,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"2431:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7522,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"2576:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7523,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"2580:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7526,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"2588:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7520,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:18","typeDescriptions":{}}},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7513,"id":7529,"nodeType":"Return","src":"2560:33:18"}]}]},"documentation":{"id":7507,"nodeType":"StructuredDocumentation","src":"1705:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7532,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:18","nodeType":"FunctionDefinition","parameters":{"id":7510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7509,"mutability":"mutable","name":"n","nameLocation":"1808:1:18","nodeType":"VariableDeclaration","scope":7532,"src":"1801:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7508,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:18"},"returnParameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7532,"src":"1834:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:18"},"scope":7533,"src":"1788:822:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7534,"src":"258:2354:18","usedErrors":[],"usedEvents":[]}],"src":"109:2504:18"},"id":18},"contracts/WWEMonad.sol":{"ast":{"absolutePath":"contracts/WWEMonad.sol","exportedSymbols":{"Arrays":[2414],"Context":[2476],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[4006],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[4018],"Math":[5624],"Ownable":[147],"SafeCast":[7389],"SignedMath":[7533],"Strings":[3982],"WWEMonad":[7935]},"id":7936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7535,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":7536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7936,"sourceUnit":1202,"src":"58:59:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7936,"sourceUnit":148,"src":"118:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7936,"sourceUnit":3983,"src":"171:51:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7540,"name":"ERC1155","nameLocations":["404:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"404:7:19"},"id":7541,"nodeType":"InheritanceSpecifier","src":"404:7:19"},{"baseName":{"id":7542,"name":"Ownable","nameLocations":["413:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"413:7:19"},"id":7543,"nodeType":"InheritanceSpecifier","src":"413:7:19"}],"canonicalName":"WWEMonad","contractDependencies":[],"contractKind":"contract","documentation":{"id":7539,"nodeType":"StructuredDocumentation","src":"224:158:19","text":" @title WWEMonad\n @dev Smart contract for WWE wrestling game on Monad blockchain\n Records player actions and mints championship trophies as NFTs"},"fullyImplemented":true,"id":7935,"linearizedBaseContracts":[7935,147,1201,284,1382,1324,4006,4018,2476],"name":"WWEMonad","nameLocation":"392:8:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7546,"libraryName":{"id":7544,"name":"Strings","nameLocations":["433:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3982,"src":"433:7:19"},"nodeType":"UsingForDirective","src":"427:26:19","typeName":{"id":7545,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"efb02223","id":7549,"mutability":"constant","name":"CHAMPIONSHIP_TROPHY","nameLocation":"504:19:19","nodeType":"VariableDeclaration","scope":7935,"src":"480:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7547,"name":"uint256","nodeType":"ElementaryTypeName","src":"480:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"526:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"id":7552,"mutability":"mutable","name":"nextTokenId","nameLocation":"549:11:19","nodeType":"VariableDeclaration","scope":7935,"src":"533:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7550,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"563:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":7554,"mutability":"mutable","name":"baseURI","nameLocation":"620:7:19","nodeType":"VariableDeclaration","scope":7935,"src":"605:22:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7553,"name":"string","nodeType":"ElementaryTypeName","src":"605:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"functionSelector":"cdafbbb6","id":7559,"mutability":"mutable","name":"playerStats","nameLocation":"727:11:19","nodeType":"VariableDeclaration","scope":7935,"src":"688:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats)"},"typeName":{"id":7558,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7555,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"688:31:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7557,"nodeType":"UserDefinedTypeName","pathNode":{"id":7556,"name":"PlayerStats","nameLocations":["707:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7574,"src":"707:11:19"},"referencedDeclaration":7574,"src":"707:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage_ptr","typeString":"struct WWEMonad.PlayerStats"}}},"visibility":"public"},{"canonicalName":"WWEMonad.PlayerStats","id":7574,"members":[{"constant":false,"id":7561,"mutability":"mutable","name":"totalMoves","nameLocation":"816:10:19","nodeType":"VariableDeclaration","scope":7574,"src":"808:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7560,"name":"uint256","nodeType":"ElementaryTypeName","src":"808:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7563,"mutability":"mutable","name":"specialMoves","nameLocation":"844:12:19","nodeType":"VariableDeclaration","scope":7574,"src":"836:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7562,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7565,"mutability":"mutable","name":"grapples","nameLocation":"874:8:19","nodeType":"VariableDeclaration","scope":7574,"src":"866:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7567,"mutability":"mutable","name":"ropeBounces","nameLocation":"900:11:19","nodeType":"VariableDeclaration","scope":7574,"src":"892:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7566,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7569,"mutability":"mutable","name":"knockouts","nameLocation":"929:9:19","nodeType":"VariableDeclaration","scope":7574,"src":"921:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7571,"mutability":"mutable","name":"championships","nameLocation":"956:13:19","nodeType":"VariableDeclaration","scope":7574,"src":"948:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7570,"name":"uint256","nodeType":"ElementaryTypeName","src":"948:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7573,"mutability":"mutable","name":"lastAction","nameLocation":"987:10:19","nodeType":"VariableDeclaration","scope":7574,"src":"979:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7572,"name":"uint256","nodeType":"ElementaryTypeName","src":"979:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PlayerStats","nameLocation":"786:11:19","nodeType":"StructDefinition","scope":7935,"src":"779:225:19","visibility":"public"},{"anonymous":false,"eventSelector":"cf4427363692826484588652734fbdfe66066252ce5898a5c9d20416bcadec53","id":7580,"name":"ActionLogged","nameLocation":"1060:12:19","nodeType":"EventDefinition","parameters":{"id":7579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7576,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1089:6:19","nodeType":"VariableDeclaration","scope":7580,"src":"1073:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7575,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7578,"indexed":false,"mutability":"mutable","name":"action","nameLocation":"1104:6:19","nodeType":"VariableDeclaration","scope":7580,"src":"1097:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7577,"name":"string","nodeType":"ElementaryTypeName","src":"1097:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1072:39:19"},"src":"1054:58:19"},{"anonymous":false,"eventSelector":"40e0fad75d161c82d49af9e03ec076efa4ff442a3954c75339fd02218374e2dc","id":7586,"name":"TrophyMinted","nameLocation":"1163:12:19","nodeType":"EventDefinition","parameters":{"id":7585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1192:6:19","nodeType":"VariableDeclaration","scope":7586,"src":"1176:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7581,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7584,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1208:7:19","nodeType":"VariableDeclaration","scope":7586,"src":"1200:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1200:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1175:41:19"},"src":"1157:60:19"},{"body":{"id":7601,"nodeType":"Block","src":"1354:53:19","statements":[{"expression":{"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7597,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"1364:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"697066733a2f2f516d54726f7068794d657461646174612f","id":7598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1374:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9f0b91e98b5fdc6b905bde619b298531cc74f8eed0e0cf30e63f6e845dc86b0","typeString":"literal_string \"ipfs://QmTrophyMetadata/\""},"value":"ipfs://QmTrophyMetadata/"},"src":"1364:36:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7600,"nodeType":"ExpressionStatement","src":"1364:36:19"}]},"documentation":{"id":7587,"nodeType":"StructuredDocumentation","src":"1227:76:19","text":" @dev Initialize the contract with a base URI for metadata"},"id":7602,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":7590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1330:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":7591,"kind":"baseConstructorSpecifier","modifierName":{"id":7589,"name":"ERC1155","nameLocations":["1322:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"1322:7:19"},"nodeType":"ModifierInvocation","src":"1322:11:19"},{"arguments":[{"expression":{"id":7593,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1342:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1346:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1342:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7595,"kind":"baseConstructorSpecifier","modifierName":{"id":7592,"name":"Ownable","nameLocations":["1334:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1334:7:19"},"nodeType":"ModifierInvocation","src":"1334:19:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[],"src":"1319:2:19"},"returnParameters":{"id":7596,"nodeType":"ParameterList","parameters":[],"src":"1354:0:19"},"scope":7935,"src":"1308:99:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7614,"nodeType":"Block","src":"1586:38:19","statements":[{"expression":{"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7610,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"1596:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7611,"name":"_newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"1606:11:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1596:21:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7613,"nodeType":"ExpressionStatement","src":"1596:21:19"}]},"documentation":{"id":7603,"nodeType":"StructuredDocumentation","src":"1417:98:19","text":" @dev Set the base URI for token metadata\n @param _newBaseURI New base URI"},"functionSelector":"55f804b3","id":7615,"implemented":true,"kind":"function","modifiers":[{"id":7608,"kind":"modifierInvocation","modifierName":{"id":7607,"name":"onlyOwner","nameLocations":["1576:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1576:9:19"},"nodeType":"ModifierInvocation","src":"1576:9:19"}],"name":"setBaseURI","nameLocation":"1529:10:19","nodeType":"FunctionDefinition","parameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"_newBaseURI","nameLocation":"1554:11:19","nodeType":"VariableDeclaration","scope":7615,"src":"1540:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7604,"name":"string","nodeType":"ElementaryTypeName","src":"1540:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1539:27:19"},"returnParameters":{"id":7609,"nodeType":"ParameterList","parameters":[],"src":"1586:0:19"},"scope":7935,"src":"1520:104:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[387],"body":{"id":7636,"nodeType":"Block","src":"1816:82:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":7628,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"1857:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7629,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"1866:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1870:8:19","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"1866:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":7632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1882:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":7626,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"1840:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1844:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"1840:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1840:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1833:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7624,"name":"string","nodeType":"ElementaryTypeName","src":"1833:6:19","typeDescriptions":{}}},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1833:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7623,"id":7635,"nodeType":"Return","src":"1826:65:19"}]},"documentation":{"id":7616,"nodeType":"StructuredDocumentation","src":"1634:106:19","text":" @dev Get the URI for a token\n @param _id Token ID\n @return Token URI string"},"functionSelector":"0e89341c","id":7637,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1754:3:19","nodeType":"FunctionDefinition","overrides":{"id":7620,"nodeType":"OverrideSpecifier","overrides":[],"src":"1783:8:19"},"parameters":{"id":7619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7618,"mutability":"mutable","name":"_id","nameLocation":"1766:3:19","nodeType":"VariableDeclaration","scope":7637,"src":"1758:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1757:13:19"},"returnParameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7637,"src":"1801:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7621,"name":"string","nodeType":"ElementaryTypeName","src":"1801:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1800:15:19"},"scope":7935,"src":"1745:153:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7760,"nodeType":"Block","src":"2059:1218:19","statements":[{"assignments":[7644],"declarations":[{"constant":false,"id":7644,"mutability":"mutable","name":"isMove","nameLocation":"2168:6:19","nodeType":"VariableDeclaration","scope":7760,"src":"2163:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7643,"name":"bool","nodeType":"ElementaryTypeName","src":"2163:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7649,"initialValue":{"arguments":[{"id":7646,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"2187:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6d6f7665","id":7647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2195:6:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7239e4c8fbd11b680d7214cfc26d1780d5c099453f0832beb15fd040aebd4ebb","typeString":"literal_string \"move\""},"value":"move"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_7239e4c8fbd11b680d7214cfc26d1780d5c099453f0832beb15fd040aebd4ebb","typeString":"literal_string \"move\""}],"id":7645,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"2177:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2177:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2163:39:19"},{"assignments":[7651],"declarations":[{"constant":false,"id":7651,"mutability":"mutable","name":"isSpecialMove","nameLocation":"2217:13:19","nodeType":"VariableDeclaration","scope":7760,"src":"2212:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7650,"name":"bool","nodeType":"ElementaryTypeName","src":"2212:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7656,"initialValue":{"arguments":[{"id":7653,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"2243:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7370656369616c5f6d6f7665","id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2251:14:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2150cc3c169aa7a1435957cabfbfc30f1d0000d6e330932edd4ac17e90fec74","typeString":"literal_string \"special_move\""},"value":"special_move"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2150cc3c169aa7a1435957cabfbfc30f1d0000d6e330932edd4ac17e90fec74","typeString":"literal_string \"special_move\""}],"id":7652,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"2233:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2212:54:19"},{"assignments":[7658],"declarations":[{"constant":false,"id":7658,"mutability":"mutable","name":"isGrapple","nameLocation":"2281:9:19","nodeType":"VariableDeclaration","scope":7760,"src":"2276:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7657,"name":"bool","nodeType":"ElementaryTypeName","src":"2276:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7663,"initialValue":{"arguments":[{"id":7660,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"2303:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"67726170706c65","id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2311:9:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0dda9f40f7884d34e73b1fdf1d56fc44b2362e7ec65b7b62cdfdc5366314d95","typeString":"literal_string \"grapple\""},"value":"grapple"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a0dda9f40f7884d34e73b1fdf1d56fc44b2362e7ec65b7b62cdfdc5366314d95","typeString":"literal_string \"grapple\""}],"id":7659,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"2293:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2276:45:19"},{"assignments":[7665],"declarations":[{"constant":false,"id":7665,"mutability":"mutable","name":"isRopeBounce","nameLocation":"2336:12:19","nodeType":"VariableDeclaration","scope":7760,"src":"2331:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7664,"name":"bool","nodeType":"ElementaryTypeName","src":"2331:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7670,"initialValue":{"arguments":[{"id":7667,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"2361:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"726f70655f626f756e6365","id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2369:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b649acc934d050119b104390aed343aa7016f24f620bdb2067d711fa51d5c7ce","typeString":"literal_string \"rope_bounce\""},"value":"rope_bounce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_b649acc934d050119b104390aed343aa7016f24f620bdb2067d711fa51d5c7ce","typeString":"literal_string \"rope_bounce\""}],"id":7666,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"2351:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2351:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2331:52:19"},{"assignments":[7672],"declarations":[{"constant":false,"id":7672,"mutability":"mutable","name":"isKnockout","nameLocation":"2398:10:19","nodeType":"VariableDeclaration","scope":7760,"src":"2393:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7671,"name":"bool","nodeType":"ElementaryTypeName","src":"2393:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7677,"initialValue":{"arguments":[{"id":7674,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"2421:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6b6e6f636b6f7574","id":7675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2429:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_f16c265c4361b53344cf074d0a010d353f7eaa25b990d5ba59d67dd7d785f955","typeString":"literal_string \"knockout\""},"value":"knockout"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f16c265c4361b53344cf074d0a010d353f7eaa25b990d5ba59d67dd7d785f955","typeString":"literal_string \"knockout\""}],"id":7673,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"2411:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2393:47:19"},{"assignments":[7679],"declarations":[{"constant":false,"id":7679,"mutability":"mutable","name":"isChampionship","nameLocation":"2455:14:19","nodeType":"VariableDeclaration","scope":7760,"src":"2450:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7678,"name":"bool","nodeType":"ElementaryTypeName","src":"2450:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7684,"initialValue":{"arguments":[{"id":7681,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"2482:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6368616d70696f6e73686970","id":7682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2490:14:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_31ba0e2a6adc22aec414f214f288eac3faffabb4ba2cd284d102eb79f65f58e3","typeString":"literal_string \"championship\""},"value":"championship"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_31ba0e2a6adc22aec414f214f288eac3faffabb4ba2cd284d102eb79f65f58e3","typeString":"literal_string \"championship\""}],"id":7680,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"2472:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2472:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2450:55:19"},{"condition":{"id":7685,"name":"isMove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"2580:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":7694,"name":"isSpecialMove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"2659:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":7703,"name":"isGrapple","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"2747:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":7712,"name":"isRopeBounce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"2827:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":7721,"name":"isKnockout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"2913:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":7730,"name":"isChampionship","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"2995:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7739,"nodeType":"IfStatement","src":"2991:84:19","trueBody":{"id":7738,"nodeType":"Block","src":"3011:64:19","statements":[{"expression":{"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3025:39:19","subExpression":{"expression":{"baseExpression":{"id":7731,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"3025:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7734,"indexExpression":{"expression":{"id":7732,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3037:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3041:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3037:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3025:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"id":7735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3049:13:19","memberName":"championships","nodeType":"MemberAccess","referencedDeclaration":7571,"src":"3025:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7737,"nodeType":"ExpressionStatement","src":"3025:39:19"}]}},"id":7740,"nodeType":"IfStatement","src":"2909:166:19","trueBody":{"id":7729,"nodeType":"Block","src":"2925:60:19","statements":[{"expression":{"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2939:35:19","subExpression":{"expression":{"baseExpression":{"id":7722,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"2939:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7725,"indexExpression":{"expression":{"id":7723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2951:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2955:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2951:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2939:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"id":7726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2963:9:19","memberName":"knockouts","nodeType":"MemberAccess","referencedDeclaration":7569,"src":"2939:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7728,"nodeType":"ExpressionStatement","src":"2939:35:19"}]}},"id":7741,"nodeType":"IfStatement","src":"2823:252:19","trueBody":{"id":7720,"nodeType":"Block","src":"2841:62:19","statements":[{"expression":{"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2855:37:19","subExpression":{"expression":{"baseExpression":{"id":7713,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"2855:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7716,"indexExpression":{"expression":{"id":7714,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2867:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2871:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2867:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2855:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"id":7717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2879:11:19","memberName":"ropeBounces","nodeType":"MemberAccess","referencedDeclaration":7567,"src":"2855:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7719,"nodeType":"ExpressionStatement","src":"2855:37:19"}]}},"id":7742,"nodeType":"IfStatement","src":"2743:332:19","trueBody":{"id":7711,"nodeType":"Block","src":"2758:59:19","statements":[{"expression":{"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2772:34:19","subExpression":{"expression":{"baseExpression":{"id":7704,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"2772:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7707,"indexExpression":{"expression":{"id":7705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2784:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2784:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2772:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"id":7708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2796:8:19","memberName":"grapples","nodeType":"MemberAccess","referencedDeclaration":7565,"src":"2772:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7710,"nodeType":"ExpressionStatement","src":"2772:34:19"}]}},"id":7743,"nodeType":"IfStatement","src":"2655:420:19","trueBody":{"id":7702,"nodeType":"Block","src":"2674:63:19","statements":[{"expression":{"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2688:38:19","subExpression":{"expression":{"baseExpression":{"id":7695,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"2688:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7698,"indexExpression":{"expression":{"id":7696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2700:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2704:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2700:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2688:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"id":7699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2712:12:19","memberName":"specialMoves","nodeType":"MemberAccess","referencedDeclaration":7563,"src":"2688:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7701,"nodeType":"ExpressionStatement","src":"2688:38:19"}]}},"id":7744,"nodeType":"IfStatement","src":"2576:499:19","trueBody":{"id":7693,"nodeType":"Block","src":"2588:61:19","statements":[{"expression":{"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2602:36:19","subExpression":{"expression":{"baseExpression":{"id":7686,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"2602:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7689,"indexExpression":{"expression":{"id":7687,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2614:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2618:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2614:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2602:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"id":7690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2626:10:19","memberName":"totalMoves","nodeType":"MemberAccess","referencedDeclaration":7561,"src":"2602:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7692,"nodeType":"ExpressionStatement","src":"2602:36:19"}]}},{"expression":{"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7745,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"3133:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7748,"indexExpression":{"expression":{"id":7746,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3145:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3149:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3145:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3133:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"id":7749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3157:10:19","memberName":"lastAction","nodeType":"MemberAccess","referencedDeclaration":7573,"src":"3133:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7750,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3170:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3176:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"3170:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3133:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7753,"nodeType":"ExpressionStatement","src":"3133:52:19"},{"eventCall":{"arguments":[{"expression":{"id":7755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3251:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3255:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3251:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7757,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"3263:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7754,"name":"ActionLogged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7580,"src":"3238:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7759,"nodeType":"EmitStatement","src":"3233:37:19"}]},"documentation":{"id":7638,"nodeType":"StructuredDocumentation","src":"1908:96:19","text":" @dev Log a player action\n @param action JSON string with action details"},"functionSelector":"522020a8","id":7761,"implemented":true,"kind":"function","modifiers":[],"name":"logAction","nameLocation":"2018:9:19","nodeType":"FunctionDefinition","parameters":{"id":7641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7640,"mutability":"mutable","name":"action","nameLocation":"2042:6:19","nodeType":"VariableDeclaration","scope":7761,"src":"2028:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7639,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:22:19"},"returnParameters":{"id":7642,"nodeType":"ParameterList","parameters":[],"src":"2059:0:19"},"scope":7935,"src":"2009:1268:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7799,"nodeType":"Block","src":"3456:488:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7768,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3556:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3560:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3556:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7770,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3570:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3570:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3556:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7773,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3581:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3585:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3581:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7775,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"3595:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3581:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3556:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206d696e742074726f706879","id":7778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3603:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e82d83d04a32c883bf9bfef223707a943ac73536532cd4da086581398f1d0a6","typeString":"literal_string \"Not authorized to mint trophy\""},"value":"Not authorized to mint trophy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e82d83d04a32c883bf9bfef223707a943ac73536532cd4da086581398f1d0a6","typeString":"literal_string \"Not authorized to mint trophy\""}],"id":7767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3548:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:87:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7780,"nodeType":"ExpressionStatement","src":"3548:87:19"},{"expression":{"arguments":[{"id":7782,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"3698:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7783,"name":"CHAMPIONSHIP_TROPHY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"3706:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":7784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3727:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":7785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3730:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7781,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"3692:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7787,"nodeType":"ExpressionStatement","src":"3692:41:19"},{"expression":{"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3801:35:19","subExpression":{"expression":{"baseExpression":{"id":7788,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"3801:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7790,"indexExpression":{"id":7789,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"3813:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3801:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"id":7791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3821:13:19","memberName":"championships","nodeType":"MemberAccess","referencedDeclaration":7571,"src":"3801:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7793,"nodeType":"ExpressionStatement","src":"3801:35:19"},{"eventCall":{"arguments":[{"id":7795,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"3909:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7796,"name":"CHAMPIONSHIP_TROPHY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"3917:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7794,"name":"TrophyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"3896:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7798,"nodeType":"EmitStatement","src":"3891:46:19"}]},"documentation":{"id":7762,"nodeType":"StructuredDocumentation","src":"3287:119:19","text":" @dev Mint a championship trophy for a player\n @param winner Address of the championship winner"},"functionSelector":"c9053254","id":7800,"implemented":true,"kind":"function","modifiers":[],"name":"mintTrophy","nameLocation":"3420:10:19","nodeType":"FunctionDefinition","parameters":{"id":7765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7764,"mutability":"mutable","name":"winner","nameLocation":"3439:6:19","nodeType":"VariableDeclaration","scope":7800,"src":"3431:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7763,"name":"address","nodeType":"ElementaryTypeName","src":"3431:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3430:16:19"},"returnParameters":{"id":7766,"nodeType":"ParameterList","parameters":[],"src":"3456:0:19"},"scope":7935,"src":"3411:533:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7829,"nodeType":"Block","src":"4172:203:19","statements":[{"assignments":[7811],"declarations":[{"constant":false,"id":7811,"mutability":"mutable","name":"tokenId","nameLocation":"4190:7:19","nodeType":"VariableDeclaration","scope":7829,"src":"4182:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7810,"name":"uint256","nodeType":"ElementaryTypeName","src":"4182:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7813,"initialValue":{"id":7812,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"4200:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4182:29:19"},{"expression":{"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4221:13:19","subExpression":{"id":7814,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"4221:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7816,"nodeType":"ExpressionStatement","src":"4221:13:19"},{"expression":{"arguments":[{"id":7818,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"4259:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"4263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7820,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"4272:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":7821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4280:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7817,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4253:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7823,"nodeType":"ExpressionStatement","src":"4253:30:19"},{"eventCall":{"arguments":[{"id":7825,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"4356:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"4360:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7824,"name":"TrophyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"4343:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4343:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7828,"nodeType":"EmitStatement","src":"4338:30:19"}]},"documentation":{"id":7801,"nodeType":"StructuredDocumentation","src":"3954:143:19","text":" @dev Mint a new type of trophy (only owner)\n @param to Recipient address\n @param amount Number of tokens to mint"},"functionSelector":"662b1c58","id":7830,"implemented":true,"kind":"function","modifiers":[{"id":7808,"kind":"modifierInvocation","modifierName":{"id":7807,"name":"onlyOwner","nameLocations":["4162:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4162:9:19"},"nodeType":"ModifierInvocation","src":"4162:9:19"}],"name":"mintNewTrophy","nameLocation":"4111:13:19","nodeType":"FunctionDefinition","parameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7803,"mutability":"mutable","name":"to","nameLocation":"4133:2:19","nodeType":"VariableDeclaration","scope":7830,"src":"4125:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7802,"name":"address","nodeType":"ElementaryTypeName","src":"4125:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7805,"mutability":"mutable","name":"amount","nameLocation":"4145:6:19","nodeType":"VariableDeclaration","scope":7830,"src":"4137:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7804,"name":"uint256","nodeType":"ElementaryTypeName","src":"4137:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4124:28:19"},"returnParameters":{"id":7809,"nodeType":"ParameterList","parameters":[],"src":"4172:0:19"},"scope":7935,"src":"4102:273:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7843,"nodeType":"Block","src":"4625:43:19","statements":[{"expression":{"baseExpression":{"id":7839,"name":"playerStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"4642:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerStats_$7574_storage_$","typeString":"mapping(address => struct WWEMonad.PlayerStats storage ref)"}},"id":7841,"indexExpression":{"id":7840,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"4654:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4642:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage","typeString":"struct WWEMonad.PlayerStats storage ref"}},"functionReturnParameters":7838,"id":7842,"nodeType":"Return","src":"4635:26:19"}]},"documentation":{"id":7831,"nodeType":"StructuredDocumentation","src":"4385:152:19","text":" @dev Get all stats for a player\n @param player Address of the player\n @return PlayerStats structure with all player stats"},"functionSelector":"4fd66eae","id":7844,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerStats","nameLocation":"4551:14:19","nodeType":"FunctionDefinition","parameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"mutability":"mutable","name":"player","nameLocation":"4574:6:19","nodeType":"VariableDeclaration","scope":7844,"src":"4566:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7832,"name":"address","nodeType":"ElementaryTypeName","src":"4566:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4565:16:19"},"returnParameters":{"id":7838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7844,"src":"4605:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_memory_ptr","typeString":"struct WWEMonad.PlayerStats"},"typeName":{"id":7836,"nodeType":"UserDefinedTypeName","pathNode":{"id":7835,"name":"PlayerStats","nameLocations":["4605:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7574,"src":"4605:11:19"},"referencedDeclaration":7574,"src":"4605:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerStats_$7574_storage_ptr","typeString":"struct WWEMonad.PlayerStats"}},"visibility":"internal"}],"src":"4604:20:19"},"scope":7935,"src":"4542:126:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7933,"nodeType":"Block","src":"4997:766:19","statements":[{"assignments":[7855],"declarations":[{"constant":false,"id":7855,"mutability":"mutable","name":"sourceBytes","nameLocation":"5020:11:19","nodeType":"VariableDeclaration","scope":7933,"src":"5007:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7854,"name":"bytes","nodeType":"ElementaryTypeName","src":"5007:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7860,"initialValue":{"arguments":[{"id":7858,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"5040:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5034:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7856,"name":"bytes","nodeType":"ElementaryTypeName","src":"5034:5:19","typeDescriptions":{}}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5034:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5007:40:19"},{"assignments":[7862],"declarations":[{"constant":false,"id":7862,"mutability":"mutable","name":"searchBytes","nameLocation":"5070:11:19","nodeType":"VariableDeclaration","scope":7933,"src":"5057:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7861,"name":"bytes","nodeType":"ElementaryTypeName","src":"5057:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7867,"initialValue":{"arguments":[{"id":7865,"name":"searchFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"5090:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5084:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7863,"name":"bytes","nodeType":"ElementaryTypeName","src":"5084:5:19","typeDescriptions":{}}},"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5084:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5057:43:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7868,"name":"searchBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"5197:11:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5209:6:19","memberName":"length","nodeType":"MemberAccess","src":"5197:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7870,"name":"sourceBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"5218:11:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5230:6:19","memberName":"length","nodeType":"MemberAccess","src":"5218:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5197:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7876,"nodeType":"IfStatement","src":"5193:82:19","trueBody":{"id":7875,"nodeType":"Block","src":"5238:37:19","statements":[{"expression":{"hexValue":"66616c7365","id":7873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5259:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7853,"id":7874,"nodeType":"Return","src":"5252:12:19"}]}},{"body":{"id":7929,"nodeType":"Block","src":"5402:324:19","statements":[{"assignments":[7892],"declarations":[{"constant":false,"id":7892,"mutability":"mutable","name":"found","nameLocation":"5421:5:19","nodeType":"VariableDeclaration","scope":7929,"src":"5416:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7891,"name":"bool","nodeType":"ElementaryTypeName","src":"5416:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7894,"initialValue":{"hexValue":"74727565","id":7893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5429:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"5416:17:19"},{"body":{"id":7922,"nodeType":"Block","src":"5493:155:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7906,"name":"sourceBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"5515:11:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7910,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"5527:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7908,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"5531:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5515:18:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":7911,"name":"searchBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"5537:11:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7913,"indexExpression":{"id":7912,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"5549:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5537:14:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"5515:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7921,"nodeType":"IfStatement","src":"5511:123:19","trueBody":{"id":7920,"nodeType":"Block","src":"5553:81:19","statements":[{"expression":{"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7915,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"5575:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5583:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5575:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7918,"nodeType":"ExpressionStatement","src":"5575:13:19"},{"id":7919,"nodeType":"Break","src":"5610:5:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7899,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"5464:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7900,"name":"searchBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"5468:11:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5480:6:19","memberName":"length","nodeType":"MemberAccess","src":"5468:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5464:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7923,"initializationExpression":{"assignments":[7896],"declarations":[{"constant":false,"id":7896,"mutability":"mutable","name":"j","nameLocation":"5457:1:19","nodeType":"VariableDeclaration","scope":7923,"src":"5452:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7895,"name":"uint","nodeType":"ElementaryTypeName","src":"5452:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7898,"initialValue":{"hexValue":"30","id":7897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5461:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5452:10:19"},"loopExpression":{"expression":{"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5488:3:19","subExpression":{"id":7903,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"5488:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7905,"nodeType":"ExpressionStatement","src":"5488:3:19"},"nodeType":"ForStatement","src":"5447:201:19"},{"condition":{"id":7924,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"5665:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7928,"nodeType":"IfStatement","src":"5661:55:19","trueBody":{"id":7927,"nodeType":"Block","src":"5672:44:19","statements":[{"expression":{"hexValue":"74727565","id":7925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5697:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7853,"id":7926,"nodeType":"Return","src":"5690:11:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7881,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"5351:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7882,"name":"sourceBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"5356:11:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5368:6:19","memberName":"length","nodeType":"MemberAccess","src":"5356:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7884,"name":"searchBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"5377:11:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5389:6:19","memberName":"length","nodeType":"MemberAccess","src":"5377:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5356:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5351:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7930,"initializationExpression":{"assignments":[7878],"declarations":[{"constant":false,"id":7878,"mutability":"mutable","name":"i","nameLocation":"5344:1:19","nodeType":"VariableDeclaration","scope":7930,"src":"5339:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7877,"name":"uint","nodeType":"ElementaryTypeName","src":"5339:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7880,"initialValue":{"hexValue":"30","id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5348:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5339:10:19"},"loopExpression":{"expression":{"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5397:3:19","subExpression":{"id":7888,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"5397:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7890,"nodeType":"ExpressionStatement","src":"5397:3:19"},"nodeType":"ForStatement","src":"5334:392:19"},{"expression":{"hexValue":"66616c7365","id":7931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5751:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7853,"id":7932,"nodeType":"Return","src":"5744:12:19"}]},"documentation":{"id":7845,"nodeType":"StructuredDocumentation","src":"4678:220:19","text":" @dev Simple helper to check if a string contains a substring\n @param source Source string\n @param searchFor String to search for\n @return True if the source contains the search string"},"id":7934,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4912:9:19","nodeType":"FunctionDefinition","parameters":{"id":7850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7847,"mutability":"mutable","name":"source","nameLocation":"4936:6:19","nodeType":"VariableDeclaration","scope":7934,"src":"4922:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7846,"name":"string","nodeType":"ElementaryTypeName","src":"4922:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7849,"mutability":"mutable","name":"searchFor","nameLocation":"4958:9:19","nodeType":"VariableDeclaration","scope":7934,"src":"4944:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7848,"name":"string","nodeType":"ElementaryTypeName","src":"4944:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4921:47:19"},"returnParameters":{"id":7853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7934,"src":"4991:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7851,"name":"bool","nodeType":"ElementaryTypeName","src":"4991:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4990:6:19"},"scope":7935,"src":"4903:860:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":7936,"src":"383:5382:19","usedErrors":[13,18,249,254,259,266,271,276,283],"usedEvents":[24,1221,1236,1245,1252,7580,7586]}],"src":"32:5734:19"},"id":19}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e96896abd975dfbdebfbe3fa561d3605a442518e71352b4050f19903b29b83164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x96896ABD975DFBDEBFBE3FA561D360 GAS PREVRANDAO 0x25 XOR 0xE7 SGT MSTORE 0xB4 SDIV 0xF NOT SWAP1 EXTCODESIZE 0x29 0xB8 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;439:3094:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e96896abd975dfbdebfbe3fa561d3605a442518e71352b4050f19903b29b83164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x96896ABD975DFBDEBFBE3FA561D360 GAS PREVRANDAO 0x25 XOR 0xE7 SGT MSTORE 0xB4 SDIV 0xF NOT SWAP1 EXTCODESIZE 0x29 0xB8 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f7c0949677b95b4acb67215f72a5eb1d205f6985ed0671fed2eb9f5ffd3ea4d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH29 0x949677B95B4ACB67215F72A5EB1D205F6985ED0671FED2EB9F5FFD3EA 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17881:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:17881:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f7c0949677b95b4acb67215f72a5eb1d205f6985ed0671fed2eb9f5ffd3ea4d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH29 0x949677B95B4ACB67215F72A5EB1D205F6985ED0671FED2EB9F5FFD3EA 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17881:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099ac7f14c7ad2a2d33621d8d22955aa36395ed76f285c61a85d5008088a6ea8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xAC PUSH32 0x14C7AD2A2D33621D8D22955AA36395ED76F285C61A85D5008088A6EA8764736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1598:3723:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1598:3723:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099ac7f14c7ad2a2d33621d8d22955aa36395ed76f285c61a85d5008088a6ea8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xAC PUSH32 0x14C7AD2A2D33621D8D22955AA36395ED76F285C61A85D5008088A6EA8764736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1598:3723:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/WWEMonad.sol":{"WWEMonad":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"string","name":"action","type":"string"}],"name":"ActionLogged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"TrophyMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"CHAMPIONSHIP_TROPHY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getPlayerStats","outputs":[{"components":[{"internalType":"uint256","name":"totalMoves","type":"uint256"},{"internalType":"uint256","name":"specialMoves","type":"uint256"},{"internalType":"uint256","name":"grapples","type":"uint256"},{"internalType":"uint256","name":"ropeBounces","type":"uint256"},{"internalType":"uint256","name":"knockouts","type":"uint256"},{"internalType":"uint256","name":"championships","type":"uint256"},{"internalType":"uint256","name":"lastAction","type":"uint256"}],"internalType":"struct WWEMonad.PlayerStats","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"action","type":"string"}],"name":"logAction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintNewTrophy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"winner","type":"address"}],"name":"mintTrophy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"playerStats","outputs":[{"internalType":"uint256","name":"totalMoves","type":"uint256"},{"internalType":"uint256","name":"specialMoves","type":"uint256"},{"internalType":"uint256","name":"grapples","type":"uint256"},{"internalType":"uint256","name":"ropeBounces","type":"uint256"},{"internalType":"uint256","name":"knockouts","type":"uint256"},{"internalType":"uint256","name":"championships","type":"uint256"},{"internalType":"uint256","name":"lastAction","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_345":{"entryPoint":null,"id":345,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7602":{"entryPoint":null,"id":7602,"parameterSlots":0,"returnSlots":0},"@_setURI_962":{"entryPoint":185,"id":962,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":203,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":367,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":450,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":307,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":285,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2940:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:20","statements":[{"nodeType":"YulAssignment","src":"125:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:20"},"nodeType":"YulFunctionCall","src":"133:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:20"},"nodeType":"YulFunctionCall","src":"194:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:20"},"nodeType":"YulFunctionCall","src":"190:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:20"},"nodeType":"YulFunctionCall","src":"178:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:20"},"nodeType":"YulFunctionCall","src":"160:51:20"},"nodeType":"YulExpressionStatement","src":"160:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:20","type":""}],"src":"14:203:20"},{"body":{"nodeType":"YulBlock","src":"254:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"271:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"283:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"274:3:20"},"nodeType":"YulFunctionCall","src":"274:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"264:6:20"},"nodeType":"YulFunctionCall","src":"264:31:20"},"nodeType":"YulExpressionStatement","src":"264:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"311:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"314:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"304:6:20"},"nodeType":"YulFunctionCall","src":"304:15:20"},"nodeType":"YulExpressionStatement","src":"304:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"335:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"338:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"328:6:20"},"nodeType":"YulFunctionCall","src":"328:15:20"},"nodeType":"YulExpressionStatement","src":"328:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"222:127:20"},{"body":{"nodeType":"YulBlock","src":"409:325:20","statements":[{"nodeType":"YulAssignment","src":"419:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"433:1:20","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"436:4:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"429:3:20"},"nodeType":"YulFunctionCall","src":"429:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"419:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"450:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"480:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"486:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"476:3:20"},"nodeType":"YulFunctionCall","src":"476:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"454:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"527:31:20","statements":[{"nodeType":"YulAssignment","src":"529:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"543:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"551:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"539:3:20"},"nodeType":"YulFunctionCall","src":"539:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"507:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"500:6:20"},"nodeType":"YulFunctionCall","src":"500:26:20"},"nodeType":"YulIf","src":"497:61:20"},{"body":{"nodeType":"YulBlock","src":"617:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"645:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"650:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"641:3:20"},"nodeType":"YulFunctionCall","src":"641:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"631:6:20"},"nodeType":"YulFunctionCall","src":"631:31:20"},"nodeType":"YulExpressionStatement","src":"631:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"682:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"685:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"675:6:20"},"nodeType":"YulFunctionCall","src":"675:15:20"},"nodeType":"YulExpressionStatement","src":"675:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"710:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"713:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"703:6:20"},"nodeType":"YulFunctionCall","src":"703:15:20"},"nodeType":"YulExpressionStatement","src":"703:15:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"573:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"596:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"604:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"593:2:20"},"nodeType":"YulFunctionCall","src":"593:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"570:2:20"},"nodeType":"YulFunctionCall","src":"570:38:20"},"nodeType":"YulIf","src":"567:161:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"389:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"398:6:20","type":""}],"src":"354:380:20"},{"body":{"nodeType":"YulBlock","src":"795:65:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"812:1:20","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"815:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"805:6:20"},"nodeType":"YulFunctionCall","src":"805:14:20"},"nodeType":"YulExpressionStatement","src":"805:14:20"},{"nodeType":"YulAssignment","src":"828:26:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"846:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"849:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"836:9:20"},"nodeType":"YulFunctionCall","src":"836:18:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"828:4:20"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"778:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"786:4:20","type":""}],"src":"739:121:20"},{"body":{"nodeType":"YulBlock","src":"946:464:20","statements":[{"body":{"nodeType":"YulBlock","src":"979:425:20","statements":[{"nodeType":"YulVariableDeclaration","src":"993:11:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1003:1:20","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"997:2:20","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1024:2:20"},{"name":"array","nodeType":"YulIdentifier","src":"1028:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1017:6:20"},"nodeType":"YulFunctionCall","src":"1017:17:20"},"nodeType":"YulExpressionStatement","src":"1017:17:20"},{"nodeType":"YulVariableDeclaration","src":"1047:31:20","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1069:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"1073:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1059:9:20"},"nodeType":"YulFunctionCall","src":"1059:19:20"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1051:4:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1091:57:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1114:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1124:1:20","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1131:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"1143:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1127:3:20"},"nodeType":"YulFunctionCall","src":"1127:19:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1120:3:20"},"nodeType":"YulFunctionCall","src":"1120:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1110:3:20"},"nodeType":"YulFunctionCall","src":"1110:38:20"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1095:11:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1185:23:20","statements":[{"nodeType":"YulAssignment","src":"1187:19:20","value":{"name":"data","nodeType":"YulIdentifier","src":"1202:4:20"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1187:11:20"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1167:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"1179:4:20","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1164:2:20"},"nodeType":"YulFunctionCall","src":"1164:20:20"},"nodeType":"YulIf","src":"1161:47:20"},{"nodeType":"YulVariableDeclaration","src":"1221:41:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1235:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1245:1:20","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1252:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1257:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1248:3:20"},"nodeType":"YulFunctionCall","src":"1248:12:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1241:3:20"},"nodeType":"YulFunctionCall","src":"1241:20:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1231:3:20"},"nodeType":"YulFunctionCall","src":"1231:31:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1225:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1275:24:20","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1288:11:20"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1279:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1373:21:20","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1382:5:20"},{"name":"_1","nodeType":"YulIdentifier","src":"1389:2:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1375:6:20"},"nodeType":"YulFunctionCall","src":"1375:17:20"},"nodeType":"YulExpressionStatement","src":"1375:17:20"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1323:5:20"},{"name":"_2","nodeType":"YulIdentifier","src":"1330:2:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1320:2:20"},"nodeType":"YulFunctionCall","src":"1320:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1334:26:20","statements":[{"nodeType":"YulAssignment","src":"1336:22:20","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1349:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1356:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1345:3:20"},"nodeType":"YulFunctionCall","src":"1345:13:20"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1336:5:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1316:3:20","statements":[]},"src":"1312:82:20"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"962:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"967:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"959:2:20"},"nodeType":"YulFunctionCall","src":"959:11:20"},"nodeType":"YulIf","src":"956:448:20"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"918:5:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"925:3:20","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"930:10:20","type":""}],"src":"865:545:20"},{"body":{"nodeType":"YulBlock","src":"1500:81:20","statements":[{"nodeType":"YulAssignment","src":"1510:65:20","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1525:4:20"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1543:1:20","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1546:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1539:3:20"},"nodeType":"YulFunctionCall","src":"1539:11:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1556:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1552:3:20"},"nodeType":"YulFunctionCall","src":"1552:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1535:3:20"},"nodeType":"YulFunctionCall","src":"1535:24:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1531:3:20"},"nodeType":"YulFunctionCall","src":"1531:29:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1521:3:20"},"nodeType":"YulFunctionCall","src":"1521:40:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1567:1:20","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1570:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1563:3:20"},"nodeType":"YulFunctionCall","src":"1563:11:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1518:2:20"},"nodeType":"YulFunctionCall","src":"1518:57:20"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1510:4:20"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1477:4:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"1483:3:20","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1491:4:20","type":""}],"src":"1415:166:20"},{"body":{"nodeType":"YulBlock","src":"1682:1256:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1692:24:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1712:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1706:5:20"},"nodeType":"YulFunctionCall","src":"1706:10:20"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1696:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1759:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1761:16:20"},"nodeType":"YulFunctionCall","src":"1761:18:20"},"nodeType":"YulExpressionStatement","src":"1761:18:20"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1731:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1747:2:20","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1751:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1743:3:20"},"nodeType":"YulFunctionCall","src":"1743:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"1755:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1739:3:20"},"nodeType":"YulFunctionCall","src":"1739:18:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1728:2:20"},"nodeType":"YulFunctionCall","src":"1728:30:20"},"nodeType":"YulIf","src":"1725:56:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1834:4:20"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1872:4:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1866:5:20"},"nodeType":"YulFunctionCall","src":"1866:11:20"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1840:25:20"},"nodeType":"YulFunctionCall","src":"1840:38:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"1880:6:20"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1790:43:20"},"nodeType":"YulFunctionCall","src":"1790:97:20"},"nodeType":"YulExpressionStatement","src":"1790:97:20"},{"nodeType":"YulVariableDeclaration","src":"1896:18:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1913:1:20","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1900:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1923:23:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1942:4:20","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1927:11:20","type":""}]},{"nodeType":"YulAssignment","src":"1955:24:20","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1968:11:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1955:9:20"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2025:656:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2039:35:20","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2058:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2070:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2066:3:20"},"nodeType":"YulFunctionCall","src":"2066:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2054:3:20"},"nodeType":"YulFunctionCall","src":"2054:20:20"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2043:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2087:49:20","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2131:4:20"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2101:29:20"},"nodeType":"YulFunctionCall","src":"2101:35:20"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2091:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2149:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2158:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2153:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2236:172:20","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2261:6:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2279:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2284:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2275:3:20"},"nodeType":"YulFunctionCall","src":"2275:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2269:5:20"},"nodeType":"YulFunctionCall","src":"2269:26:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2254:6:20"},"nodeType":"YulFunctionCall","src":"2254:42:20"},"nodeType":"YulExpressionStatement","src":"2254:42:20"},{"nodeType":"YulAssignment","src":"2313:24:20","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2327:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2335:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2323:3:20"},"nodeType":"YulFunctionCall","src":"2323:14:20"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2313:6:20"}]},{"nodeType":"YulAssignment","src":"2354:40:20","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2371:9:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2382:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2367:3:20"},"nodeType":"YulFunctionCall","src":"2367:27:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2354:9:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2183:1:20"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2186:7:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2180:2:20"},"nodeType":"YulFunctionCall","src":"2180:14:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2195:28:20","statements":[{"nodeType":"YulAssignment","src":"2197:24:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2206:1:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2209:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2202:3:20"},"nodeType":"YulFunctionCall","src":"2202:19:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2197:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"2176:3:20","statements":[]},"src":"2172:236:20"},{"body":{"nodeType":"YulBlock","src":"2456:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2474:43:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2501:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2506:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2497:3:20"},"nodeType":"YulFunctionCall","src":"2497:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2491:5:20"},"nodeType":"YulFunctionCall","src":"2491:26:20"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2478:9:20","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2541:6:20"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2553:9:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2580:1:20","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2583:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2576:3:20"},"nodeType":"YulFunctionCall","src":"2576:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"2592:3:20","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2572:3:20"},"nodeType":"YulFunctionCall","src":"2572:24:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2602:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2598:3:20"},"nodeType":"YulFunctionCall","src":"2598:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2568:3:20"},"nodeType":"YulFunctionCall","src":"2568:37:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2564:3:20"},"nodeType":"YulFunctionCall","src":"2564:42:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2549:3:20"},"nodeType":"YulFunctionCall","src":"2549:58:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2534:6:20"},"nodeType":"YulFunctionCall","src":"2534:74:20"},"nodeType":"YulExpressionStatement","src":"2534:74:20"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2427:7:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"2436:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2424:2:20"},"nodeType":"YulFunctionCall","src":"2424:19:20"},"nodeType":"YulIf","src":"2421:201:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2642:4:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2656:1:20","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2659:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2652:3:20"},"nodeType":"YulFunctionCall","src":"2652:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"2668:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2648:3:20"},"nodeType":"YulFunctionCall","src":"2648:22:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2635:6:20"},"nodeType":"YulFunctionCall","src":"2635:36:20"},"nodeType":"YulExpressionStatement","src":"2635:36:20"}]},"nodeType":"YulCase","src":"2018:663:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2023:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2698:234:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2712:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2725:1:20","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2716:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2761:67:20","statements":[{"nodeType":"YulAssignment","src":"2779:35:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2798:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2803:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2794:3:20"},"nodeType":"YulFunctionCall","src":"2794:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2788:5:20"},"nodeType":"YulFunctionCall","src":"2788:26:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2779:5:20"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2742:6:20"},"nodeType":"YulIf","src":"2739:89:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2848:4:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2907:5:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"2914:6:20"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2854:52:20"},"nodeType":"YulFunctionCall","src":"2854:67:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2841:6:20"},"nodeType":"YulFunctionCall","src":"2841:81:20"},"nodeType":"YulExpressionStatement","src":"2841:81:20"}]},"nodeType":"YulCase","src":"2690:242:20","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1998:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2006:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1995:2:20"},"nodeType":"YulFunctionCall","src":"1995:14:20"},"nodeType":"YulSwitch","src":"1988:944:20"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1667:4:20","type":""},{"name":"src","nodeType":"YulTypedName","src":"1673:3:20","type":""}],"src":"1586:1352:20"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260026004553480156200001657600080fd5b5060408051602081019091526000815233906200003381620000b9565b506001600160a01b0381166200006357604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006e81620000cb565b5060408051808201909152601881527f697066733a2f2f516d54726f7068794d657461646174612f00000000000000006020820152600590620000b29082620001c2565b506200028e565b6002620000c78282620001c2565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014857607f821691505b6020821081036200016957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001bd57600081815260208120601f850160051c81016020861015620001985750805b601f850160051c820191505b81811015620001b957828155600101620001a4565b5050505b505050565b81516001600160401b03811115620001de57620001de6200011d565b620001f681620001ef845462000133565b846200016f565b602080601f8311600181146200022e5760008415620002155750858301515b600019600386901b1c1916600185901b178555620001b9565b600085815260208120601f198616915b828110156200025f578886015182559484019460019091019084016200023e565b50858210156200027e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611caf806200029e6000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c8063715018a6116100a2578063cdafbbb611610071578063cdafbbb6146102a3578063e985e9c514610328578063efb022231461033b578063f242432a14610343578063f2fde38b1461035657600080fd5b8063715018a61461025a5780638da5cb5b14610262578063a22cb4651461027d578063c90532541461029057600080fd5b80634e1273f4116100e95780634e1273f4146101985780634fd66eae146101b8578063522020a81461022157806355f804b314610234578063662b1c581461024757600080fd5b8062fdd58e1461011a57806301ffc9a7146101405780630e89341c146101635780632eb2c2d614610183575b600080fd5b61012d61012836600461141e565b610369565b6040519081526020015b60405180910390f35b61015361014e36600461145e565b610391565b6040519015158152602001610137565b610176610171366004611482565b6103e1565b60405161013791906114eb565b61019661019136600461164c565b610415565b005b6101ab6101a63660046116f6565b610481565b60405161013791906117f1565b6101cb6101c6366004611804565b610556565b6040516101379190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61019661022f36600461181f565b6105ff565b61019661024236600461181f565b610854565b61019661025536600461141e565b61086c565b6101966108ee565b6003546040516001600160a01b039091168152602001610137565b61019661028b366004611870565b610902565b61019661029e366004611804565b61090d565b6102f36102b1366004611804565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610137565b6101536103363660046118ac565b610a09565b61012d600181565b6101966103513660046118df565b610a37565b610196610364366004611804565b610a96565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806103c257506001600160e01b031982166303a24d0760e21b145b8061038b57506301ffc9a760e01b6001600160e01b031983161461038b565b606060056103ee83610ad4565b6040516020016103ff92919061197e565b6040516020818303038152906040529050919050565b336001600160a01b038616811480159061043657506104348682610a09565b155b1561046c5760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6104798686868686610b67565b505050505050565b606081518351146104b25781518351604051635b05999160e01b815260048101929092526024820152604401610463565b6000835167ffffffffffffffff8111156104ce576104ce6114fe565b6040519080825280602002602001820160405280156104f7578160200160208202803683370190505b50905060005b845181101561054e5760208082028601015161052190602080840287010151610369565b82828151811061053357610533611a15565b602090810291909101015261054781611a41565b90506104fd565b509392505050565b6105966040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260066020818152604092839020835160e081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015291015460c082015290565b600061062782604051806040016040528060048152602001636d6f766560e01b815250610bce565b90506000610659836040518060400160405280600c81526020016b7370656369616c5f6d6f766560a01b815250610bce565b90506000610686846040518060400160405280600781526020016667726170706c6560c81b815250610bce565b905060006106b7856040518060400160405280600b81526020016a726f70655f626f756e636560a81b815250610bce565b905060006106e586604051806040016040528060088152602001671adb9bd8dadbdd5d60c21b815250610bce565b90506000610717876040518060400160405280600c81526020016b06368616d70696f6e736869760a41b815250610bce565b905085156107445733600090815260066020526040812080549161073a83611a41565b91905055506107fe565b84156107685733600090815260066020526040812060010180549161073a83611a41565b831561078c5733600090815260066020526040812060020180549161073a83611a41565b82156107b05733600090815260066020526040812060030180549161073a83611a41565b81156107d45733600090815260066020526040812060040180549161073a83611a41565b80156107fe573360009081526006602052604081206005018054916107f883611a41565b91905055505b3360008181526006602081905260409182902042910155517fcf4427363692826484588652734fbdfe66066252ce5898a5c9d20416bcadec5390610843908a906114eb565b60405180910390a250505050505050565b61085c610cad565b60056108688282611aa5565b5050565b610874610cad565b60048054908190600061088683611a41565b91905055506108a683828460405180602001604052806000815250610cda565b826001600160a01b03167f40e0fad75d161c82d49af9e03ec076efa4ff442a3954c75339fd02218374e2dc826040516108e191815260200190565b60405180910390a2505050565b6108f6610cad565b6109006000610d37565b565b610868338383610d89565b6003546001600160a01b031633148061092e5750336001600160a01b038216145b61097a5760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420617574686f72697a656420746f206d696e742074726f7068790000006044820152606401610463565b6109968160018060405180602001604052806000815250610cda565b6001600160a01b03811660009081526006602052604081206005018054916109bd83611a41565b9190505550806001600160a01b03167f40e0fad75d161c82d49af9e03ec076efa4ff442a3954c75339fd02218374e2dc60016040516109fe91815260200190565b60405180910390a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b0386168114801590610a585750610a568682610a09565b155b15610a895760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610463565b6104798686868686610e1f565b610a9e610cad565b6001600160a01b038116610ac857604051631e4fbdf760e01b815260006004820152602401610463565b610ad181610d37565b50565b60606000610ae183610ead565b600101905060008167ffffffffffffffff811115610b0157610b016114fe565b6040519080825280601f01601f191660200182016040528015610b2b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b3557509392505050565b6001600160a01b038416610b9157604051632bfa23e760e11b815260006004820152602401610463565b6001600160a01b038516610bba57604051626a0d4560e21b815260006004820152602401610463565b610bc78585858585610f85565b5050505050565b81518151600091849184911015610bea5760009250505061038b565b60005b81518351610bfb9190611b65565b8111610ca157600160005b8351811015610c7a57838181518110610c2157610c21611a15565b01602001516001600160f81b03191685610c3b8386611b78565b81518110610c4b57610c4b611a15565b01602001516001600160f81b03191614610c685760009150610c7a565b80610c7281611a41565b915050610c06565b508015610c8e57600194505050505061038b565b5080610c9981611a41565b915050610bed565b50600095945050505050565b6003546001600160a01b031633146109005760405163118cdaa760e01b8152336004820152602401610463565b6001600160a01b038416610d0457604051632bfa23e760e11b815260006004820152602401610463565b60408051600180825260208201869052818301908152606082018590526080820190925290610479600087848487610f85565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610db25760405162ced3e160e81b815260006004820152602401610463565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610e4957604051632bfa23e760e11b815260006004820152602401610463565b6001600160a01b038516610e7257604051626a0d4560e21b815260006004820152602401610463565b60408051600180825260208201869052818301908152606082018590526080820190925290610ea48787848487610f85565b50505050505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610eec5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f18576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f3657662386f26fc10000830492506010015b6305f5e1008310610f4e576305f5e100830492506008015b6127108310610f6257612710830492506004015b60648310610f74576064830492506002015b600a831061038b5760010192915050565b610f9185858585610fd8565b6001600160a01b03841615610bc75782513390600103610fca5760208481015190840151610fc38389898585896111f5565b5050610479565b610479818787878787611319565b80518251146110075781518151604051635b05999160e01b815260048101929092526024820152604401610463565b3360005b8351811015611116576020818102858101820151908501909101516001600160a01b038816156110be576000828152602081815260408083206001600160a01b038c16845290915290205481811015611097576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610463565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615611103576000828152602081815260408083206001600160a01b038b168452909152812080548392906110fd908490611b78565b90915550505b50508061110f90611a41565b905061100b565b5082516001036111975760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611188929190918252602082015260400190565b60405180910390a45050610bc7565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516111e6929190611b8b565b60405180910390a45050505050565b6001600160a01b0384163b156104795760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112399089908990889088908890600401611bb9565b6020604051808303816000875af1925050508015611274575060408051601f3d908101601f1916820190925261127191810190611bfe565b60015b6112dd573d8080156112a2576040519150601f19603f3d011682016040523d82523d6000602084013e6112a7565b606091505b5080516000036112d557604051632bfa23e760e11b81526001600160a01b0386166004820152602401610463565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610ea457604051632bfa23e760e11b81526001600160a01b0386166004820152602401610463565b6001600160a01b0384163b156104795760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061135d9089908990889088908890600401611c1b565b6020604051808303816000875af1925050508015611398575060408051601f3d908101601f1916820190925261139591810190611bfe565b60015b6113c6573d8080156112a2576040519150601f19603f3d011682016040523d82523d6000602084013e6112a7565b6001600160e01b0319811663bc197c8160e01b14610ea457604051632bfa23e760e11b81526001600160a01b0386166004820152602401610463565b80356001600160a01b038116811461141957600080fd5b919050565b6000806040838503121561143157600080fd5b61143a83611402565b946020939093013593505050565b6001600160e01b031981168114610ad157600080fd5b60006020828403121561147057600080fd5b813561147b81611448565b9392505050565b60006020828403121561149457600080fd5b5035919050565b60005b838110156114b657818101518382015260200161149e565b50506000910152565b600081518084526114d781602086016020860161149b565b601f01601f19169290920160200192915050565b60208152600061147b60208301846114bf565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561153d5761153d6114fe565b604052919050565b600067ffffffffffffffff82111561155f5761155f6114fe565b5060051b60200190565b600082601f83011261157a57600080fd5b8135602061158f61158a83611545565b611514565b82815260059290921b840181019181810190868411156115ae57600080fd5b8286015b848110156115c957803583529183019183016115b2565b509695505050505050565b600067ffffffffffffffff8311156115ee576115ee6114fe565b611601601f8401601f1916602001611514565b905082815283838301111561161557600080fd5b828260208301376000602084830101529392505050565b600082601f83011261163d57600080fd5b61147b838335602085016115d4565b600080600080600060a0868803121561166457600080fd5b61166d86611402565b945061167b60208701611402565b9350604086013567ffffffffffffffff8082111561169857600080fd5b6116a489838a01611569565b945060608801359150808211156116ba57600080fd5b6116c689838a01611569565b935060808801359150808211156116dc57600080fd5b506116e98882890161162c565b9150509295509295909350565b6000806040838503121561170957600080fd5b823567ffffffffffffffff8082111561172157600080fd5b818501915085601f83011261173557600080fd5b8135602061174561158a83611545565b82815260059290921b8401810191818101908984111561176457600080fd5b948201945b838610156117895761177a86611402565b82529482019490820190611769565b9650508601359250508082111561179f57600080fd5b506117ac85828601611569565b9150509250929050565b600081518084526020808501945080840160005b838110156117e6578151875295820195908201906001016117ca565b509495945050505050565b60208152600061147b60208301846117b6565b60006020828403121561181657600080fd5b61147b82611402565b60006020828403121561183157600080fd5b813567ffffffffffffffff81111561184857600080fd5b8201601f8101841361185957600080fd5b611868848235602084016115d4565b949350505050565b6000806040838503121561188357600080fd5b61188c83611402565b9150602083013580151581146118a157600080fd5b809150509250929050565b600080604083850312156118bf57600080fd5b6118c883611402565b91506118d660208401611402565b90509250929050565b600080600080600060a086880312156118f757600080fd5b61190086611402565b945061190e60208701611402565b93506040860135925060608601359150608086013567ffffffffffffffff81111561193857600080fd5b6116e98882890161162c565b600181811c9082168061195857607f821691505b60208210810361197857634e487b7160e01b600052602260045260246000fd5b50919050565b600080845461198c81611944565b600182811680156119a457600181146119b9576119e8565b60ff19841687528215158302870194506119e8565b8860005260208060002060005b858110156119df5781548a8201529084019082016119c6565b50505082870194505b5050505083516119fc81836020880161149b565b64173539b7b760d91b9101908152600501949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a5357611a53611a2b565b5060010190565b601f821115611aa057600081815260208120601f850160051c81016020861015611a815750805b601f850160051c820191505b8181101561047957828155600101611a8d565b505050565b815167ffffffffffffffff811115611abf57611abf6114fe565b611ad381611acd8454611944565b84611a5a565b602080601f831160018114611b085760008415611af05750858301515b600019600386901b1c1916600185901b178555610479565b600085815260208120601f198616915b82811015611b3757888601518255948401946001909101908401611b18565b5085821015611b555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561038b5761038b611a2b565b8082018082111561038b5761038b611a2b565b604081526000611b9e60408301856117b6565b8281036020840152611bb081856117b6565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611bf3908301846114bf565b979650505050505050565b600060208284031215611c1057600080fd5b815161147b81611448565b6001600160a01b0386811682528516602082015260a060408201819052600090611c47908301866117b6565b8281036060840152611c5981866117b6565b90508281036080840152611c6d81856114bf565b9897505050505050505056fea264697066735822122059c6509a6ee4267197c02201b35c206c942c012ef75fb3a509b3f95eba91dad964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE CALLER SWAP1 PUSH3 0x33 DUP2 PUSH3 0xB9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x6E DUP2 PUSH3 0xCB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x697066733A2F2F516D54726F7068794D657461646174612F0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 PUSH3 0xB2 SWAP1 DUP3 PUSH3 0x1C2 JUMP JUMPDEST POP PUSH3 0x28E JUMP JUMPDEST PUSH1 0x2 PUSH3 0xC7 DUP3 DUP3 PUSH3 0x1C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x148 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x169 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1BD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x198 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1B9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1A4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1DE JUMPI PUSH3 0x1DE PUSH3 0x11D JUMP JUMPDEST PUSH3 0x1F6 DUP2 PUSH3 0x1EF DUP5 SLOAD PUSH3 0x133 JUMP JUMPDEST DUP5 PUSH3 0x16F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x22E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x215 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1B9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x25F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x23E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x27E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1CAF DUP1 PUSH3 0x29E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCDAFBBB6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCDAFBBB6 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xEFB02223 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xC9053254 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x4FD66EAE EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x522020A8 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x662B1C58 EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x141E JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x145E JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F6 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x196 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x141E JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST PUSH2 0x196 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x38B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x38B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH2 0x3EE DUP4 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3FF SWAP3 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x436 JUMPI POP PUSH2 0x434 DUP7 DUP3 PUSH2 0xA09 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x479 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB67 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4B2 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CE JUMPI PUSH2 0x4CE PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x54E JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x521 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x369 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x533 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x547 DUP2 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x596 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x627 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x6D6F7665 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x659 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x7370656369616C5F6D6F7665 PUSH1 0xA0 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x686 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x67726170706C65 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B7 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x726F70655F626F756E6365 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6E5 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x1ADB9BD8DADBDD5D PUSH1 0xC2 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x717 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x6368616D70696F6E7368697 PUSH1 0xA4 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP DUP6 ISZERO PUSH2 0x744 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x7FE JUMP JUMPDEST DUP5 ISZERO PUSH2 0x768 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x78C JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7B0 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x7D4 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7FE JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP2 PUSH2 0x7F8 DUP4 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE MLOAD PUSH32 0xCF4427363692826484588652734FBDFE66066252CE5898A5C9D20416BCADEC53 SWAP1 PUSH2 0x843 SWAP1 DUP11 SWAP1 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85C PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x5 PUSH2 0x868 DUP3 DUP3 PUSH2 0x1AA5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x874 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x886 DUP4 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x8A6 DUP4 DUP3 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDA JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x40E0FAD75D161C82D49AF9E03EC076EFA4FF442A3954C75339FD02218374E2DC DUP3 PUSH1 0x40 MLOAD PUSH2 0x8E1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x900 PUSH1 0x0 PUSH2 0xD37 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x868 CALLER DUP4 DUP4 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x92E JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206D696E742074726F706879000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0x996 DUP2 PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP2 PUSH2 0x9BD DUP4 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x40E0FAD75D161C82D49AF9E03EC076EFA4FF442A3954C75339FD02218374E2DC PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xA58 JUMPI POP PUSH2 0xA56 DUP7 DUP3 PUSH2 0xA09 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0x479 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xA9E PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0xAD1 DUP2 PUSH2 0xD37 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAE1 DUP4 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB01 JUMPI PUSH2 0xB01 PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB2B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xB35 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB91 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0xBC7 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF85 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP5 SWAP2 LT ISZERO PUSH2 0xBEA JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP4 MLOAD PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST DUP2 GT PUSH2 0xCA1 JUMPI PUSH1 0x1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC7A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC21 JUMPI PUSH2 0xC21 PUSH2 0x1A15 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP6 PUSH2 0xC3B DUP4 DUP7 PUSH2 0x1B78 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xC4B JUMPI PUSH2 0xC4B PUSH2 0x1A15 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND EQ PUSH2 0xC68 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xC7A JUMP JUMPDEST DUP1 PUSH2 0xC72 DUP2 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC06 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xC8E JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x38B JUMP JUMPDEST POP DUP1 PUSH2 0xC99 DUP2 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBED JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x900 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD04 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x479 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xEA4 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF85 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xEEC JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF18 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xF36 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xF4E JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xF62 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xF74 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x38B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF91 DUP6 DUP6 DUP6 DUP6 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xBC7 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0xFCA JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0xFC3 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11F5 JUMP JUMPDEST POP POP PUSH2 0x479 JUMP JUMPDEST PUSH2 0x479 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1319 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1007 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x463 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1116 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x1103 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x10FD SWAP1 DUP5 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0x110F SWAP1 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP PUSH2 0x100B JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x1197 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1188 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xBC7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x11E6 SWAP3 SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1239 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1274 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1271 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1BFE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12DD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x135D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1398 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1395 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1BFE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13C6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143A DUP4 PUSH2 0x1402 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x147B DUP2 PUSH2 0x1448 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x149E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x14D7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x149B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x147B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x153D JUMPI PUSH2 0x153D PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155F PUSH2 0x14FE JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x157A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x158F PUSH2 0x158A DUP4 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x15AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x15C9 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x15B2 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15EE PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x1601 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x163D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147B DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166D DUP7 PUSH2 0x1402 JUMP JUMPDEST SWAP5 POP PUSH2 0x167B PUSH1 0x20 DUP8 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A4 DUP10 DUP4 DUP11 ADD PUSH2 0x1569 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C6 DUP10 DUP4 DUP11 ADD PUSH2 0x1569 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E9 DUP9 DUP3 DUP10 ADD PUSH2 0x162C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1745 PUSH2 0x158A DUP4 PUSH2 0x1545 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1789 JUMPI PUSH2 0x177A DUP7 PUSH2 0x1402 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1769 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17AC DUP6 DUP3 DUP7 ADD PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17E6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17CA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x147B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147B DUP3 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1868 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x188C DUP4 PUSH2 0x1402 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18C8 DUP4 PUSH2 0x1402 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D6 PUSH1 0x20 DUP5 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1900 DUP7 PUSH2 0x1402 JUMP JUMPDEST SWAP5 POP PUSH2 0x190E PUSH1 0x20 DUP8 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E9 DUP9 DUP3 DUP10 ADD PUSH2 0x162C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1958 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1978 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x198C DUP2 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x19A4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x19B9 JUMPI PUSH2 0x19E8 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x19E8 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x19DF JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x19C6 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x19FC DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x149B JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A53 JUMPI PUSH2 0x1A53 PUSH2 0x1A2B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1AA0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1A81 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x479 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ABF JUMPI PUSH2 0x1ABF PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x1AD3 DUP2 PUSH2 0x1ACD DUP5 SLOAD PUSH2 0x1944 JUMP JUMPDEST DUP5 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1B08 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1AF0 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B37 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1B18 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1B55 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x38B JUMPI PUSH2 0x38B PUSH2 0x1A2B JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x38B JUMPI PUSH2 0x38B PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B9E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1BB0 DUP2 DUP6 PUSH2 0x17B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BF3 SWAP1 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x147B DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1C47 SWAP1 DUP4 ADD DUP7 PUSH2 0x17B6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1C59 DUP2 DUP7 PUSH2 0x17B6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1C6D DUP2 DUP6 PUSH2 0x14BF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xC6 POP SWAP11 PUSH15 0xE4267197C02201B35C206C942C012E 0xF7 PUSH0 0xB3 0xA5 MULMOD 0xB3 0xF9 0x5E 0xBA SWAP2 0xDA 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"383:5382:19:-:0;;;563:1;533:31;;1308:99;;;;;;;;;-1:-1:-1;1249:62:2;;;;;;;;;-1:-1:-1;1249:62:2;;1342:10:19;;1291:13:2;1249:62;1291:7;:13::i;:::-;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:20;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1364:36:19::2;::::0;;;;::::2;::::0;;;::::2;::::0;;::::2;;::::0;::::2;::::0;:7:::2;::::0;:36:::2;::::0;:7;:36:::2;:::i;:::-;;383:5382:::0;;10290:86:2;10356:4;:13;10363:6;10356:4;:13;:::i;:::-;;10290:86;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;222:127:20:-;283:10;278:3;274:20;271:1;264:31;314:4;311:1;304:15;338:4;335:1;328:15;354:380;433:1;429:12;;;;476;;;497:61;;551:4;543:6;539:17;529:27;;497:61;604:2;596:6;593:14;573:18;570:38;567:161;;650:10;645:3;641:20;638:1;631:31;685:4;682:1;675:15;713:4;710:1;703:15;567:161;;354:380;;;:::o;865:545::-;967:2;962:3;959:11;956:448;;;1003:1;1028:5;1024:2;1017:17;1073:4;1069:2;1059:19;1143:2;1131:10;1127:19;1124:1;1120:27;1114:4;1110:38;1179:4;1167:10;1164:20;1161:47;;;-1:-1:-1;1202:4:20;1161:47;1257:2;1252:3;1248:12;1245:1;1241:20;1235:4;1231:31;1221:41;;1312:82;1330:2;1323:5;1320:13;1312:82;;;1375:17;;;1356:1;1345:13;1312:82;;;1316:3;;;956:448;865:545;;;:::o;1586:1352::-;1706:10;;-1:-1:-1;;;;;1728:30:20;;1725:56;;;1761:18;;:::i;:::-;1790:97;1880:6;1840:38;1872:4;1866:11;1840:38;:::i;:::-;1834:4;1790:97;:::i;:::-;1942:4;;2006:2;1995:14;;2023:1;2018:663;;;;2725:1;2742:6;2739:89;;;-1:-1:-1;2794:19:20;;;2788:26;2739:89;-1:-1:-1;;1543:1:20;1539:11;;;1535:24;1531:29;1521:40;1567:1;1563:11;;;1518:57;2841:81;;1988:944;;2018:663;812:1;805:14;;;849:4;836:18;;-1:-1:-1;;2054:20:20;;;2172:236;2186:7;2183:1;2180:14;2172:236;;;2275:19;;;2269:26;2254:42;;2367:27;;;;2335:1;2323:14;;;;2202:19;;2172:236;;;2176:3;2436:6;2427:7;2424:19;2421:201;;;2497:19;;;2491:26;-1:-1:-1;;2580:1:20;2576:14;;;2592:3;2572:24;2568:37;2564:42;2549:58;2534:74;;2421:201;-1:-1:-1;;;;;2668:1:20;2652:14;;;2648:22;2635:36;;-1:-1:-1;1586:1352:20:o;:::-;383:5382:19;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CHAMPIONSHIP_TROPHY_7549":{"entryPoint":null,"id":7549,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1200":{"entryPoint":null,"id":1200,"parameterSlots":2,"returnSlots":2},"@_checkOwner_84":{"entryPoint":3245,"id":84,"parameterSlots":0,"returnSlots":0},"@_contains_7934":{"entryPoint":3022,"id":7934,"parameterSlots":2,"returnSlots":1},"@_mint_1014":{"entryPoint":3290,"id":1014,"parameterSlots":4,"returnSlots":0},"@_msgSender_2458":{"entryPoint":null,"id":2458,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_951":{"entryPoint":2919,"id":951,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_896":{"entryPoint":3615,"id":896,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1184":{"entryPoint":3465,"id":1184,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3383,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_830":{"entryPoint":3973,"id":830,"parameterSlots":5,"returnSlots":0},"@_update_750":{"entryPoint":4056,"id":750,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_474":{"entryPoint":1153,"id":474,"parameterSlots":2,"returnSlots":1},"@balanceOf_404":{"entryPoint":873,"id":404,"parameterSlots":2,"returnSlots":1},"@checkOnERC1155BatchReceived_1535":{"entryPoint":4889,"id":1535,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1461":{"entryPoint":4597,"id":1461,"parameterSlots":6,"returnSlots":0},"@getPlayerStats_7844":{"entryPoint":1366,"id":7844,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_507":{"entryPoint":2569,"id":507,"parameterSlots":2,"returnSlots":1},"@log10_5396":{"entryPoint":3757,"id":5396,"parameterSlots":1,"returnSlots":1},"@logAction_7761":{"entryPoint":1535,"id":7761,"parameterSlots":1,"returnSlots":0},"@mintNewTrophy_7830":{"entryPoint":2156,"id":7830,"parameterSlots":2,"returnSlots":0},"@mintTrophy_7800":{"entryPoint":2317,"id":7800,"parameterSlots":1,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@playerStats_7559":{"entryPoint":null,"id":7559,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2286,"id":98,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_597":{"entryPoint":1045,"id":597,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_551":{"entryPoint":2615,"id":551,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_490":{"entryPoint":2306,"id":490,"parameterSlots":2,"returnSlots":0},"@setBaseURI_7615":{"entryPoint":2132,"id":7615,"parameterSlots":1,"returnSlots":0},"@supportsInterface_376":{"entryPoint":913,"id":376,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4005":{"entryPoint":null,"id":4005,"parameterSlots":1,"returnSlots":1},"@toString_2860":{"entryPoint":2772,"id":2860,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2710,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_2354":{"entryPoint":null,"id":2354,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_2380":{"entryPoint":null,"id":2380,"parameterSlots":2,"returnSlots":1},"@uri_7637":{"entryPoint":993,"id":7637,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":5122,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":5481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":5588,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":5676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6316,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":5708,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":6367,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6256,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5150,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5878,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":7166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":6070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5311,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6526,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7195,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7097,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7051,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e82d83d04a32c883bf9bfef223707a943ac73536532cd4da086581398f1d0a6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_PlayerStats_$7574_memory_ptr__to_t_struct$_PlayerStats_$7574_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"allocate_memory":{"entryPoint":5396,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":5445,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7032,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7013,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6746,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6821,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5275,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6468,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":6721,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6699,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6677,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5374,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":5192,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18221:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:20","statements":[{"nodeType":"YulAssignment","src":"73:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:20"},"nodeType":"YulFunctionCall","src":"82:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:20"}]},{"body":{"nodeType":"YulBlock","src":"165:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:20"},"nodeType":"YulFunctionCall","src":"167:12:20"},"nodeType":"YulExpressionStatement","src":"167:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:20"},"nodeType":"YulFunctionCall","src":"146:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:20"},"nodeType":"YulFunctionCall","src":"142:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:20"},"nodeType":"YulFunctionCall","src":"131:31:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:20"},"nodeType":"YulFunctionCall","src":"121:42:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:20"},"nodeType":"YulFunctionCall","src":"114:50:20"},"nodeType":"YulIf","src":"111:70:20"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:20","type":""}],"src":"14:173:20"},{"body":{"nodeType":"YulBlock","src":"279:167:20","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:20"},"nodeType":"YulFunctionCall","src":"327:12:20"},"nodeType":"YulExpressionStatement","src":"327:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:20"},"nodeType":"YulFunctionCall","src":"296:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:20"},"nodeType":"YulFunctionCall","src":"292:32:20"},"nodeType":"YulIf","src":"289:52:20"},{"nodeType":"YulAssignment","src":"350:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:20"},"nodeType":"YulFunctionCall","src":"360:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:20"}]},{"nodeType":"YulAssignment","src":"398:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:20"},"nodeType":"YulFunctionCall","src":"421:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:20"},"nodeType":"YulFunctionCall","src":"408:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:20","type":""}],"src":"192:254:20"},{"body":{"nodeType":"YulBlock","src":"552:76:20","statements":[{"nodeType":"YulAssignment","src":"562:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:20"},"nodeType":"YulFunctionCall","src":"570:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:20"},"nodeType":"YulFunctionCall","src":"597:25:20"},"nodeType":"YulExpressionStatement","src":"597:25:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:20","type":""}],"src":"451:177:20"},{"body":{"nodeType":"YulBlock","src":"677:87:20","statements":[{"body":{"nodeType":"YulBlock","src":"742:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"744:6:20"},"nodeType":"YulFunctionCall","src":"744:12:20"},"nodeType":"YulExpressionStatement","src":"744:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"700:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"711:5:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"727:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"718:3:20"},"nodeType":"YulFunctionCall","src":"718:20:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"707:3:20"},"nodeType":"YulFunctionCall","src":"707:32:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"697:2:20"},"nodeType":"YulFunctionCall","src":"697:43:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:20"},"nodeType":"YulFunctionCall","src":"690:51:20"},"nodeType":"YulIf","src":"687:71:20"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"666:5:20","type":""}],"src":"633:131:20"},{"body":{"nodeType":"YulBlock","src":"838:176:20","statements":[{"body":{"nodeType":"YulBlock","src":"884:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"896:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"886:6:20"},"nodeType":"YulFunctionCall","src":"886:12:20"},"nodeType":"YulExpressionStatement","src":"886:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"859:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"855:3:20"},"nodeType":"YulFunctionCall","src":"855:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"851:3:20"},"nodeType":"YulFunctionCall","src":"851:32:20"},"nodeType":"YulIf","src":"848:52:20"},{"nodeType":"YulVariableDeclaration","src":"909:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"935:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"922:12:20"},"nodeType":"YulFunctionCall","src":"922:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"913:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:20"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"954:23:20"},"nodeType":"YulFunctionCall","src":"954:30:20"},"nodeType":"YulExpressionStatement","src":"954:30:20"},{"nodeType":"YulAssignment","src":"993:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"1003:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:20"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"804:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"815:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"827:6:20","type":""}],"src":"769:245:20"},{"body":{"nodeType":"YulBlock","src":"1114:92:20","statements":[{"nodeType":"YulAssignment","src":"1124:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1147:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:20"},"nodeType":"YulFunctionCall","src":"1132:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1124:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1184:6:20"},"nodeType":"YulFunctionCall","src":"1184:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:20"},"nodeType":"YulFunctionCall","src":"1177:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:20"},"nodeType":"YulFunctionCall","src":"1159:41:20"},"nodeType":"YulExpressionStatement","src":"1159:41:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1094:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:20","type":""}],"src":"1019:187:20"},{"body":{"nodeType":"YulBlock","src":"1281:110:20","statements":[{"body":{"nodeType":"YulBlock","src":"1327:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1336:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1339:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1329:6:20"},"nodeType":"YulFunctionCall","src":"1329:12:20"},"nodeType":"YulExpressionStatement","src":"1329:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1311:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1298:3:20"},"nodeType":"YulFunctionCall","src":"1298:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1323:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1294:3:20"},"nodeType":"YulFunctionCall","src":"1294:32:20"},"nodeType":"YulIf","src":"1291:52:20"},{"nodeType":"YulAssignment","src":"1352:33:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1362:12:20"},"nodeType":"YulFunctionCall","src":"1362:23:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1352:6:20"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1247:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1258:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1270:6:20","type":""}],"src":"1211:180:20"},{"body":{"nodeType":"YulBlock","src":"1462:184:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1472:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1481:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1476:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1541:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1566:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1571:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1562:3:20"},"nodeType":"YulFunctionCall","src":"1562:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1585:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1590:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1581:3:20"},"nodeType":"YulFunctionCall","src":"1581:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1575:5:20"},"nodeType":"YulFunctionCall","src":"1575:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1555:6:20"},"nodeType":"YulFunctionCall","src":"1555:39:20"},"nodeType":"YulExpressionStatement","src":"1555:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1502:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1505:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1499:2:20"},"nodeType":"YulFunctionCall","src":"1499:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1513:19:20","statements":[{"nodeType":"YulAssignment","src":"1515:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1524:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1527:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1520:3:20"},"nodeType":"YulFunctionCall","src":"1520:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1515:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1495:3:20","statements":[]},"src":"1491:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1624:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1629:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1620:3:20"},"nodeType":"YulFunctionCall","src":"1620:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"1638:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1613:6:20"},"nodeType":"YulFunctionCall","src":"1613:27:20"},"nodeType":"YulExpressionStatement","src":"1613:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1440:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1445:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1450:6:20","type":""}],"src":"1396:250:20"},{"body":{"nodeType":"YulBlock","src":"1701:221:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1711:26:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1731:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1725:5:20"},"nodeType":"YulFunctionCall","src":"1725:12:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1715:6:20","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1753:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1758:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1746:6:20"},"nodeType":"YulFunctionCall","src":"1746:19:20"},"nodeType":"YulExpressionStatement","src":"1746:19:20"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1813:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1820:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:20"},"nodeType":"YulFunctionCall","src":"1809:16:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1831:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1836:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:20"},"nodeType":"YulFunctionCall","src":"1827:14:20"},{"name":"length","nodeType":"YulIdentifier","src":"1843:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1774:34:20"},"nodeType":"YulFunctionCall","src":"1774:76:20"},"nodeType":"YulExpressionStatement","src":"1774:76:20"},{"nodeType":"YulAssignment","src":"1859:57:20","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1874:3:20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1887:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1895:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1883:3:20"},"nodeType":"YulFunctionCall","src":"1883:15:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1904:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1900:3:20"},"nodeType":"YulFunctionCall","src":"1900:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1879:3:20"},"nodeType":"YulFunctionCall","src":"1879:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1870:3:20"},"nodeType":"YulFunctionCall","src":"1870:39:20"},{"kind":"number","nodeType":"YulLiteral","src":"1911:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:20"},"nodeType":"YulFunctionCall","src":"1866:50:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1859:3:20"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1678:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1685:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1693:3:20","type":""}],"src":"1651:271:20"},{"body":{"nodeType":"YulBlock","src":"2048:99:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2065:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2076:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2058:6:20"},"nodeType":"YulFunctionCall","src":"2058:21:20"},"nodeType":"YulExpressionStatement","src":"2058:21:20"},{"nodeType":"YulAssignment","src":"2088:53:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2114:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2126:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2137:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:20"},"nodeType":"YulFunctionCall","src":"2122:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2096:17:20"},"nodeType":"YulFunctionCall","src":"2096:45:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2088:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2017:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2028:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2039:4:20","type":""}],"src":"1927:220:20"},{"body":{"nodeType":"YulBlock","src":"2184:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2201:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2208:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2213:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2204:3:20"},"nodeType":"YulFunctionCall","src":"2204:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2194:6:20"},"nodeType":"YulFunctionCall","src":"2194:31:20"},"nodeType":"YulExpressionStatement","src":"2194:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2241:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2244:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2234:6:20"},"nodeType":"YulFunctionCall","src":"2234:15:20"},"nodeType":"YulExpressionStatement","src":"2234:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2265:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2268:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2258:6:20"},"nodeType":"YulFunctionCall","src":"2258:15:20"},"nodeType":"YulExpressionStatement","src":"2258:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2152:127:20"},{"body":{"nodeType":"YulBlock","src":"2329:230:20","statements":[{"nodeType":"YulAssignment","src":"2339:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2355:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2349:5:20"},"nodeType":"YulFunctionCall","src":"2349:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2339:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"2367:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2389:6:20"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2405:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"2411:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2401:3:20"},"nodeType":"YulFunctionCall","src":"2401:13:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2420:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2416:3:20"},"nodeType":"YulFunctionCall","src":"2416:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2397:3:20"},"nodeType":"YulFunctionCall","src":"2397:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2385:3:20"},"nodeType":"YulFunctionCall","src":"2385:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2371:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2500:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2502:16:20"},"nodeType":"YulFunctionCall","src":"2502:18:20"},"nodeType":"YulExpressionStatement","src":"2502:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2443:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"2455:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2440:2:20"},"nodeType":"YulFunctionCall","src":"2440:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2479:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2491:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2476:2:20"},"nodeType":"YulFunctionCall","src":"2476:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2437:2:20"},"nodeType":"YulFunctionCall","src":"2437:62:20"},"nodeType":"YulIf","src":"2434:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2538:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2542:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2531:6:20"},"nodeType":"YulFunctionCall","src":"2531:22:20"},"nodeType":"YulExpressionStatement","src":"2531:22:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2309:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2318:6:20","type":""}],"src":"2284:275:20"},{"body":{"nodeType":"YulBlock","src":"2633:114:20","statements":[{"body":{"nodeType":"YulBlock","src":"2677:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2679:16:20"},"nodeType":"YulFunctionCall","src":"2679:18:20"},"nodeType":"YulExpressionStatement","src":"2679:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2649:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2657:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2646:2:20"},"nodeType":"YulFunctionCall","src":"2646:30:20"},"nodeType":"YulIf","src":"2643:56:20"},{"nodeType":"YulAssignment","src":"2708:33:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2724:1:20","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2727:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2720:3:20"},"nodeType":"YulFunctionCall","src":"2720:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2716:3:20"},"nodeType":"YulFunctionCall","src":"2716:25:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2708:4:20"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2613:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2624:4:20","type":""}],"src":"2564:183:20"},{"body":{"nodeType":"YulBlock","src":"2816:598:20","statements":[{"body":{"nodeType":"YulBlock","src":"2865:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2877:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2867:6:20"},"nodeType":"YulFunctionCall","src":"2867:12:20"},"nodeType":"YulExpressionStatement","src":"2867:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2844:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2852:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2840:3:20"},"nodeType":"YulFunctionCall","src":"2840:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2859:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2836:3:20"},"nodeType":"YulFunctionCall","src":"2836:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2829:6:20"},"nodeType":"YulFunctionCall","src":"2829:35:20"},"nodeType":"YulIf","src":"2826:55:20"},{"nodeType":"YulVariableDeclaration","src":"2890:30:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2913:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2900:12:20"},"nodeType":"YulFunctionCall","src":"2900:20:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2894:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2929:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2939:4:20","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2933:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2952:71:20","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3019:2:20"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"2979:39:20"},"nodeType":"YulFunctionCall","src":"2979:43:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2963:15:20"},"nodeType":"YulFunctionCall","src":"2963:60:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2956:3:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3032:16:20","value":{"name":"dst","nodeType":"YulIdentifier","src":"3045:3:20"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3036:5:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3064:3:20"},{"name":"_1","nodeType":"YulIdentifier","src":"3069:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3057:6:20"},"nodeType":"YulFunctionCall","src":"3057:15:20"},"nodeType":"YulExpressionStatement","src":"3057:15:20"},{"nodeType":"YulAssignment","src":"3081:19:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3092:3:20"},{"name":"_2","nodeType":"YulIdentifier","src":"3097:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3088:3:20"},"nodeType":"YulFunctionCall","src":"3088:12:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3081:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"3109:46:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3131:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3143:1:20","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3146:2:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3139:3:20"},"nodeType":"YulFunctionCall","src":"3139:10:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3127:3:20"},"nodeType":"YulFunctionCall","src":"3127:23:20"},{"name":"_2","nodeType":"YulIdentifier","src":"3152:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3123:3:20"},"nodeType":"YulFunctionCall","src":"3123:32:20"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3113:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3183:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3192:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3195:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3185:6:20"},"nodeType":"YulFunctionCall","src":"3185:12:20"},"nodeType":"YulExpressionStatement","src":"3185:12:20"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3170:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"3178:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3167:2:20"},"nodeType":"YulFunctionCall","src":"3167:15:20"},"nodeType":"YulIf","src":"3164:35:20"},{"nodeType":"YulVariableDeclaration","src":"3208:26:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3223:6:20"},{"name":"_2","nodeType":"YulIdentifier","src":"3231:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3219:3:20"},"nodeType":"YulFunctionCall","src":"3219:15:20"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3212:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3299:86:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3320:3:20"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3338:3:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3325:12:20"},"nodeType":"YulFunctionCall","src":"3325:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3313:6:20"},"nodeType":"YulFunctionCall","src":"3313:30:20"},"nodeType":"YulExpressionStatement","src":"3313:30:20"},{"nodeType":"YulAssignment","src":"3356:19:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3367:3:20"},{"name":"_2","nodeType":"YulIdentifier","src":"3372:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3363:3:20"},"nodeType":"YulFunctionCall","src":"3363:12:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3356:3:20"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3254:3:20"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3259:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3251:2:20"},"nodeType":"YulFunctionCall","src":"3251:15:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3267:23:20","statements":[{"nodeType":"YulAssignment","src":"3269:19:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3280:3:20"},{"name":"_2","nodeType":"YulIdentifier","src":"3285:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3276:3:20"},"nodeType":"YulFunctionCall","src":"3276:12:20"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3269:3:20"}]}]},"pre":{"nodeType":"YulBlock","src":"3247:3:20","statements":[]},"src":"3243:142:20"},{"nodeType":"YulAssignment","src":"3394:14:20","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3403:5:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3394:5:20"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2790:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2798:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2806:5:20","type":""}],"src":"2752:662:20"},{"body":{"nodeType":"YulBlock","src":"3493:332:20","statements":[{"body":{"nodeType":"YulBlock","src":"3537:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3539:16:20"},"nodeType":"YulFunctionCall","src":"3539:18:20"},"nodeType":"YulExpressionStatement","src":"3539:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3509:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3517:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3506:2:20"},"nodeType":"YulFunctionCall","src":"3506:30:20"},"nodeType":"YulIf","src":"3503:56:20"},{"nodeType":"YulAssignment","src":"3568:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3605:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3613:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3601:3:20"},"nodeType":"YulFunctionCall","src":"3601:15:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3622:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3618:3:20"},"nodeType":"YulFunctionCall","src":"3618:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3597:3:20"},"nodeType":"YulFunctionCall","src":"3597:29:20"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:20"},"nodeType":"YulFunctionCall","src":"3593:40:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3577:15:20"},"nodeType":"YulFunctionCall","src":"3577:57:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3568:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3650:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"3657:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3643:6:20"},"nodeType":"YulFunctionCall","src":"3643:21:20"},"nodeType":"YulExpressionStatement","src":"3643:21:20"},{"body":{"nodeType":"YulBlock","src":"3702:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3711:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3714:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3704:6:20"},"nodeType":"YulFunctionCall","src":"3704:12:20"},"nodeType":"YulExpressionStatement","src":"3704:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3683:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"3688:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:20"},"nodeType":"YulFunctionCall","src":"3679:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"3697:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3676:2:20"},"nodeType":"YulFunctionCall","src":"3676:25:20"},"nodeType":"YulIf","src":"3673:45:20"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3744:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3751:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3740:3:20"},"nodeType":"YulFunctionCall","src":"3740:16:20"},{"name":"src","nodeType":"YulIdentifier","src":"3758:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"3763:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3727:12:20"},"nodeType":"YulFunctionCall","src":"3727:43:20"},"nodeType":"YulExpressionStatement","src":"3727:43:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3794:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"3801:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:20"},"nodeType":"YulFunctionCall","src":"3790:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3786:3:20"},"nodeType":"YulFunctionCall","src":"3786:29:20"},{"kind":"number","nodeType":"YulLiteral","src":"3817:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3779:6:20"},"nodeType":"YulFunctionCall","src":"3779:40:20"},"nodeType":"YulExpressionStatement","src":"3779:40:20"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3462:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"3467:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3475:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3483:5:20","type":""}],"src":"3419:406:20"},{"body":{"nodeType":"YulBlock","src":"3882:168:20","statements":[{"body":{"nodeType":"YulBlock","src":"3931:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3943:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3933:6:20"},"nodeType":"YulFunctionCall","src":"3933:12:20"},"nodeType":"YulExpressionStatement","src":"3933:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3910:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3918:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3906:3:20"},"nodeType":"YulFunctionCall","src":"3906:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"3925:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3902:3:20"},"nodeType":"YulFunctionCall","src":"3902:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3895:6:20"},"nodeType":"YulFunctionCall","src":"3895:35:20"},"nodeType":"YulIf","src":"3892:55:20"},{"nodeType":"YulAssignment","src":"3956:88:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4003:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4011:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:20"},"nodeType":"YulFunctionCall","src":"3999:17:20"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4031:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4018:12:20"},"nodeType":"YulFunctionCall","src":"4018:20:20"},{"name":"end","nodeType":"YulIdentifier","src":"4040:3:20"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"3965:33:20"},"nodeType":"YulFunctionCall","src":"3965:79:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3956:5:20"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3856:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3864:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3872:5:20","type":""}],"src":"3830:220:20"},{"body":{"nodeType":"YulBlock","src":"4252:746:20","statements":[{"body":{"nodeType":"YulBlock","src":"4299:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4308:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4311:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4301:6:20"},"nodeType":"YulFunctionCall","src":"4301:12:20"},"nodeType":"YulExpressionStatement","src":"4301:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4273:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4282:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4269:3:20"},"nodeType":"YulFunctionCall","src":"4269:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4294:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4265:3:20"},"nodeType":"YulFunctionCall","src":"4265:33:20"},"nodeType":"YulIf","src":"4262:53:20"},{"nodeType":"YulAssignment","src":"4324:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4353:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4334:18:20"},"nodeType":"YulFunctionCall","src":"4334:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4324:6:20"}]},{"nodeType":"YulAssignment","src":"4372:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4405:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4416:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4401:3:20"},"nodeType":"YulFunctionCall","src":"4401:18:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4382:18:20"},"nodeType":"YulFunctionCall","src":"4382:38:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4372:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4429:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4460:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4471:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4456:3:20"},"nodeType":"YulFunctionCall","src":"4456:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4443:12:20"},"nodeType":"YulFunctionCall","src":"4443:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4433:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4484:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4494:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4488:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4539:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4548:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4551:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4541:6:20"},"nodeType":"YulFunctionCall","src":"4541:12:20"},"nodeType":"YulExpressionStatement","src":"4541:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4527:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"4535:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4524:2:20"},"nodeType":"YulFunctionCall","src":"4524:14:20"},"nodeType":"YulIf","src":"4521:34:20"},{"nodeType":"YulAssignment","src":"4564:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4607:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4618:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4603:3:20"},"nodeType":"YulFunctionCall","src":"4603:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4627:7:20"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4574:28:20"},"nodeType":"YulFunctionCall","src":"4574:61:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4564:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4644:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4677:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4688:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4673:3:20"},"nodeType":"YulFunctionCall","src":"4673:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4660:12:20"},"nodeType":"YulFunctionCall","src":"4660:32:20"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4648:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4721:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4730:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4733:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4723:6:20"},"nodeType":"YulFunctionCall","src":"4723:12:20"},"nodeType":"YulExpressionStatement","src":"4723:12:20"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4707:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"4717:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4704:2:20"},"nodeType":"YulFunctionCall","src":"4704:16:20"},"nodeType":"YulIf","src":"4701:36:20"},{"nodeType":"YulAssignment","src":"4746:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4789:9:20"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4800:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4785:3:20"},"nodeType":"YulFunctionCall","src":"4785:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:20"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4756:28:20"},"nodeType":"YulFunctionCall","src":"4756:63:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4746:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4828:49:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4861:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4872:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4857:3:20"},"nodeType":"YulFunctionCall","src":"4857:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4844:12:20"},"nodeType":"YulFunctionCall","src":"4844:33:20"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4832:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4906:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4915:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4918:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4908:6:20"},"nodeType":"YulFunctionCall","src":"4908:12:20"},"nodeType":"YulExpressionStatement","src":"4908:12:20"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4892:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"4902:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4889:2:20"},"nodeType":"YulFunctionCall","src":"4889:16:20"},"nodeType":"YulIf","src":"4886:36:20"},{"nodeType":"YulAssignment","src":"4931:61:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4962:9:20"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4973:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4958:3:20"},"nodeType":"YulFunctionCall","src":"4958:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4984:7:20"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4941:16:20"},"nodeType":"YulFunctionCall","src":"4941:51:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4931:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4186:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4197:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4209:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4217:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4225:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4233:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4241:6:20","type":""}],"src":"4055:943:20"},{"body":{"nodeType":"YulBlock","src":"5140:1009:20","statements":[{"body":{"nodeType":"YulBlock","src":"5186:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5195:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5198:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5188:6:20"},"nodeType":"YulFunctionCall","src":"5188:12:20"},"nodeType":"YulExpressionStatement","src":"5188:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5161:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5170:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5157:3:20"},"nodeType":"YulFunctionCall","src":"5157:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5153:3:20"},"nodeType":"YulFunctionCall","src":"5153:32:20"},"nodeType":"YulIf","src":"5150:52:20"},{"nodeType":"YulVariableDeclaration","src":"5211:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5238:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5225:12:20"},"nodeType":"YulFunctionCall","src":"5225:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5215:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5257:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5267:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5261:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5312:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5321:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5324:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5314:6:20"},"nodeType":"YulFunctionCall","src":"5314:12:20"},"nodeType":"YulExpressionStatement","src":"5314:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5300:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"5308:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5297:2:20"},"nodeType":"YulFunctionCall","src":"5297:14:20"},"nodeType":"YulIf","src":"5294:34:20"},{"nodeType":"YulVariableDeclaration","src":"5337:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5351:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5362:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5347:3:20"},"nodeType":"YulFunctionCall","src":"5347:22:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5341:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5417:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5426:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5429:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5419:6:20"},"nodeType":"YulFunctionCall","src":"5419:12:20"},"nodeType":"YulExpressionStatement","src":"5419:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5396:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"5400:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5392:3:20"},"nodeType":"YulFunctionCall","src":"5392:13:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5407:7:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5388:3:20"},"nodeType":"YulFunctionCall","src":"5388:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5381:6:20"},"nodeType":"YulFunctionCall","src":"5381:35:20"},"nodeType":"YulIf","src":"5378:55:20"},{"nodeType":"YulVariableDeclaration","src":"5442:26:20","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5465:2:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5452:12:20"},"nodeType":"YulFunctionCall","src":"5452:16:20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5446:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5477:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:4:20","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5481:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5500:71:20","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5567:2:20"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5527:39:20"},"nodeType":"YulFunctionCall","src":"5527:43:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5511:15:20"},"nodeType":"YulFunctionCall","src":"5511:60:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5504:3:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5580:16:20","value":{"name":"dst","nodeType":"YulIdentifier","src":"5593:3:20"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"5584:5:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5612:3:20"},{"name":"_3","nodeType":"YulIdentifier","src":"5617:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5605:6:20"},"nodeType":"YulFunctionCall","src":"5605:15:20"},"nodeType":"YulExpressionStatement","src":"5605:15:20"},{"nodeType":"YulAssignment","src":"5629:19:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5640:3:20"},{"name":"_4","nodeType":"YulIdentifier","src":"5645:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5636:3:20"},"nodeType":"YulFunctionCall","src":"5636:12:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5629:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"5657:42:20","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5679:2:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5687:1:20","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5690:2:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5683:3:20"},"nodeType":"YulFunctionCall","src":"5683:10:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5675:3:20"},"nodeType":"YulFunctionCall","src":"5675:19:20"},{"name":"_4","nodeType":"YulIdentifier","src":"5696:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5671:3:20"},"nodeType":"YulFunctionCall","src":"5671:28:20"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5661:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5731:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5740:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5743:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5733:6:20"},"nodeType":"YulFunctionCall","src":"5733:12:20"},"nodeType":"YulExpressionStatement","src":"5733:12:20"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5714:6:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5722:7:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5711:2:20"},"nodeType":"YulFunctionCall","src":"5711:19:20"},"nodeType":"YulIf","src":"5708:39:20"},{"nodeType":"YulVariableDeclaration","src":"5756:22:20","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5771:2:20"},{"name":"_4","nodeType":"YulIdentifier","src":"5775:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5767:3:20"},"nodeType":"YulFunctionCall","src":"5767:11:20"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5760:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5843:92:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5864:3:20"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5888:3:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5869:18:20"},"nodeType":"YulFunctionCall","src":"5869:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5857:6:20"},"nodeType":"YulFunctionCall","src":"5857:36:20"},"nodeType":"YulExpressionStatement","src":"5857:36:20"},{"nodeType":"YulAssignment","src":"5906:19:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5917:3:20"},{"name":"_4","nodeType":"YulIdentifier","src":"5922:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5913:3:20"},"nodeType":"YulFunctionCall","src":"5913:12:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5906:3:20"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5798:3:20"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5803:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5795:2:20"},"nodeType":"YulFunctionCall","src":"5795:15:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5811:23:20","statements":[{"nodeType":"YulAssignment","src":"5813:19:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5824:3:20"},{"name":"_4","nodeType":"YulIdentifier","src":"5829:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5820:3:20"},"nodeType":"YulFunctionCall","src":"5820:12:20"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5813:3:20"}]}]},"pre":{"nodeType":"YulBlock","src":"5791:3:20","statements":[]},"src":"5787:148:20"},{"nodeType":"YulAssignment","src":"5944:15:20","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5954:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5944:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"5968:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6001:9:20"},{"name":"_4","nodeType":"YulIdentifier","src":"6012:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5997:3:20"},"nodeType":"YulFunctionCall","src":"5997:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5984:12:20"},"nodeType":"YulFunctionCall","src":"5984:32:20"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5972:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6045:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6054:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6057:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6047:6:20"},"nodeType":"YulFunctionCall","src":"6047:12:20"},"nodeType":"YulExpressionStatement","src":"6047:12:20"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6031:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"6041:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6028:2:20"},"nodeType":"YulFunctionCall","src":"6028:16:20"},"nodeType":"YulIf","src":"6025:36:20"},{"nodeType":"YulAssignment","src":"6070:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6113:9:20"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6124:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6109:3:20"},"nodeType":"YulFunctionCall","src":"6109:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6135:7:20"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6080:28:20"},"nodeType":"YulFunctionCall","src":"6080:63:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6070:6:20"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5098:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5109:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5121:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5129:6:20","type":""}],"src":"5003:1146:20"},{"body":{"nodeType":"YulBlock","src":"6215:374:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6225:26:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6245:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6239:5:20"},"nodeType":"YulFunctionCall","src":"6239:12:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6229:6:20","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6267:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"6272:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6260:6:20"},"nodeType":"YulFunctionCall","src":"6260:19:20"},"nodeType":"YulExpressionStatement","src":"6260:19:20"},{"nodeType":"YulVariableDeclaration","src":"6288:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6298:4:20","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6292:2:20","type":""}]},{"nodeType":"YulAssignment","src":"6311:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6322:3:20"},{"name":"_1","nodeType":"YulIdentifier","src":"6327:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6318:3:20"},"nodeType":"YulFunctionCall","src":"6318:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6311:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"6339:28:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6357:5:20"},{"name":"_1","nodeType":"YulIdentifier","src":"6364:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6353:3:20"},"nodeType":"YulFunctionCall","src":"6353:14:20"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6343:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6376:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6385:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6380:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6444:120:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6465:3:20"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6476:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6470:5:20"},"nodeType":"YulFunctionCall","src":"6470:13:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6458:6:20"},"nodeType":"YulFunctionCall","src":"6458:26:20"},"nodeType":"YulExpressionStatement","src":"6458:26:20"},{"nodeType":"YulAssignment","src":"6497:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6508:3:20"},{"name":"_1","nodeType":"YulIdentifier","src":"6513:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6504:3:20"},"nodeType":"YulFunctionCall","src":"6504:12:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6497:3:20"}]},{"nodeType":"YulAssignment","src":"6529:25:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6543:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"6551:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6539:3:20"},"nodeType":"YulFunctionCall","src":"6539:15:20"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6529:6:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6406:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"6409:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6403:2:20"},"nodeType":"YulFunctionCall","src":"6403:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6417:18:20","statements":[{"nodeType":"YulAssignment","src":"6419:14:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6428:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"6431:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6424:3:20"},"nodeType":"YulFunctionCall","src":"6424:9:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6419:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"6399:3:20","statements":[]},"src":"6395:169:20"},{"nodeType":"YulAssignment","src":"6573:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"6580:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6573:3:20"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6192:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6199:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6207:3:20","type":""}],"src":"6154:435:20"},{"body":{"nodeType":"YulBlock","src":"6745:110:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6762:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6773:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6755:6:20"},"nodeType":"YulFunctionCall","src":"6755:21:20"},"nodeType":"YulExpressionStatement","src":"6755:21:20"},{"nodeType":"YulAssignment","src":"6785:64:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6822:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6834:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6845:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6830:3:20"},"nodeType":"YulFunctionCall","src":"6830:18:20"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6793:28:20"},"nodeType":"YulFunctionCall","src":"6793:56:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6785:4:20"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6714:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6725:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6736:4:20","type":""}],"src":"6594:261:20"},{"body":{"nodeType":"YulBlock","src":"6930:116:20","statements":[{"body":{"nodeType":"YulBlock","src":"6976:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6985:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6988:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6978:6:20"},"nodeType":"YulFunctionCall","src":"6978:12:20"},"nodeType":"YulExpressionStatement","src":"6978:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6951:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6960:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6947:3:20"},"nodeType":"YulFunctionCall","src":"6947:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6972:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6943:3:20"},"nodeType":"YulFunctionCall","src":"6943:32:20"},"nodeType":"YulIf","src":"6940:52:20"},{"nodeType":"YulAssignment","src":"7001:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7030:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7011:18:20"},"nodeType":"YulFunctionCall","src":"7011:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7001:6:20"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6896:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6907:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6919:6:20","type":""}],"src":"6860:186:20"},{"body":{"nodeType":"YulBlock","src":"7210:462:20","statements":[{"nodeType":"YulAssignment","src":"7220:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7232:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7243:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7228:3:20"},"nodeType":"YulFunctionCall","src":"7228:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7220:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7263:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7280:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7274:5:20"},"nodeType":"YulFunctionCall","src":"7274:13:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7256:6:20"},"nodeType":"YulFunctionCall","src":"7256:32:20"},"nodeType":"YulExpressionStatement","src":"7256:32:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7308:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7319:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7304:3:20"},"nodeType":"YulFunctionCall","src":"7304:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7336:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7344:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7332:3:20"},"nodeType":"YulFunctionCall","src":"7332:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7326:5:20"},"nodeType":"YulFunctionCall","src":"7326:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7297:6:20"},"nodeType":"YulFunctionCall","src":"7297:54:20"},"nodeType":"YulExpressionStatement","src":"7297:54:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7371:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7382:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7367:3:20"},"nodeType":"YulFunctionCall","src":"7367:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7399:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7407:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7395:3:20"},"nodeType":"YulFunctionCall","src":"7395:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7389:5:20"},"nodeType":"YulFunctionCall","src":"7389:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7360:6:20"},"nodeType":"YulFunctionCall","src":"7360:54:20"},"nodeType":"YulExpressionStatement","src":"7360:54:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7434:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7445:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7430:3:20"},"nodeType":"YulFunctionCall","src":"7430:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7462:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7470:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7458:3:20"},"nodeType":"YulFunctionCall","src":"7458:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7452:5:20"},"nodeType":"YulFunctionCall","src":"7452:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7423:6:20"},"nodeType":"YulFunctionCall","src":"7423:54:20"},"nodeType":"YulExpressionStatement","src":"7423:54:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7497:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7508:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7493:3:20"},"nodeType":"YulFunctionCall","src":"7493:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7525:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7533:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7521:3:20"},"nodeType":"YulFunctionCall","src":"7521:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7515:5:20"},"nodeType":"YulFunctionCall","src":"7515:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7486:6:20"},"nodeType":"YulFunctionCall","src":"7486:54:20"},"nodeType":"YulExpressionStatement","src":"7486:54:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7560:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7571:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7556:3:20"},"nodeType":"YulFunctionCall","src":"7556:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7588:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7596:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7584:3:20"},"nodeType":"YulFunctionCall","src":"7584:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7578:5:20"},"nodeType":"YulFunctionCall","src":"7578:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7549:6:20"},"nodeType":"YulFunctionCall","src":"7549:54:20"},"nodeType":"YulExpressionStatement","src":"7549:54:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7623:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7634:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7619:3:20"},"nodeType":"YulFunctionCall","src":"7619:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7651:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7659:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7647:3:20"},"nodeType":"YulFunctionCall","src":"7647:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7641:5:20"},"nodeType":"YulFunctionCall","src":"7641:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7612:6:20"},"nodeType":"YulFunctionCall","src":"7612:54:20"},"nodeType":"YulExpressionStatement","src":"7612:54:20"}]},"name":"abi_encode_tuple_t_struct$_PlayerStats_$7574_memory_ptr__to_t_struct$_PlayerStats_$7574_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7179:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7190:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7201:4:20","type":""}],"src":"7051:621:20"},{"body":{"nodeType":"YulBlock","src":"7757:370:20","statements":[{"body":{"nodeType":"YulBlock","src":"7803:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7812:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7815:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7805:6:20"},"nodeType":"YulFunctionCall","src":"7805:12:20"},"nodeType":"YulExpressionStatement","src":"7805:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7778:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7787:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7774:3:20"},"nodeType":"YulFunctionCall","src":"7774:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7799:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7770:3:20"},"nodeType":"YulFunctionCall","src":"7770:32:20"},"nodeType":"YulIf","src":"7767:52:20"},{"nodeType":"YulVariableDeclaration","src":"7828:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7855:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7842:12:20"},"nodeType":"YulFunctionCall","src":"7842:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7832:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7908:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7917:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7920:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7910:6:20"},"nodeType":"YulFunctionCall","src":"7910:12:20"},"nodeType":"YulExpressionStatement","src":"7910:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7880:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7888:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7877:2:20"},"nodeType":"YulFunctionCall","src":"7877:30:20"},"nodeType":"YulIf","src":"7874:50:20"},{"nodeType":"YulVariableDeclaration","src":"7933:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7947:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7958:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:20"},"nodeType":"YulFunctionCall","src":"7943:22:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7937:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8013:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8022:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8025:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8015:6:20"},"nodeType":"YulFunctionCall","src":"8015:12:20"},"nodeType":"YulExpressionStatement","src":"8015:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7992:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"7996:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7988:3:20"},"nodeType":"YulFunctionCall","src":"7988:13:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8003:7:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7984:3:20"},"nodeType":"YulFunctionCall","src":"7984:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7977:6:20"},"nodeType":"YulFunctionCall","src":"7977:35:20"},"nodeType":"YulIf","src":"7974:55:20"},{"nodeType":"YulAssignment","src":"8038:83:20","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8086:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"8090:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8082:3:20"},"nodeType":"YulFunctionCall","src":"8082:11:20"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8108:2:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8095:12:20"},"nodeType":"YulFunctionCall","src":"8095:16:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8113:7:20"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"8048:33:20"},"nodeType":"YulFunctionCall","src":"8048:73:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8038:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7723:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7734:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7746:6:20","type":""}],"src":"7677:450:20"},{"body":{"nodeType":"YulBlock","src":"8233:102:20","statements":[{"nodeType":"YulAssignment","src":"8243:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8255:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8266:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8251:3:20"},"nodeType":"YulFunctionCall","src":"8251:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8243:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8285:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8300:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8316:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8321:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8312:3:20"},"nodeType":"YulFunctionCall","src":"8312:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"8325:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8308:3:20"},"nodeType":"YulFunctionCall","src":"8308:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8296:3:20"},"nodeType":"YulFunctionCall","src":"8296:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8278:6:20"},"nodeType":"YulFunctionCall","src":"8278:51:20"},"nodeType":"YulExpressionStatement","src":"8278:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8202:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8213:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8224:4:20","type":""}],"src":"8132:203:20"},{"body":{"nodeType":"YulBlock","src":"8424:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"8470:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8479:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8482:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8472:6:20"},"nodeType":"YulFunctionCall","src":"8472:12:20"},"nodeType":"YulExpressionStatement","src":"8472:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8445:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8454:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8441:3:20"},"nodeType":"YulFunctionCall","src":"8441:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8466:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8437:3:20"},"nodeType":"YulFunctionCall","src":"8437:32:20"},"nodeType":"YulIf","src":"8434:52:20"},{"nodeType":"YulAssignment","src":"8495:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8524:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8505:18:20"},"nodeType":"YulFunctionCall","src":"8505:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8495:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"8543:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8573:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8584:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8569:3:20"},"nodeType":"YulFunctionCall","src":"8569:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8556:12:20"},"nodeType":"YulFunctionCall","src":"8556:32:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8547:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8641:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8650:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8653:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8643:6:20"},"nodeType":"YulFunctionCall","src":"8643:12:20"},"nodeType":"YulExpressionStatement","src":"8643:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8610:5:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8631:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8624:6:20"},"nodeType":"YulFunctionCall","src":"8624:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8617:6:20"},"nodeType":"YulFunctionCall","src":"8617:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8607:2:20"},"nodeType":"YulFunctionCall","src":"8607:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8600:6:20"},"nodeType":"YulFunctionCall","src":"8600:40:20"},"nodeType":"YulIf","src":"8597:60:20"},{"nodeType":"YulAssignment","src":"8666:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"8676:5:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8666:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8382:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8393:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8405:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8413:6:20","type":""}],"src":"8340:347:20"},{"body":{"nodeType":"YulBlock","src":"8961:338:20","statements":[{"nodeType":"YulAssignment","src":"8971:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8983:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8994:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8979:3:20"},"nodeType":"YulFunctionCall","src":"8979:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8971:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9014:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"9025:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9007:6:20"},"nodeType":"YulFunctionCall","src":"9007:25:20"},"nodeType":"YulExpressionStatement","src":"9007:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9052:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9063:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9048:3:20"},"nodeType":"YulFunctionCall","src":"9048:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"9068:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9041:6:20"},"nodeType":"YulFunctionCall","src":"9041:34:20"},"nodeType":"YulExpressionStatement","src":"9041:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9095:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9106:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9091:3:20"},"nodeType":"YulFunctionCall","src":"9091:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"9111:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9084:6:20"},"nodeType":"YulFunctionCall","src":"9084:34:20"},"nodeType":"YulExpressionStatement","src":"9084:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9138:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9149:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9134:3:20"},"nodeType":"YulFunctionCall","src":"9134:18:20"},{"name":"value3","nodeType":"YulIdentifier","src":"9154:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9127:6:20"},"nodeType":"YulFunctionCall","src":"9127:34:20"},"nodeType":"YulExpressionStatement","src":"9127:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9181:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9192:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9177:3:20"},"nodeType":"YulFunctionCall","src":"9177:19:20"},{"name":"value4","nodeType":"YulIdentifier","src":"9198:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9170:6:20"},"nodeType":"YulFunctionCall","src":"9170:35:20"},"nodeType":"YulExpressionStatement","src":"9170:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9225:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9236:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9221:3:20"},"nodeType":"YulFunctionCall","src":"9221:19:20"},{"name":"value5","nodeType":"YulIdentifier","src":"9242:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9214:6:20"},"nodeType":"YulFunctionCall","src":"9214:35:20"},"nodeType":"YulExpressionStatement","src":"9214:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9269:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9280:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9265:3:20"},"nodeType":"YulFunctionCall","src":"9265:19:20"},{"name":"value6","nodeType":"YulIdentifier","src":"9286:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9258:6:20"},"nodeType":"YulFunctionCall","src":"9258:35:20"},"nodeType":"YulExpressionStatement","src":"9258:35:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8882:9:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8893:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8901:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8909:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8917:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8925:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8933:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8941:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8952:4:20","type":""}],"src":"8692:607:20"},{"body":{"nodeType":"YulBlock","src":"9391:173:20","statements":[{"body":{"nodeType":"YulBlock","src":"9437:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9446:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9449:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9439:6:20"},"nodeType":"YulFunctionCall","src":"9439:12:20"},"nodeType":"YulExpressionStatement","src":"9439:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9412:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9421:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9408:3:20"},"nodeType":"YulFunctionCall","src":"9408:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9433:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9404:3:20"},"nodeType":"YulFunctionCall","src":"9404:32:20"},"nodeType":"YulIf","src":"9401:52:20"},{"nodeType":"YulAssignment","src":"9462:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9491:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9472:18:20"},"nodeType":"YulFunctionCall","src":"9472:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9462:6:20"}]},{"nodeType":"YulAssignment","src":"9510:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9543:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9554:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9539:3:20"},"nodeType":"YulFunctionCall","src":"9539:18:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9520:18:20"},"nodeType":"YulFunctionCall","src":"9520:38:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9510:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9349:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9360:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9372:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9380:6:20","type":""}],"src":"9304:260:20"},{"body":{"nodeType":"YulBlock","src":"9716:459:20","statements":[{"body":{"nodeType":"YulBlock","src":"9763:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9772:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9775:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9765:6:20"},"nodeType":"YulFunctionCall","src":"9765:12:20"},"nodeType":"YulExpressionStatement","src":"9765:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9737:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9746:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9733:3:20"},"nodeType":"YulFunctionCall","src":"9733:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9758:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9729:3:20"},"nodeType":"YulFunctionCall","src":"9729:33:20"},"nodeType":"YulIf","src":"9726:53:20"},{"nodeType":"YulAssignment","src":"9788:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9817:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9798:18:20"},"nodeType":"YulFunctionCall","src":"9798:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9788:6:20"}]},{"nodeType":"YulAssignment","src":"9836:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9880:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:20"},"nodeType":"YulFunctionCall","src":"9865:18:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9846:18:20"},"nodeType":"YulFunctionCall","src":"9846:38:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9836:6:20"}]},{"nodeType":"YulAssignment","src":"9893:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9920:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9931:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9916:3:20"},"nodeType":"YulFunctionCall","src":"9916:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9903:12:20"},"nodeType":"YulFunctionCall","src":"9903:32:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9893:6:20"}]},{"nodeType":"YulAssignment","src":"9944:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9971:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9982:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9967:3:20"},"nodeType":"YulFunctionCall","src":"9967:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9954:12:20"},"nodeType":"YulFunctionCall","src":"9954:32:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9944:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"9995:47:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10026:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10037:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10022:3:20"},"nodeType":"YulFunctionCall","src":"10022:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10009:12:20"},"nodeType":"YulFunctionCall","src":"10009:33:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9999:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"10085:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10094:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10097:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10087:6:20"},"nodeType":"YulFunctionCall","src":"10087:12:20"},"nodeType":"YulExpressionStatement","src":"10087:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10057:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10065:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10054:2:20"},"nodeType":"YulFunctionCall","src":"10054:30:20"},"nodeType":"YulIf","src":"10051:50:20"},{"nodeType":"YulAssignment","src":"10110:59:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10141:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10152:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10137:3:20"},"nodeType":"YulFunctionCall","src":"10137:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10161:7:20"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"10120:16:20"},"nodeType":"YulFunctionCall","src":"10120:49:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10110:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9650:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9661:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9673:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9681:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9689:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9697:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9705:6:20","type":""}],"src":"9569:606:20"},{"body":{"nodeType":"YulBlock","src":"10235:325:20","statements":[{"nodeType":"YulAssignment","src":"10245:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10259:1:20","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"10262:4:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10255:3:20"},"nodeType":"YulFunctionCall","src":"10255:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10245:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"10276:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10306:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"10312:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10302:3:20"},"nodeType":"YulFunctionCall","src":"10302:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10280:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"10353:31:20","statements":[{"nodeType":"YulAssignment","src":"10355:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10369:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10377:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10365:3:20"},"nodeType":"YulFunctionCall","src":"10365:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10355:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10333:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10326:6:20"},"nodeType":"YulFunctionCall","src":"10326:26:20"},"nodeType":"YulIf","src":"10323:61:20"},{"body":{"nodeType":"YulBlock","src":"10443:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10464:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10471:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10476:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10467:3:20"},"nodeType":"YulFunctionCall","src":"10467:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10457:6:20"},"nodeType":"YulFunctionCall","src":"10457:31:20"},"nodeType":"YulExpressionStatement","src":"10457:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10508:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10511:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10501:6:20"},"nodeType":"YulFunctionCall","src":"10501:15:20"},"nodeType":"YulExpressionStatement","src":"10501:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10536:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10539:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10529:6:20"},"nodeType":"YulFunctionCall","src":"10529:15:20"},"nodeType":"YulExpressionStatement","src":"10529:15:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10399:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10422:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10430:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10419:2:20"},"nodeType":"YulFunctionCall","src":"10419:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10396:2:20"},"nodeType":"YulFunctionCall","src":"10396:38:20"},"nodeType":"YulIf","src":"10393:161:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10215:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10224:6:20","type":""}],"src":"10180:380:20"},{"body":{"nodeType":"YulBlock","src":"10621:65:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10638:1:20","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"10641:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10631:6:20"},"nodeType":"YulFunctionCall","src":"10631:14:20"},"nodeType":"YulExpressionStatement","src":"10631:14:20"},{"nodeType":"YulAssignment","src":"10654:26:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10672:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10675:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10662:9:20"},"nodeType":"YulFunctionCall","src":"10662:18:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10654:4:20"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10604:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10612:4:20","type":""}],"src":"10565:121:20"},{"body":{"nodeType":"YulBlock","src":"10976:902:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10986:12:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10997:1:20","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"10990:3:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11007:30:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11030:6:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11024:5:20"},"nodeType":"YulFunctionCall","src":"11024:13:20"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"11011:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11046:50:20","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"11086:9:20"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11060:25:20"},"nodeType":"YulFunctionCall","src":"11060:36:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11050:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11105:11:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11115:1:20","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11109:2:20","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11166:126:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11187:3:20"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"11196:9:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11211:3:20","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11207:3:20"},"nodeType":"YulFunctionCall","src":"11207:8:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11192:3:20"},"nodeType":"YulFunctionCall","src":"11192:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11180:6:20"},"nodeType":"YulFunctionCall","src":"11180:37:20"},"nodeType":"YulExpressionStatement","src":"11180:37:20"},{"nodeType":"YulAssignment","src":"11230:52:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11241:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11250:6:20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11272:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11265:6:20"},"nodeType":"YulFunctionCall","src":"11265:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11258:6:20"},"nodeType":"YulFunctionCall","src":"11258:22:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11246:3:20"},"nodeType":"YulFunctionCall","src":"11246:35:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11237:3:20"},"nodeType":"YulFunctionCall","src":"11237:45:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11230:3:20"}]}]},"nodeType":"YulCase","src":"11159:133:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11164:1:20","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11308:349:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11329:1:20","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"11332:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11322:6:20"},"nodeType":"YulFunctionCall","src":"11322:17:20"},"nodeType":"YulExpressionStatement","src":"11322:17:20"},{"nodeType":"YulVariableDeclaration","src":"11352:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11362:4:20","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11356:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11379:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11404:1:20","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"11407:2:20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11394:9:20"},"nodeType":"YulFunctionCall","src":"11394:16:20"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"11383:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11423:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11432:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11427:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"11500:111:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11529:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"11534:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11525:3:20"},"nodeType":"YulFunctionCall","src":"11525:11:20"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"11544:7:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11538:5:20"},"nodeType":"YulFunctionCall","src":"11538:14:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11518:6:20"},"nodeType":"YulFunctionCall","src":"11518:35:20"},"nodeType":"YulExpressionStatement","src":"11518:35:20"},{"nodeType":"YulAssignment","src":"11570:27:20","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"11585:7:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11594:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11581:3:20"},"nodeType":"YulFunctionCall","src":"11581:16:20"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"11570:7:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11457:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"11460:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11454:2:20"},"nodeType":"YulFunctionCall","src":"11454:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11468:19:20","statements":[{"nodeType":"YulAssignment","src":"11470:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11479:1:20"},{"name":"_2","nodeType":"YulIdentifier","src":"11482:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11475:3:20"},"nodeType":"YulFunctionCall","src":"11475:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11470:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"11450:3:20","statements":[]},"src":"11446:165:20"},{"nodeType":"YulAssignment","src":"11624:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11635:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"11640:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11631:3:20"},"nodeType":"YulFunctionCall","src":"11631:16:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11624:3:20"}]}]},"nodeType":"YulCase","src":"11301:356:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11306:1:20","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"11136:9:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11147:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11132:3:20"},"nodeType":"YulFunctionCall","src":"11132:18:20"},"nodeType":"YulSwitch","src":"11125:532:20"},{"nodeType":"YulVariableDeclaration","src":"11666:29:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11688:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11682:5:20"},"nodeType":"YulFunctionCall","src":"11682:13:20"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"11670:8:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11743:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11751:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11739:3:20"},"nodeType":"YulFunctionCall","src":"11739:17:20"},{"name":"ret","nodeType":"YulIdentifier","src":"11758:3:20"},{"name":"length_1","nodeType":"YulIdentifier","src":"11763:8:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11704:34:20"},"nodeType":"YulFunctionCall","src":"11704:68:20"},"nodeType":"YulExpressionStatement","src":"11704:68:20"},{"nodeType":"YulVariableDeclaration","src":"11781:31:20","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"11798:3:20"},{"name":"length_1","nodeType":"YulIdentifier","src":"11803:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11794:3:20"},"nodeType":"YulFunctionCall","src":"11794:18:20"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"11785:5:20","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"11828:5:20"},{"hexValue":"2e6a736f6e","kind":"string","nodeType":"YulLiteral","src":"11835:7:20","type":"","value":".json"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11821:6:20"},"nodeType":"YulFunctionCall","src":"11821:22:20"},"nodeType":"YulExpressionStatement","src":"11821:22:20"},{"nodeType":"YulAssignment","src":"11852:20:20","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"11863:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"11870:1:20","type":"","value":"5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11859:3:20"},"nodeType":"YulFunctionCall","src":"11859:13:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11852:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10944:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10949:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10957:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10968:3:20","type":""}],"src":"10691:1187:20"},{"body":{"nodeType":"YulBlock","src":"12012:175:20","statements":[{"nodeType":"YulAssignment","src":"12022:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12034:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12045:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12030:3:20"},"nodeType":"YulFunctionCall","src":"12030:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12022:4:20"}]},{"nodeType":"YulVariableDeclaration","src":"12057:29:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12075:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12080:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12071:3:20"},"nodeType":"YulFunctionCall","src":"12071:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"12084:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12067:3:20"},"nodeType":"YulFunctionCall","src":"12067:19:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12061:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12102:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12117:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"12125:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12113:3:20"},"nodeType":"YulFunctionCall","src":"12113:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12095:6:20"},"nodeType":"YulFunctionCall","src":"12095:34:20"},"nodeType":"YulExpressionStatement","src":"12095:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12149:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12160:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12145:3:20"},"nodeType":"YulFunctionCall","src":"12145:18:20"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12169:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"12177:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12165:3:20"},"nodeType":"YulFunctionCall","src":"12165:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12138:6:20"},"nodeType":"YulFunctionCall","src":"12138:43:20"},"nodeType":"YulExpressionStatement","src":"12138:43:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11973:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11984:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11992:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12003:4:20","type":""}],"src":"11883:304:20"},{"body":{"nodeType":"YulBlock","src":"12321:119:20","statements":[{"nodeType":"YulAssignment","src":"12331:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12343:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12354:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12339:3:20"},"nodeType":"YulFunctionCall","src":"12339:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12331:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12373:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"12384:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12366:6:20"},"nodeType":"YulFunctionCall","src":"12366:25:20"},"nodeType":"YulExpressionStatement","src":"12366:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12411:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12422:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12407:3:20"},"nodeType":"YulFunctionCall","src":"12407:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"12427:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12400:6:20"},"nodeType":"YulFunctionCall","src":"12400:34:20"},"nodeType":"YulExpressionStatement","src":"12400:34:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12282:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12293:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12301:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12312:4:20","type":""}],"src":"12192:248:20"},{"body":{"nodeType":"YulBlock","src":"12477:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12494:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12501:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12506:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12497:3:20"},"nodeType":"YulFunctionCall","src":"12497:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12487:6:20"},"nodeType":"YulFunctionCall","src":"12487:31:20"},"nodeType":"YulExpressionStatement","src":"12487:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12534:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12537:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12527:6:20"},"nodeType":"YulFunctionCall","src":"12527:15:20"},"nodeType":"YulExpressionStatement","src":"12527:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12558:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12561:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12551:6:20"},"nodeType":"YulFunctionCall","src":"12551:15:20"},"nodeType":"YulExpressionStatement","src":"12551:15:20"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12445:127:20"},{"body":{"nodeType":"YulBlock","src":"12609:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12626:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12633:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12638:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12629:3:20"},"nodeType":"YulFunctionCall","src":"12629:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12619:6:20"},"nodeType":"YulFunctionCall","src":"12619:31:20"},"nodeType":"YulExpressionStatement","src":"12619:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12666:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12669:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12659:6:20"},"nodeType":"YulFunctionCall","src":"12659:15:20"},"nodeType":"YulExpressionStatement","src":"12659:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12690:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12693:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12683:6:20"},"nodeType":"YulFunctionCall","src":"12683:15:20"},"nodeType":"YulExpressionStatement","src":"12683:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12577:127:20"},{"body":{"nodeType":"YulBlock","src":"12756:88:20","statements":[{"body":{"nodeType":"YulBlock","src":"12787:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12789:16:20"},"nodeType":"YulFunctionCall","src":"12789:18:20"},"nodeType":"YulExpressionStatement","src":"12789:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12772:5:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12783:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12779:3:20"},"nodeType":"YulFunctionCall","src":"12779:6:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12769:2:20"},"nodeType":"YulFunctionCall","src":"12769:17:20"},"nodeType":"YulIf","src":"12766:43:20"},{"nodeType":"YulAssignment","src":"12818:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12829:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"12836:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12825:3:20"},"nodeType":"YulFunctionCall","src":"12825:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12818:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12738:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12748:3:20","type":""}],"src":"12709:135:20"},{"body":{"nodeType":"YulBlock","src":"12930:464:20","statements":[{"body":{"nodeType":"YulBlock","src":"12963:425:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12977:11:20","value":{"kind":"number","nodeType":"YulLiteral","src":"12987:1:20","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12981:2:20","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13008:2:20"},{"name":"array","nodeType":"YulIdentifier","src":"13012:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13001:6:20"},"nodeType":"YulFunctionCall","src":"13001:17:20"},"nodeType":"YulExpressionStatement","src":"13001:17:20"},{"nodeType":"YulVariableDeclaration","src":"13031:31:20","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13053:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"13057:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13043:9:20"},"nodeType":"YulFunctionCall","src":"13043:19:20"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13035:4:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13075:57:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13098:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13108:1:20","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13115:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"13127:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13111:3:20"},"nodeType":"YulFunctionCall","src":"13111:19:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13104:3:20"},"nodeType":"YulFunctionCall","src":"13104:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13094:3:20"},"nodeType":"YulFunctionCall","src":"13094:38:20"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"13079:11:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"13169:23:20","statements":[{"nodeType":"YulAssignment","src":"13171:19:20","value":{"name":"data","nodeType":"YulIdentifier","src":"13186:4:20"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13171:11:20"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13151:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"13163:4:20","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13148:2:20"},"nodeType":"YulFunctionCall","src":"13148:20:20"},"nodeType":"YulIf","src":"13145:47:20"},{"nodeType":"YulVariableDeclaration","src":"13205:41:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13219:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13229:1:20","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13236:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13241:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13232:3:20"},"nodeType":"YulFunctionCall","src":"13232:12:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13225:3:20"},"nodeType":"YulFunctionCall","src":"13225:20:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13215:3:20"},"nodeType":"YulFunctionCall","src":"13215:31:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"13209:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13259:24:20","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"13272:11:20"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"13263:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"13357:21:20","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13366:5:20"},{"name":"_1","nodeType":"YulIdentifier","src":"13373:2:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13359:6:20"},"nodeType":"YulFunctionCall","src":"13359:17:20"},"nodeType":"YulExpressionStatement","src":"13359:17:20"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13307:5:20"},{"name":"_2","nodeType":"YulIdentifier","src":"13314:2:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13304:2:20"},"nodeType":"YulFunctionCall","src":"13304:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13318:26:20","statements":[{"nodeType":"YulAssignment","src":"13320:22:20","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13333:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"13340:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13329:3:20"},"nodeType":"YulFunctionCall","src":"13329:13:20"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"13320:5:20"}]}]},"pre":{"nodeType":"YulBlock","src":"13300:3:20","statements":[]},"src":"13296:82:20"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"12946:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12951:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12943:2:20"},"nodeType":"YulFunctionCall","src":"12943:11:20"},"nodeType":"YulIf","src":"12940:448:20"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12902:5:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"12909:3:20","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"12914:10:20","type":""}],"src":"12849:545:20"},{"body":{"nodeType":"YulBlock","src":"13484:81:20","statements":[{"nodeType":"YulAssignment","src":"13494:65:20","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13509:4:20"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13527:1:20","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"13530:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13523:3:20"},"nodeType":"YulFunctionCall","src":"13523:11:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13540:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13536:3:20"},"nodeType":"YulFunctionCall","src":"13536:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13519:3:20"},"nodeType":"YulFunctionCall","src":"13519:24:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13515:3:20"},"nodeType":"YulFunctionCall","src":"13515:29:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13505:3:20"},"nodeType":"YulFunctionCall","src":"13505:40:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13551:1:20","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"13554:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13547:3:20"},"nodeType":"YulFunctionCall","src":"13547:11:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13502:2:20"},"nodeType":"YulFunctionCall","src":"13502:57:20"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"13494:4:20"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13461:4:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"13467:3:20","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"13475:4:20","type":""}],"src":"13399:166:20"},{"body":{"nodeType":"YulBlock","src":"13666:1256:20","statements":[{"nodeType":"YulVariableDeclaration","src":"13676:24:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13696:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13690:5:20"},"nodeType":"YulFunctionCall","src":"13690:10:20"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"13680:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"13743:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13745:16:20"},"nodeType":"YulFunctionCall","src":"13745:18:20"},"nodeType":"YulExpressionStatement","src":"13745:18:20"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13715:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13723:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13712:2:20"},"nodeType":"YulFunctionCall","src":"13712:30:20"},"nodeType":"YulIf","src":"13709:56:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13818:4:20"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13856:4:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13850:5:20"},"nodeType":"YulFunctionCall","src":"13850:11:20"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"13824:25:20"},"nodeType":"YulFunctionCall","src":"13824:38:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"13864:6:20"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"13774:43:20"},"nodeType":"YulFunctionCall","src":"13774:97:20"},"nodeType":"YulExpressionStatement","src":"13774:97:20"},{"nodeType":"YulVariableDeclaration","src":"13880:18:20","value":{"kind":"number","nodeType":"YulLiteral","src":"13897:1:20","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"13884:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13907:23:20","value":{"kind":"number","nodeType":"YulLiteral","src":"13926:4:20","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"13911:11:20","type":""}]},{"nodeType":"YulAssignment","src":"13939:24:20","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13952:11:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13939:9:20"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14009:656:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14023:35:20","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14042:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14054:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14050:3:20"},"nodeType":"YulFunctionCall","src":"14050:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14038:3:20"},"nodeType":"YulFunctionCall","src":"14038:20:20"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14027:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14071:49:20","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14115:4:20"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"14085:29:20"},"nodeType":"YulFunctionCall","src":"14085:35:20"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"14075:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14133:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"14142:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14137:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"14220:172:20","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14245:6:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14263:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14268:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14259:3:20"},"nodeType":"YulFunctionCall","src":"14259:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14253:5:20"},"nodeType":"YulFunctionCall","src":"14253:26:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14238:6:20"},"nodeType":"YulFunctionCall","src":"14238:42:20"},"nodeType":"YulExpressionStatement","src":"14238:42:20"},{"nodeType":"YulAssignment","src":"14297:24:20","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14311:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14319:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14307:3:20"},"nodeType":"YulFunctionCall","src":"14307:14:20"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14297:6:20"}]},{"nodeType":"YulAssignment","src":"14338:40:20","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14355:9:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14366:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14351:3:20"},"nodeType":"YulFunctionCall","src":"14351:27:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14338:9:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14167:1:20"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"14170:7:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14164:2:20"},"nodeType":"YulFunctionCall","src":"14164:14:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14179:28:20","statements":[{"nodeType":"YulAssignment","src":"14181:24:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14190:1:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14193:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14186:3:20"},"nodeType":"YulFunctionCall","src":"14186:19:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14181:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"14160:3:20","statements":[]},"src":"14156:236:20"},{"body":{"nodeType":"YulBlock","src":"14440:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14458:43:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14485:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14490:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14481:3:20"},"nodeType":"YulFunctionCall","src":"14481:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14475:5:20"},"nodeType":"YulFunctionCall","src":"14475:26:20"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"14462:9:20","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14525:6:20"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"14537:9:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14564:1:20","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"14567:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14560:3:20"},"nodeType":"YulFunctionCall","src":"14560:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"14576:3:20","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14556:3:20"},"nodeType":"YulFunctionCall","src":"14556:24:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14586:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14582:3:20"},"nodeType":"YulFunctionCall","src":"14582:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14552:3:20"},"nodeType":"YulFunctionCall","src":"14552:37:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14548:3:20"},"nodeType":"YulFunctionCall","src":"14548:42:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14533:3:20"},"nodeType":"YulFunctionCall","src":"14533:58:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14518:6:20"},"nodeType":"YulFunctionCall","src":"14518:74:20"},"nodeType":"YulExpressionStatement","src":"14518:74:20"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"14411:7:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"14420:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14408:2:20"},"nodeType":"YulFunctionCall","src":"14408:19:20"},"nodeType":"YulIf","src":"14405:201:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14626:4:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14640:1:20","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"14643:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14636:3:20"},"nodeType":"YulFunctionCall","src":"14636:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"14652:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14632:3:20"},"nodeType":"YulFunctionCall","src":"14632:22:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14619:6:20"},"nodeType":"YulFunctionCall","src":"14619:36:20"},"nodeType":"YulExpressionStatement","src":"14619:36:20"}]},"nodeType":"YulCase","src":"14002:663:20","value":{"kind":"number","nodeType":"YulLiteral","src":"14007:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"14682:234:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14696:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"14709:1:20","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14700:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"14745:67:20","statements":[{"nodeType":"YulAssignment","src":"14763:35:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14782:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14787:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14778:3:20"},"nodeType":"YulFunctionCall","src":"14778:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14772:5:20"},"nodeType":"YulFunctionCall","src":"14772:26:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14763:5:20"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"14726:6:20"},"nodeType":"YulIf","src":"14723:89:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14832:4:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14891:5:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"14898:6:20"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"14838:52:20"},"nodeType":"YulFunctionCall","src":"14838:67:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14825:6:20"},"nodeType":"YulFunctionCall","src":"14825:81:20"},"nodeType":"YulExpressionStatement","src":"14825:81:20"}]},"nodeType":"YulCase","src":"14674:242:20","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13982:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13990:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13979:2:20"},"nodeType":"YulFunctionCall","src":"13979:14:20"},"nodeType":"YulSwitch","src":"13972:944:20"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13651:4:20","type":""},{"name":"src","nodeType":"YulTypedName","src":"13657:3:20","type":""}],"src":"13570:1352:20"},{"body":{"nodeType":"YulBlock","src":"15101:179:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15118:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15129:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15111:6:20"},"nodeType":"YulFunctionCall","src":"15111:21:20"},"nodeType":"YulExpressionStatement","src":"15111:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15152:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15163:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15148:3:20"},"nodeType":"YulFunctionCall","src":"15148:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"15168:2:20","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15141:6:20"},"nodeType":"YulFunctionCall","src":"15141:30:20"},"nodeType":"YulExpressionStatement","src":"15141:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15191:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15202:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15187:3:20"},"nodeType":"YulFunctionCall","src":"15187:18:20"},{"hexValue":"4e6f7420617574686f72697a656420746f206d696e742074726f706879","kind":"string","nodeType":"YulLiteral","src":"15207:31:20","type":"","value":"Not authorized to mint trophy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15180:6:20"},"nodeType":"YulFunctionCall","src":"15180:59:20"},"nodeType":"YulExpressionStatement","src":"15180:59:20"},{"nodeType":"YulAssignment","src":"15248:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15260:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15271:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15256:3:20"},"nodeType":"YulFunctionCall","src":"15256:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15248:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e82d83d04a32c883bf9bfef223707a943ac73536532cd4da086581398f1d0a6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15078:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15092:4:20","type":""}],"src":"14927:353:20"},{"body":{"nodeType":"YulBlock","src":"15317:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15334:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15341:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15346:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15337:3:20"},"nodeType":"YulFunctionCall","src":"15337:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15327:6:20"},"nodeType":"YulFunctionCall","src":"15327:31:20"},"nodeType":"YulExpressionStatement","src":"15327:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15374:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15377:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15367:6:20"},"nodeType":"YulFunctionCall","src":"15367:15:20"},"nodeType":"YulExpressionStatement","src":"15367:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15398:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15401:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15391:6:20"},"nodeType":"YulFunctionCall","src":"15391:15:20"},"nodeType":"YulExpressionStatement","src":"15391:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15285:127:20"},{"body":{"nodeType":"YulBlock","src":"15466:79:20","statements":[{"nodeType":"YulAssignment","src":"15476:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15488:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"15491:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15484:3:20"},"nodeType":"YulFunctionCall","src":"15484:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"15476:4:20"}]},{"body":{"nodeType":"YulBlock","src":"15517:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15519:16:20"},"nodeType":"YulFunctionCall","src":"15519:18:20"},"nodeType":"YulExpressionStatement","src":"15519:18:20"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"15508:4:20"},{"name":"x","nodeType":"YulIdentifier","src":"15514:1:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15505:2:20"},"nodeType":"YulFunctionCall","src":"15505:11:20"},"nodeType":"YulIf","src":"15502:37:20"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15448:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"15451:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15457:4:20","type":""}],"src":"15417:128:20"},{"body":{"nodeType":"YulBlock","src":"15598:77:20","statements":[{"nodeType":"YulAssignment","src":"15608:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15619:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"15622:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15615:3:20"},"nodeType":"YulFunctionCall","src":"15615:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15608:3:20"}]},{"body":{"nodeType":"YulBlock","src":"15647:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15649:16:20"},"nodeType":"YulFunctionCall","src":"15649:18:20"},"nodeType":"YulExpressionStatement","src":"15649:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15639:1:20"},{"name":"sum","nodeType":"YulIdentifier","src":"15642:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15636:2:20"},"nodeType":"YulFunctionCall","src":"15636:10:20"},"nodeType":"YulIf","src":"15633:36:20"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15581:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"15584:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15590:3:20","type":""}],"src":"15550:125:20"},{"body":{"nodeType":"YulBlock","src":"15865:232:20","statements":[{"nodeType":"YulAssignment","src":"15875:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15887:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15898:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15883:3:20"},"nodeType":"YulFunctionCall","src":"15883:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15875:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15918:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15933:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15949:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15954:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15945:3:20"},"nodeType":"YulFunctionCall","src":"15945:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"15958:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15941:3:20"},"nodeType":"YulFunctionCall","src":"15941:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15929:3:20"},"nodeType":"YulFunctionCall","src":"15929:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15911:6:20"},"nodeType":"YulFunctionCall","src":"15911:51:20"},"nodeType":"YulExpressionStatement","src":"15911:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15982:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15993:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15978:3:20"},"nodeType":"YulFunctionCall","src":"15978:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"15998:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15971:6:20"},"nodeType":"YulFunctionCall","src":"15971:34:20"},"nodeType":"YulExpressionStatement","src":"15971:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16025:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16036:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16021:3:20"},"nodeType":"YulFunctionCall","src":"16021:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"16041:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16014:6:20"},"nodeType":"YulFunctionCall","src":"16014:34:20"},"nodeType":"YulExpressionStatement","src":"16014:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16068:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16079:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16064:3:20"},"nodeType":"YulFunctionCall","src":"16064:18:20"},{"name":"value3","nodeType":"YulIdentifier","src":"16084:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16057:6:20"},"nodeType":"YulFunctionCall","src":"16057:34:20"},"nodeType":"YulExpressionStatement","src":"16057:34:20"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15810:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15821:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15829:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15837:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15845:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15856:4:20","type":""}],"src":"15680:417:20"},{"body":{"nodeType":"YulBlock","src":"16331:236:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16348:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16359:2:20","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16341:6:20"},"nodeType":"YulFunctionCall","src":"16341:21:20"},"nodeType":"YulExpressionStatement","src":"16341:21:20"},{"nodeType":"YulVariableDeclaration","src":"16371:70:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16414:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16426:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16437:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16422:3:20"},"nodeType":"YulFunctionCall","src":"16422:18:20"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"16385:28:20"},"nodeType":"YulFunctionCall","src":"16385:56:20"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16375:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16461:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16472:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16457:3:20"},"nodeType":"YulFunctionCall","src":"16457:18:20"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"16481:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"16489:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16477:3:20"},"nodeType":"YulFunctionCall","src":"16477:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16450:6:20"},"nodeType":"YulFunctionCall","src":"16450:50:20"},"nodeType":"YulExpressionStatement","src":"16450:50:20"},{"nodeType":"YulAssignment","src":"16509:52:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16546:6:20"},{"name":"tail_1","nodeType":"YulIdentifier","src":"16554:6:20"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"16517:28:20"},"nodeType":"YulFunctionCall","src":"16517:44:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16509:4:20"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16292:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16303:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16311:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16322:4:20","type":""}],"src":"16102:465:20"},{"body":{"nodeType":"YulBlock","src":"16803:330:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16813:29:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16831:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16836:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16827:3:20"},"nodeType":"YulFunctionCall","src":"16827:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"16840:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16823:3:20"},"nodeType":"YulFunctionCall","src":"16823:19:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16817:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16858:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16873:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"16881:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16869:3:20"},"nodeType":"YulFunctionCall","src":"16869:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16851:6:20"},"nodeType":"YulFunctionCall","src":"16851:34:20"},"nodeType":"YulExpressionStatement","src":"16851:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16905:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16916:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16901:3:20"},"nodeType":"YulFunctionCall","src":"16901:18:20"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16925:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"16933:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16921:3:20"},"nodeType":"YulFunctionCall","src":"16921:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16894:6:20"},"nodeType":"YulFunctionCall","src":"16894:43:20"},"nodeType":"YulExpressionStatement","src":"16894:43:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16957:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16968:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16953:3:20"},"nodeType":"YulFunctionCall","src":"16953:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"16973:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16946:6:20"},"nodeType":"YulFunctionCall","src":"16946:34:20"},"nodeType":"YulExpressionStatement","src":"16946:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17000:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17011:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16996:3:20"},"nodeType":"YulFunctionCall","src":"16996:18:20"},{"name":"value3","nodeType":"YulIdentifier","src":"17016:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16989:6:20"},"nodeType":"YulFunctionCall","src":"16989:34:20"},"nodeType":"YulExpressionStatement","src":"16989:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17043:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17054:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17039:3:20"},"nodeType":"YulFunctionCall","src":"17039:19:20"},{"kind":"number","nodeType":"YulLiteral","src":"17060:3:20","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17032:6:20"},"nodeType":"YulFunctionCall","src":"17032:32:20"},"nodeType":"YulExpressionStatement","src":"17032:32:20"},{"nodeType":"YulAssignment","src":"17073:54:20","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17099:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17111:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17122:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17107:3:20"},"nodeType":"YulFunctionCall","src":"17107:19:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"17081:17:20"},"nodeType":"YulFunctionCall","src":"17081:46:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17073:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16740:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16751:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16759:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16767:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16775:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16783:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16794:4:20","type":""}],"src":"16572:561:20"},{"body":{"nodeType":"YulBlock","src":"17218:169:20","statements":[{"body":{"nodeType":"YulBlock","src":"17264:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17273:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17276:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17266:6:20"},"nodeType":"YulFunctionCall","src":"17266:12:20"},"nodeType":"YulExpressionStatement","src":"17266:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17239:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"17248:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17235:3:20"},"nodeType":"YulFunctionCall","src":"17235:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"17260:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17231:3:20"},"nodeType":"YulFunctionCall","src":"17231:32:20"},"nodeType":"YulIf","src":"17228:52:20"},{"nodeType":"YulVariableDeclaration","src":"17289:29:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17308:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17302:5:20"},"nodeType":"YulFunctionCall","src":"17302:16:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17293:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17351:5:20"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"17327:23:20"},"nodeType":"YulFunctionCall","src":"17327:30:20"},"nodeType":"YulExpressionStatement","src":"17327:30:20"},{"nodeType":"YulAssignment","src":"17366:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"17376:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17366:6:20"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17184:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17195:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17207:6:20","type":""}],"src":"17138:249:20"},{"body":{"nodeType":"YulBlock","src":"17723:496:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17733:29:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17751:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17756:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17747:3:20"},"nodeType":"YulFunctionCall","src":"17747:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"17760:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17743:3:20"},"nodeType":"YulFunctionCall","src":"17743:19:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17737:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17778:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17793:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"17801:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17789:3:20"},"nodeType":"YulFunctionCall","src":"17789:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17771:6:20"},"nodeType":"YulFunctionCall","src":"17771:34:20"},"nodeType":"YulExpressionStatement","src":"17771:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17825:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17836:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17821:3:20"},"nodeType":"YulFunctionCall","src":"17821:18:20"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17845:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"17853:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17841:3:20"},"nodeType":"YulFunctionCall","src":"17841:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17814:6:20"},"nodeType":"YulFunctionCall","src":"17814:43:20"},"nodeType":"YulExpressionStatement","src":"17814:43:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17877:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17888:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17873:3:20"},"nodeType":"YulFunctionCall","src":"17873:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"17893:3:20","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17866:6:20"},"nodeType":"YulFunctionCall","src":"17866:31:20"},"nodeType":"YulExpressionStatement","src":"17866:31:20"},{"nodeType":"YulVariableDeclaration","src":"17906:71:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17949:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17961:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17972:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17957:3:20"},"nodeType":"YulFunctionCall","src":"17957:19:20"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"17920:28:20"},"nodeType":"YulFunctionCall","src":"17920:57:20"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"17910:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17997:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18008:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17993:3:20"},"nodeType":"YulFunctionCall","src":"17993:18:20"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"18017:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"18025:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18013:3:20"},"nodeType":"YulFunctionCall","src":"18013:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17986:6:20"},"nodeType":"YulFunctionCall","src":"17986:50:20"},"nodeType":"YulExpressionStatement","src":"17986:50:20"},{"nodeType":"YulVariableDeclaration","src":"18045:58:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18088:6:20"},{"name":"tail_1","nodeType":"YulIdentifier","src":"18096:6:20"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"18059:28:20"},"nodeType":"YulFunctionCall","src":"18059:44:20"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"18049:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18123:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18134:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18119:3:20"},"nodeType":"YulFunctionCall","src":"18119:19:20"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"18144:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"18152:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18140:3:20"},"nodeType":"YulFunctionCall","src":"18140:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18112:6:20"},"nodeType":"YulFunctionCall","src":"18112:51:20"},"nodeType":"YulExpressionStatement","src":"18112:51:20"},{"nodeType":"YulAssignment","src":"18172:41:20","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18198:6:20"},{"name":"tail_2","nodeType":"YulIdentifier","src":"18206:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"18180:17:20"},"nodeType":"YulFunctionCall","src":"18180:33:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18172:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17660:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17671:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17679:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17687:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17695:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17703:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17714:4:20","type":""}],"src":"17392:827:20"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_struct$_PlayerStats_$7574_memory_ptr__to_t_struct$_PlayerStats_$7574_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        let end_1 := add(ret, length_1)\n        mstore(end_1, \".json\")\n        end := add(end_1, 5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_1e82d83d04a32c883bf9bfef223707a943ac73536532cd4da086581398f1d0a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Not authorized to mint trophy\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101155760003560e01c8063715018a6116100a2578063cdafbbb611610071578063cdafbbb6146102a3578063e985e9c514610328578063efb022231461033b578063f242432a14610343578063f2fde38b1461035657600080fd5b8063715018a61461025a5780638da5cb5b14610262578063a22cb4651461027d578063c90532541461029057600080fd5b80634e1273f4116100e95780634e1273f4146101985780634fd66eae146101b8578063522020a81461022157806355f804b314610234578063662b1c581461024757600080fd5b8062fdd58e1461011a57806301ffc9a7146101405780630e89341c146101635780632eb2c2d614610183575b600080fd5b61012d61012836600461141e565b610369565b6040519081526020015b60405180910390f35b61015361014e36600461145e565b610391565b6040519015158152602001610137565b610176610171366004611482565b6103e1565b60405161013791906114eb565b61019661019136600461164c565b610415565b005b6101ab6101a63660046116f6565b610481565b60405161013791906117f1565b6101cb6101c6366004611804565b610556565b6040516101379190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61019661022f36600461181f565b6105ff565b61019661024236600461181f565b610854565b61019661025536600461141e565b61086c565b6101966108ee565b6003546040516001600160a01b039091168152602001610137565b61019661028b366004611870565b610902565b61019661029e366004611804565b61090d565b6102f36102b1366004611804565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610137565b6101536103363660046118ac565b610a09565b61012d600181565b6101966103513660046118df565b610a37565b610196610364366004611804565b610a96565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806103c257506001600160e01b031982166303a24d0760e21b145b8061038b57506301ffc9a760e01b6001600160e01b031983161461038b565b606060056103ee83610ad4565b6040516020016103ff92919061197e565b6040516020818303038152906040529050919050565b336001600160a01b038616811480159061043657506104348682610a09565b155b1561046c5760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6104798686868686610b67565b505050505050565b606081518351146104b25781518351604051635b05999160e01b815260048101929092526024820152604401610463565b6000835167ffffffffffffffff8111156104ce576104ce6114fe565b6040519080825280602002602001820160405280156104f7578160200160208202803683370190505b50905060005b845181101561054e5760208082028601015161052190602080840287010151610369565b82828151811061053357610533611a15565b602090810291909101015261054781611a41565b90506104fd565b509392505050565b6105966040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260066020818152604092839020835160e081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301546080820152600583015460a082015291015460c082015290565b600061062782604051806040016040528060048152602001636d6f766560e01b815250610bce565b90506000610659836040518060400160405280600c81526020016b7370656369616c5f6d6f766560a01b815250610bce565b90506000610686846040518060400160405280600781526020016667726170706c6560c81b815250610bce565b905060006106b7856040518060400160405280600b81526020016a726f70655f626f756e636560a81b815250610bce565b905060006106e586604051806040016040528060088152602001671adb9bd8dadbdd5d60c21b815250610bce565b90506000610717876040518060400160405280600c81526020016b06368616d70696f6e736869760a41b815250610bce565b905085156107445733600090815260066020526040812080549161073a83611a41565b91905055506107fe565b84156107685733600090815260066020526040812060010180549161073a83611a41565b831561078c5733600090815260066020526040812060020180549161073a83611a41565b82156107b05733600090815260066020526040812060030180549161073a83611a41565b81156107d45733600090815260066020526040812060040180549161073a83611a41565b80156107fe573360009081526006602052604081206005018054916107f883611a41565b91905055505b3360008181526006602081905260409182902042910155517fcf4427363692826484588652734fbdfe66066252ce5898a5c9d20416bcadec5390610843908a906114eb565b60405180910390a250505050505050565b61085c610cad565b60056108688282611aa5565b5050565b610874610cad565b60048054908190600061088683611a41565b91905055506108a683828460405180602001604052806000815250610cda565b826001600160a01b03167f40e0fad75d161c82d49af9e03ec076efa4ff442a3954c75339fd02218374e2dc826040516108e191815260200190565b60405180910390a2505050565b6108f6610cad565b6109006000610d37565b565b610868338383610d89565b6003546001600160a01b031633148061092e5750336001600160a01b038216145b61097a5760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420617574686f72697a656420746f206d696e742074726f7068790000006044820152606401610463565b6109968160018060405180602001604052806000815250610cda565b6001600160a01b03811660009081526006602052604081206005018054916109bd83611a41565b9190505550806001600160a01b03167f40e0fad75d161c82d49af9e03ec076efa4ff442a3954c75339fd02218374e2dc60016040516109fe91815260200190565b60405180910390a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b0386168114801590610a585750610a568682610a09565b155b15610a895760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610463565b6104798686868686610e1f565b610a9e610cad565b6001600160a01b038116610ac857604051631e4fbdf760e01b815260006004820152602401610463565b610ad181610d37565b50565b60606000610ae183610ead565b600101905060008167ffffffffffffffff811115610b0157610b016114fe565b6040519080825280601f01601f191660200182016040528015610b2b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b3557509392505050565b6001600160a01b038416610b9157604051632bfa23e760e11b815260006004820152602401610463565b6001600160a01b038516610bba57604051626a0d4560e21b815260006004820152602401610463565b610bc78585858585610f85565b5050505050565b81518151600091849184911015610bea5760009250505061038b565b60005b81518351610bfb9190611b65565b8111610ca157600160005b8351811015610c7a57838181518110610c2157610c21611a15565b01602001516001600160f81b03191685610c3b8386611b78565b81518110610c4b57610c4b611a15565b01602001516001600160f81b03191614610c685760009150610c7a565b80610c7281611a41565b915050610c06565b508015610c8e57600194505050505061038b565b5080610c9981611a41565b915050610bed565b50600095945050505050565b6003546001600160a01b031633146109005760405163118cdaa760e01b8152336004820152602401610463565b6001600160a01b038416610d0457604051632bfa23e760e11b815260006004820152602401610463565b60408051600180825260208201869052818301908152606082018590526080820190925290610479600087848487610f85565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610db25760405162ced3e160e81b815260006004820152602401610463565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610e4957604051632bfa23e760e11b815260006004820152602401610463565b6001600160a01b038516610e7257604051626a0d4560e21b815260006004820152602401610463565b60408051600180825260208201869052818301908152606082018590526080820190925290610ea48787848487610f85565b50505050505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610eec5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f18576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f3657662386f26fc10000830492506010015b6305f5e1008310610f4e576305f5e100830492506008015b6127108310610f6257612710830492506004015b60648310610f74576064830492506002015b600a831061038b5760010192915050565b610f9185858585610fd8565b6001600160a01b03841615610bc75782513390600103610fca5760208481015190840151610fc38389898585896111f5565b5050610479565b610479818787878787611319565b80518251146110075781518151604051635b05999160e01b815260048101929092526024820152604401610463565b3360005b8351811015611116576020818102858101820151908501909101516001600160a01b038816156110be576000828152602081815260408083206001600160a01b038c16845290915290205481811015611097576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610463565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615611103576000828152602081815260408083206001600160a01b038b168452909152812080548392906110fd908490611b78565b90915550505b50508061110f90611a41565b905061100b565b5082516001036111975760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611188929190918252602082015260400190565b60405180910390a45050610bc7565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516111e6929190611b8b565b60405180910390a45050505050565b6001600160a01b0384163b156104795760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112399089908990889088908890600401611bb9565b6020604051808303816000875af1925050508015611274575060408051601f3d908101601f1916820190925261127191810190611bfe565b60015b6112dd573d8080156112a2576040519150601f19603f3d011682016040523d82523d6000602084013e6112a7565b606091505b5080516000036112d557604051632bfa23e760e11b81526001600160a01b0386166004820152602401610463565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610ea457604051632bfa23e760e11b81526001600160a01b0386166004820152602401610463565b6001600160a01b0384163b156104795760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061135d9089908990889088908890600401611c1b565b6020604051808303816000875af1925050508015611398575060408051601f3d908101601f1916820190925261139591810190611bfe565b60015b6113c6573d8080156112a2576040519150601f19603f3d011682016040523d82523d6000602084013e6112a7565b6001600160e01b0319811663bc197c8160e01b14610ea457604051632bfa23e760e11b81526001600160a01b0386166004820152602401610463565b80356001600160a01b038116811461141957600080fd5b919050565b6000806040838503121561143157600080fd5b61143a83611402565b946020939093013593505050565b6001600160e01b031981168114610ad157600080fd5b60006020828403121561147057600080fd5b813561147b81611448565b9392505050565b60006020828403121561149457600080fd5b5035919050565b60005b838110156114b657818101518382015260200161149e565b50506000910152565b600081518084526114d781602086016020860161149b565b601f01601f19169290920160200192915050565b60208152600061147b60208301846114bf565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561153d5761153d6114fe565b604052919050565b600067ffffffffffffffff82111561155f5761155f6114fe565b5060051b60200190565b600082601f83011261157a57600080fd5b8135602061158f61158a83611545565b611514565b82815260059290921b840181019181810190868411156115ae57600080fd5b8286015b848110156115c957803583529183019183016115b2565b509695505050505050565b600067ffffffffffffffff8311156115ee576115ee6114fe565b611601601f8401601f1916602001611514565b905082815283838301111561161557600080fd5b828260208301376000602084830101529392505050565b600082601f83011261163d57600080fd5b61147b838335602085016115d4565b600080600080600060a0868803121561166457600080fd5b61166d86611402565b945061167b60208701611402565b9350604086013567ffffffffffffffff8082111561169857600080fd5b6116a489838a01611569565b945060608801359150808211156116ba57600080fd5b6116c689838a01611569565b935060808801359150808211156116dc57600080fd5b506116e98882890161162c565b9150509295509295909350565b6000806040838503121561170957600080fd5b823567ffffffffffffffff8082111561172157600080fd5b818501915085601f83011261173557600080fd5b8135602061174561158a83611545565b82815260059290921b8401810191818101908984111561176457600080fd5b948201945b838610156117895761177a86611402565b82529482019490820190611769565b9650508601359250508082111561179f57600080fd5b506117ac85828601611569565b9150509250929050565b600081518084526020808501945080840160005b838110156117e6578151875295820195908201906001016117ca565b509495945050505050565b60208152600061147b60208301846117b6565b60006020828403121561181657600080fd5b61147b82611402565b60006020828403121561183157600080fd5b813567ffffffffffffffff81111561184857600080fd5b8201601f8101841361185957600080fd5b611868848235602084016115d4565b949350505050565b6000806040838503121561188357600080fd5b61188c83611402565b9150602083013580151581146118a157600080fd5b809150509250929050565b600080604083850312156118bf57600080fd5b6118c883611402565b91506118d660208401611402565b90509250929050565b600080600080600060a086880312156118f757600080fd5b61190086611402565b945061190e60208701611402565b93506040860135925060608601359150608086013567ffffffffffffffff81111561193857600080fd5b6116e98882890161162c565b600181811c9082168061195857607f821691505b60208210810361197857634e487b7160e01b600052602260045260246000fd5b50919050565b600080845461198c81611944565b600182811680156119a457600181146119b9576119e8565b60ff19841687528215158302870194506119e8565b8860005260208060002060005b858110156119df5781548a8201529084019082016119c6565b50505082870194505b5050505083516119fc81836020880161149b565b64173539b7b760d91b9101908152600501949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a5357611a53611a2b565b5060010190565b601f821115611aa057600081815260208120601f850160051c81016020861015611a815750805b601f850160051c820191505b8181101561047957828155600101611a8d565b505050565b815167ffffffffffffffff811115611abf57611abf6114fe565b611ad381611acd8454611944565b84611a5a565b602080601f831160018114611b085760008415611af05750858301515b600019600386901b1c1916600185901b178555610479565b600085815260208120601f198616915b82811015611b3757888601518255948401946001909101908401611b18565b5085821015611b555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561038b5761038b611a2b565b8082018082111561038b5761038b611a2b565b604081526000611b9e60408301856117b6565b8281036020840152611bb081856117b6565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611bf3908301846114bf565b979650505050505050565b600060208284031215611c1057600080fd5b815161147b81611448565b6001600160a01b0386811682528516602082015260a060408201819052600090611c47908301866117b6565b8281036060840152611c5981866117b6565b90508281036080840152611c6d81856114bf565b9897505050505050505056fea264697066735822122059c6509a6ee4267197c02201b35c206c942c012ef75fb3a509b3f95eba91dad964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCDAFBBB6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCDAFBBB6 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xEFB02223 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xC9053254 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x4FD66EAE EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x522020A8 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x662B1C58 EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x141E JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x145E JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F6 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x196 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x141E JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST PUSH2 0x196 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x38B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x38B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH2 0x3EE DUP4 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3FF SWAP3 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x436 JUMPI POP PUSH2 0x434 DUP7 DUP3 PUSH2 0xA09 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x479 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB67 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4B2 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CE JUMPI PUSH2 0x4CE PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x54E JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x521 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x369 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x533 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x547 DUP2 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x596 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x627 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x6D6F7665 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x659 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x7370656369616C5F6D6F7665 PUSH1 0xA0 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x686 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x67726170706C65 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B7 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x726F70655F626F756E6365 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6E5 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x1ADB9BD8DADBDD5D PUSH1 0xC2 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x717 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x6368616D70696F6E7368697 PUSH1 0xA4 SHL DUP2 MSTORE POP PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP DUP6 ISZERO PUSH2 0x744 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x7FE JUMP JUMPDEST DUP5 ISZERO PUSH2 0x768 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x78C JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7B0 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x7D4 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP2 PUSH2 0x73A DUP4 PUSH2 0x1A41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7FE JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP2 PUSH2 0x7F8 DUP4 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE MLOAD PUSH32 0xCF4427363692826484588652734FBDFE66066252CE5898A5C9D20416BCADEC53 SWAP1 PUSH2 0x843 SWAP1 DUP11 SWAP1 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85C PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x5 PUSH2 0x868 DUP3 DUP3 PUSH2 0x1AA5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x874 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x886 DUP4 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x8A6 DUP4 DUP3 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDA JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x40E0FAD75D161C82D49AF9E03EC076EFA4FF442A3954C75339FD02218374E2DC DUP3 PUSH1 0x40 MLOAD PUSH2 0x8E1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x900 PUSH1 0x0 PUSH2 0xD37 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x868 CALLER DUP4 DUP4 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x92E JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206D696E742074726F706879000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0x996 DUP2 PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP2 PUSH2 0x9BD DUP4 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x40E0FAD75D161C82D49AF9E03EC076EFA4FF442A3954C75339FD02218374E2DC PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xA58 JUMPI POP PUSH2 0xA56 DUP7 DUP3 PUSH2 0xA09 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0x479 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xA9E PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0xAD1 DUP2 PUSH2 0xD37 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAE1 DUP4 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB01 JUMPI PUSH2 0xB01 PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB2B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xB35 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB91 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH2 0xBC7 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF85 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP5 SWAP2 LT ISZERO PUSH2 0xBEA JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP4 MLOAD PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST DUP2 GT PUSH2 0xCA1 JUMPI PUSH1 0x1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC7A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC21 JUMPI PUSH2 0xC21 PUSH2 0x1A15 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP6 PUSH2 0xC3B DUP4 DUP7 PUSH2 0x1B78 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xC4B JUMPI PUSH2 0xC4B PUSH2 0x1A15 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND EQ PUSH2 0xC68 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xC7A JUMP JUMPDEST DUP1 PUSH2 0xC72 DUP2 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC06 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xC8E JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x38B JUMP JUMPDEST POP DUP1 PUSH2 0xC99 DUP2 PUSH2 0x1A41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBED JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x900 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD04 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x479 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xEA4 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF85 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xEEC JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF18 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xF36 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xF4E JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xF62 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xF74 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x38B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF91 DUP6 DUP6 DUP6 DUP6 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xBC7 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0xFCA JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0xFC3 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11F5 JUMP JUMPDEST POP POP PUSH2 0x479 JUMP JUMPDEST PUSH2 0x479 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1319 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1007 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x463 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1116 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x1103 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x10FD SWAP1 DUP5 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0x110F SWAP1 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP PUSH2 0x100B JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x1197 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1188 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xBC7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x11E6 SWAP3 SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1239 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1274 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1271 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1BFE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12DD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x135D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1398 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1395 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1BFE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13C6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x463 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143A DUP4 PUSH2 0x1402 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x147B DUP2 PUSH2 0x1448 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x149E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x14D7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x149B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x147B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x153D JUMPI PUSH2 0x153D PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155F PUSH2 0x14FE JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x157A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x158F PUSH2 0x158A DUP4 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x15AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x15C9 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x15B2 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15EE PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x1601 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x163D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147B DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166D DUP7 PUSH2 0x1402 JUMP JUMPDEST SWAP5 POP PUSH2 0x167B PUSH1 0x20 DUP8 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A4 DUP10 DUP4 DUP11 ADD PUSH2 0x1569 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C6 DUP10 DUP4 DUP11 ADD PUSH2 0x1569 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E9 DUP9 DUP3 DUP10 ADD PUSH2 0x162C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1745 PUSH2 0x158A DUP4 PUSH2 0x1545 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1789 JUMPI PUSH2 0x177A DUP7 PUSH2 0x1402 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1769 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17AC DUP6 DUP3 DUP7 ADD PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17E6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17CA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x147B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147B DUP3 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1868 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x15D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x188C DUP4 PUSH2 0x1402 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18C8 DUP4 PUSH2 0x1402 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D6 PUSH1 0x20 DUP5 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1900 DUP7 PUSH2 0x1402 JUMP JUMPDEST SWAP5 POP PUSH2 0x190E PUSH1 0x20 DUP8 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E9 DUP9 DUP3 DUP10 ADD PUSH2 0x162C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1958 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1978 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x198C DUP2 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x19A4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x19B9 JUMPI PUSH2 0x19E8 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x19E8 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x19DF JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x19C6 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x19FC DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x149B JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A53 JUMPI PUSH2 0x1A53 PUSH2 0x1A2B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1AA0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1A81 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x479 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ABF JUMPI PUSH2 0x1ABF PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x1AD3 DUP2 PUSH2 0x1ACD DUP5 SLOAD PUSH2 0x1944 JUMP JUMPDEST DUP5 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1B08 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1AF0 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B37 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1B18 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1B55 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x38B JUMPI PUSH2 0x38B PUSH2 0x1A2B JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x38B JUMPI PUSH2 0x38B PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B9E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1BB0 DUP2 DUP6 PUSH2 0x17B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BF3 SWAP1 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x147B DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1C47 SWAP1 DUP4 ADD DUP7 PUSH2 0x17B6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1C59 DUP2 DUP7 PUSH2 0x17B6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1C6D DUP2 DUP6 PUSH2 0x14BF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xC6 POP SWAP11 PUSH15 0xE4267197C02201B35C206C942C012E 0xF7 PUSH0 0xB3 0xA5 MULMOD 0xB3 0xF9 0x5E 0xBA SWAP2 0xDA 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"383:5382:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:2;;;;;;:::i;:::-;;:::i;:::-;;;597:25:20;;;585:2;570:18;2245:132:2;;;;;;;;1378:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:20;;1177:22;1159:41;;1147:2;1132:18;1378:305:2;1019:187:20;1745:153:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4012:429:2:-;;;;;;:::i;:::-;;:::i;:::-;;2534:552;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4542:126:19:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;7201:4:20;7243:3;7232:9;7228:19;7220:27;;7280:6;7274:13;7263:9;7256:32;7344:4;7336:6;7332:17;7326:24;7319:4;7308:9;7304:20;7297:54;7407:4;7399:6;7395:17;7389:24;7382:4;7371:9;7367:20;7360:54;7470:4;7462:6;7458:17;7452:24;7445:4;7434:9;7430:20;7423:54;7533:4;7525:6;7521:17;7515:24;7508:4;7497:9;7493:20;7486:54;7596:4;7588:6;7584:17;7578:24;7571:4;7560:9;7556:20;7549:54;7659:4;7651:6;7647:17;7641:24;7634:4;7623:9;7619:20;7612:54;7051:621;;;;;2009:1268:19;;;;;;:::i;:::-;;:::i;1520:104::-;;;;;;:::i;:::-;;:::i;4102:273::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;8278:51:20;;8266:2;8251:18;1638:85:0;8132:203:20;3154:144:2;;;;;;:::i;:::-;;:::i;3411:533:19:-;;;;;;:::i;:::-;;:::i;688:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9007:25:20;;;9063:2;9048:18;;9041:34;;;;9091:18;;;9084:34;;;;9149:2;9134:18;;9127:34;;;;9192:3;9177:19;;9170:35;9236:3;9221:19;;9214:35;9280:3;9265:19;;9258:35;8994:3;8979:19;688:50:19;8692:607:20;3365:157:2;;;;;;:::i;:::-;;:::i;480:47:19:-;;526:1;480:47;;3589:351:2;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2245:132:2:-;2322:7;2348:13;;;;;;;;;;;-1:-1:-1;;;;;2348:22:2;;;;;;;;;;2245:132;;;;;:::o;1378:305::-;1480:4;-1:-1:-1;;;;;;1515:41:2;;-1:-1:-1;;;1515:41:2;;:109;;-1:-1:-1;;;;;;;1572:52:2;;-1:-1:-1;;;1572:52:2;1515:109;:161;;;-1:-1:-1;;;;;;;;;;862:40:14;;;1640:36:2;763:146:14;1745:153:19;1801:13;1857:7;1866:14;:3;:12;:14::i;:::-;1840:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1826:65;;1745:153;;;:::o;4012:429:2:-;735:10:9;-1:-1:-1;;;;;4249:14:2;;;;;;;:49;;;4268:30;4285:4;4291:6;4268:16;:30::i;:::-;4267:31;4249:49;4245:129;;;4321:42;;-1:-1:-1;;;4321:42:2;;-1:-1:-1;;;;;12113:15:20;;;4321:42:2;;;12095:34:20;12165:15;;12145:18;;;12138:43;12030:18;;4321:42:2;;;;;;;;4245:129;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;2534:552::-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:10;;2780:15;;2742:54;;-1:-1:-1;;;2742:54:2;;;;;12366:25:20;;;;12407:18;;;12400:34;12339:18;;2742:54:2;12192:248:20;2686:121:2;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2850:30:2;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;16302:4:7;16293:14;;;16273:35;;;16267:42;2970:68:2;;16302:4:7;16293:14;;;16273:35;;;16267:42;2245:132:2;:::i;2970:68::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2932:3;;;:::i;:::-;;;2891:158;;;-1:-1:-1;3066:13:2;2534:552;-1:-1:-1;;;2534:552:2:o;4542:126:19:-;4605:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4605:18:19;-1:-1:-1;;;;;;4642:19:19;;;;;:11;:19;;;;;;;;;4635:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4542:126::o;2009:1268::-;2163:11;2177:25;2187:6;2177:25;;;;;;;;;;;;;-1:-1:-1;;;2177:25:19;;;:9;:25::i;:::-;2163:39;;2212:18;2233:33;2243:6;2233:33;;;;;;;;;;;;;-1:-1:-1;;;2233:33:19;;;:9;:33::i;:::-;2212:54;;2276:14;2293:28;2303:6;2293:28;;;;;;;;;;;;;-1:-1:-1;;;2293:28:19;;;:9;:28::i;:::-;2276:45;;2331:17;2351:32;2361:6;2351:32;;;;;;;;;;;;;-1:-1:-1;;;2351:32:19;;;:9;:32::i;:::-;2331:52;;2393:15;2411:29;2421:6;2411:29;;;;;;;;;;;;;-1:-1:-1;;;2411:29:19;;;:9;:29::i;:::-;2393:47;;2450:19;2472:33;2482:6;2472:33;;;;;;;;;;;;;-1:-1:-1;;;2472:33:19;;;:9;:33::i;:::-;2450:55;;2580:6;2576:499;;;2614:10;2602:23;;;;:11;:23;;;;;:36;;;;;;:::i;:::-;;;;;;2576:499;;;2659:13;2655:420;;;2700:10;2688:23;;;;:11;:23;;;;;:36;;:38;;;;;;:::i;2655:420::-;2747:9;2743:332;;;2784:10;2772:23;;;;:11;:23;;;;;:32;;:34;;;;;;:::i;2743:332::-;2827:12;2823:252;;;2867:10;2855:23;;;;:11;:23;;;;;:35;;:37;;;;;;:::i;2823:252::-;2913:10;2909:166;;;2951:10;2939:23;;;;:11;:23;;;;;:33;;:35;;;;;;:::i;2909:166::-;2995:14;2991:84;;;3037:10;3025:23;;;;:11;:23;;;;;:37;;:39;;;;;;:::i;:::-;;;;;;2991:84;3145:10;3133:23;;;;:11;:23;;;;;;;;;3170:15;3133:34;;:52;3238:32;;;;;3263:6;;3238:32;:::i;:::-;;;;;;;;2059:1218;;;;;;2009:1268;:::o;1520:104::-;1531:13:0;:11;:13::i;:::-;1596:7:19::1;:21;1606:11:::0;1596:7;:21:::1;:::i;:::-;;1520:104:::0;:::o;4102:273::-;1531:13:0;:11;:13::i;:::-;4200:11:19::1;::::0;;;;;4182:15:::1;4221:13;4200:11:::0;4221:13:::1;:::i;:::-;;;;;;4253:30;4259:2;4263:7;4272:6;4253:30;;;;;;;;;;;::::0;:5:::1;:30::i;:::-;4356:2;-1:-1:-1::0;;;;;4343:25:19::1;;4360:7;4343:25;;;;597::20::0;;585:2;570:18;;451:177;4343:25:19::1;;;;;;;;4172:203;4102:273:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3154:144:2:-;3239:52;735:10:9;3272:8:2;3282;3239:18;:52::i;3411:533:19:-;1710:6:0;;-1:-1:-1;;;;;1710:6:0;3556:10:19;:21;;:45;;-1:-1:-1;3581:10:19;-1:-1:-1;;;;;3581:20:19;;;3556:45;3548:87;;;;-1:-1:-1;;;3548:87:19;;15129:2:20;3548:87:19;;;15111:21:20;15168:2;15148:18;;;15141:30;15207:31;15187:18;;;15180:59;15256:18;;3548:87:19;14927:353:20;3548:87:19;3692:41;3698:6;526:1;3727;3692:41;;;;;;;;;;;;:5;:41::i;:::-;-1:-1:-1;;;;;3801:19:19;;;;;;:11;:19;;;;;:33;;:35;;;;;;:::i;:::-;;;;;;3909:6;-1:-1:-1;;;;;3896:41:19;;526:1;3896:41;;;;597:25:20;;585:2;570:18;;451:177;3896:41:19;;;;;;;;3411:533;:::o;3365:157:2:-;-1:-1:-1;;;;;3478:27:2;;;3455:4;3478:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3365:157::o;3589:351::-;735:10:9;-1:-1:-1;;;;;3755:14:2;;;;;;;:49;;;3774:30;3791:4;3797:6;3774:16;:30::i;:::-;3773:31;3755:49;3751:129;;;3827:42;;-1:-1:-1;;;3827:42:2;;-1:-1:-1;;;;;12113:15:20;;;3827:42:2;;;12095:34:20;12165:15;;12145:18;;;12138:43;12030:18;;3827:42:2;11883:304:20;3751:129:2;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;8278:51:20::0;8251:18;;2672:31:0::1;8132:203:20::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;987:632:13:-;1043:13;1092:14;1109:17;1120:5;1109:10;:17::i;:::-;1129:1;1109:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1167:18:13;-1:-1:-1;1144:41:13;-1:-1:-1;1274:28:13;;;1290:2;1274:28;1329:247;-1:-1:-1;;1360:5:13;-1:-1:-1;;;1459:2:13;1448:14;;1443:32;1360:5;1430:46;1520:2;1511:11;;;-1:-1:-1;1540:21:13;1329:247;1540:21;-1:-1:-1;1596:6:13;987:632;-1:-1:-1;;;987:632:13:o;9023:445:2:-;-1:-1:-1;;;;;9216:16:2;;9212:88;;9255:34;;-1:-1:-1;;;9255:34:2;;9286:1;9255:34;;;8278:51:20;8251:18;;9255:34:2;8132:203:20;9212:88:2;-1:-1:-1;;;;;9313:18:2;;9309:88;;9354:32;;-1:-1:-1;;;9354:32:2;;9383:1;9354:32;;;8278:51:20;8251:18;;9354:32:2;8132:203:20;9309:88:2;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;4903:860:19:-;5218:18;;5197;;4991:4;;5040:6;;5090:9;;-1:-1:-1;5193:82:19;;;5259:5;5252:12;;;;;;5193:82;5339:6;5334:392;5377:11;:18;5356:11;:18;:39;;;;:::i;:::-;5351:1;:44;5334:392;;5429:4;5416:10;5447:201;5468:11;:18;5464:1;:22;5447:201;;;5537:11;5549:1;5537:14;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;5537:14:19;5515:11;5527:5;5531:1;5527;:5;:::i;:::-;5515:18;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;5515:18:19;:36;5511:123;;5583:5;5575:13;;5610:5;;5511:123;5488:3;;;;:::i;:::-;;;;5447:201;;;;5665:5;5661:55;;;5697:4;5690:11;;;;;;;;5661:55;-1:-1:-1;5397:3:19;;;;:::i;:::-;;;;5334:392;;;-1:-1:-1;5751:5:19;;4903:860;-1:-1:-1;;;;;4903:860:19:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:9;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;8278:51:20;8251:18;;1901:40:0;8132:203:20;10754:346:2;-1:-1:-1;;;;;10850:16:2;;10846:88;;10889:34;;-1:-1:-1;;;10889:34:2;;10920:1;10889:34;;;8278:51:20;8251:18;;10889:34:2;8132:203:20;10846:88:2;13974:4;13968:11;;14044:1;14029:17;;;14175:4;14163:17;;14156:35;;;14292:17;;;14322;;;13815:23;14359:17;;14352:35;;;14495:17;;;14482:31;;;13968:11;11032:61;-1:-1:-1;11071:2:2;13968:11;14292:17;11088:4;11032:26;:61::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;13276:315:2:-;-1:-1:-1;;;;;13383:22:2;;13379:94;;13428:34;;-1:-1:-1;;;13428:34:2;;13459:1;13428:34;;;8278:51:20;8251:18;;13428:34:2;8132:203:20;13379:94:2;-1:-1:-1;;;;;13482:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13482:46:2;;;;;;;;;;13543:41;;1159::20;;;13543::2;;1132:18:20;13543:41:2;;;;;;;13276:315;;;:::o;8159:463::-;-1:-1:-1;;;;;8281:16:2;;8277:88;;8320:34;;-1:-1:-1;;;8320:34:2;;8351:1;8320:34;;;8278:51:20;8251:18;;8320:34:2;8132:203:20;8277:88:2;-1:-1:-1;;;;;8378:18:2;;8374:88;;8419:32;;-1:-1:-1;;;8419:32:2;;8448:1;8419:32;;;8278:51:20;8251:18;;8419:32:2;8132:203:20;8374:88:2;13974:4;13968:11;;14044:1;14029:17;;;14175:4;14163:17;;14156:35;;;14292:17;;;14322;;;13815:23;14359:17;;14352:35;;;14495:17;;;14482:31;;;13968:11;8560:55;8587:4;8593:2;13968:11;14292:17;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;25316:916:16:-;25369:7;;-1:-1:-1;;;25444:17:16;;25440:103;;-1:-1:-1;;;25481:17:16;;;-1:-1:-1;25526:2:16;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:16;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:16;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:16;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:16;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:16;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:16:o;7002:700:2:-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;-1:-1:-1;;;;;7247:16:2;;;7243:453;;7328:10;;735::9;;7342:1:2;7328:15;7324:362;;16302:4:7;16273:35;;;16267:42;16273:35;;;16267:42;7481:72:2;7517:8;7527:4;7533:2;16267:42:7;;7548:4:2;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;5142:1281::-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:10;;5351:13;;5313:52;;-1:-1:-1;;;5313:52:2;;;;;12366:25:20;;;;12407:18;;;12400:34;12339:18;;5313:52:2;12192:248:20;5259:117:2;735:10:9;5386:16:2;5428:691;5452:3;:10;5448:1;:14;5428:691;;;16302:4:7;16293:14;;;16273:35;;;;;16267:42;16273:35;;;;;;16267:42;-1:-1:-1;;;;;5598:18:2;;;5594:420;;5636:19;5658:13;;;;;;;;;;;-1:-1:-1;;;;;5658:19:2;;;;;;;;;;5699;;;5695:129;;;5749:56;;-1:-1:-1;;;5749:56:2;;-1:-1:-1;;;;;15929:32:20;;5749:56:2;;;15911:51:20;15978:18;;;15971:34;;;16021:18;;;16014:34;;;16064:18;;;16057:34;;;15883:19;;5749:56:2;15680:417:20;5695:129:2;5940:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5940:19:2;;;;;;;;;5962;;;;5940:41;;5594:420;-1:-1:-1;;;;;6032:16:2;;;6028:81;;6068:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6068:17:2;;;;;;;;;:26;;6089:5;;6068:9;:26;;6089:5;;6068:26;:::i;:::-;;;;-1:-1:-1;;6028:81:2;5469:650;;5464:3;;;;:::i;:::-;;;5428:691;;;;6133:3;:10;6147:1;6133:15;6129:288;;16302:4:7;16273:35;;16267:42;6164:10:2;;16302:4:7;16273:35;;16267:42;6164:38:2;;-1:-1:-1;6310:2:2;-1:-1:-1;;;;;6279:45:2;6304:4;-1:-1:-1;;;;;6279:45:2;6294:8;-1:-1:-1;;;;;6279:45:2;;6314:2;6318:5;6279:45;;;;;;12366:25:20;;;12422:2;12407:18;;12400:34;12354:2;12339:18;;12192:248;6279:45:2;;;;;;;;6150:185;;6129:288;;;6390:2;-1:-1:-1;;;;;6360:46:2;6384:4;-1:-1:-1;;;;;6360:46:2;6374:8;-1:-1:-1;;;;;6360:46:2;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;5249:1174;5142:1281;;;;:::o;998:959:6:-;-1:-1:-1;;;;;1197:14:6;;;:18;1193:758;;1235:71;;-1:-1:-1;;;1235:71:6;;-1:-1:-1;;;;;1235:38:6;;;;;:71;;1274:8;;1284:4;;1290:2;;1294:5;;1301:4;;1235:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1235:71:6;;;;;;;;-1:-1:-1;;1235:71:6;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:6;:13;1622:1;1605:18;1601:326;;1710:41;;-1:-1:-1;;;1710:41:6;;-1:-1:-1;;;;;8296:32:20;;1710:41:6;;;8278:51:20;8251:18;;1710:41:6;8132:203:20;1601:326:6;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;-1:-1:-1;;;;;;1355:55:6;;-1:-1:-1;;;1355:55:6;1351:189;;1480:41;;-1:-1:-1;;;1480:41:6;;-1:-1:-1;;;;;8296:32:20;;1480:41:6;;;8278:51:20;8251:18;;1480:41:6;8132:203:20;2505:1026:6;-1:-1:-1;;;;;2729:14:6;;;:18;2725:800;;2767:78;;-1:-1:-1;;;2767:78:6;;-1:-1:-1;;;;;2767:43:6;;;;;:78;;2811:8;;2821:4;;2827:3;;2832:6;;2840:4;;2767:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2767:78:6;;;;;;;;-1:-1:-1;;2767:78:6;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2924:60:6;;-1:-1:-1;;;2924:60:6;2920:194;;3054:41;;-1:-1:-1;;;3054:41:6;;-1:-1:-1;;;;;8296:32:20;;3054:41:6;;;8278:51:20;8251:18;;3054:41:6;8132:203:20;14:173;82:20;;-1:-1:-1;;;;;131:31:20;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:20:o;633:131::-;-1:-1:-1;;;;;;707:32:20;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:20:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:20;;1211:180;-1:-1:-1;1211:180:20:o;1396:250::-;1481:1;1491:113;1505:6;1502:1;1499:13;1491:113;;;1581:11;;;1575:18;1562:11;;;1555:39;1527:2;1520:10;1491:113;;;-1:-1:-1;;1638:1:20;1620:16;;1613:27;1396:250::o;1651:271::-;1693:3;1731:5;1725:12;1758:6;1753:3;1746:19;1774:76;1843:6;1836:4;1831:3;1827:14;1820:4;1813:5;1809:16;1774:76;:::i;:::-;1904:2;1883:15;-1:-1:-1;;1879:29:20;1870:39;;;;1911:4;1866:50;;1651:271;-1:-1:-1;;1651:271:20:o;1927:220::-;2076:2;2065:9;2058:21;2039:4;2096:45;2137:2;2126:9;2122:18;2114:6;2096:45;:::i;2152:127::-;2213:10;2208:3;2204:20;2201:1;2194:31;2244:4;2241:1;2234:15;2268:4;2265:1;2258:15;2284:275;2355:2;2349:9;2420:2;2401:13;;-1:-1:-1;;2397:27:20;2385:40;;2455:18;2440:34;;2476:22;;;2437:62;2434:88;;;2502:18;;:::i;:::-;2538:2;2531:22;2284:275;;-1:-1:-1;2284:275:20:o;2564:183::-;2624:4;2657:18;2649:6;2646:30;2643:56;;;2679:18;;:::i;:::-;-1:-1:-1;2724:1:20;2720:14;2736:4;2716:25;;2564:183::o;2752:662::-;2806:5;2859:3;2852:4;2844:6;2840:17;2836:27;2826:55;;2877:1;2874;2867:12;2826:55;2913:6;2900:20;2939:4;2963:60;2979:43;3019:2;2979:43;:::i;:::-;2963:60;:::i;:::-;3057:15;;;3143:1;3139:10;;;;3127:23;;3123:32;;;3088:12;;;;3167:15;;;3164:35;;;3195:1;3192;3185:12;3164:35;3231:2;3223:6;3219:15;3243:142;3259:6;3254:3;3251:15;3243:142;;;3325:17;;3313:30;;3363:12;;;;3276;;3243:142;;;-1:-1:-1;3403:5:20;2752:662;-1:-1:-1;;;;;;2752:662:20:o;3419:406::-;3483:5;3517:18;3509:6;3506:30;3503:56;;;3539:18;;:::i;:::-;3577:57;3622:2;3601:15;;-1:-1:-1;;3597:29:20;3628:4;3593:40;3577:57;:::i;:::-;3568:66;;3657:6;3650:5;3643:21;3697:3;3688:6;3683:3;3679:16;3676:25;3673:45;;;3714:1;3711;3704:12;3673:45;3763:6;3758:3;3751:4;3744:5;3740:16;3727:43;3817:1;3810:4;3801:6;3794:5;3790:18;3786:29;3779:40;3419:406;;;;;:::o;3830:220::-;3872:5;3925:3;3918:4;3910:6;3906:17;3902:27;3892:55;;3943:1;3940;3933:12;3892:55;3965:79;4040:3;4031:6;4018:20;4011:4;4003:6;3999:17;3965:79;:::i;4055:943::-;4209:6;4217;4225;4233;4241;4294:3;4282:9;4273:7;4269:23;4265:33;4262:53;;;4311:1;4308;4301:12;4262:53;4334:29;4353:9;4334:29;:::i;:::-;4324:39;;4382:38;4416:2;4405:9;4401:18;4382:38;:::i;:::-;4372:48;;4471:2;4460:9;4456:18;4443:32;4494:18;4535:2;4527:6;4524:14;4521:34;;;4551:1;4548;4541:12;4521:34;4574:61;4627:7;4618:6;4607:9;4603:22;4574:61;:::i;:::-;4564:71;;4688:2;4677:9;4673:18;4660:32;4644:48;;4717:2;4707:8;4704:16;4701:36;;;4733:1;4730;4723:12;4701:36;4756:63;4811:7;4800:8;4789:9;4785:24;4756:63;:::i;:::-;4746:73;;4872:3;4861:9;4857:19;4844:33;4828:49;;4902:2;4892:8;4889:16;4886:36;;;4918:1;4915;4908:12;4886:36;;4941:51;4984:7;4973:8;4962:9;4958:24;4941:51;:::i;:::-;4931:61;;;4055:943;;;;;;;;:::o;5003:1146::-;5121:6;5129;5182:2;5170:9;5161:7;5157:23;5153:32;5150:52;;;5198:1;5195;5188:12;5150:52;5238:9;5225:23;5267:18;5308:2;5300:6;5297:14;5294:34;;;5324:1;5321;5314:12;5294:34;5362:6;5351:9;5347:22;5337:32;;5407:7;5400:4;5396:2;5392:13;5388:27;5378:55;;5429:1;5426;5419:12;5378:55;5465:2;5452:16;5487:4;5511:60;5527:43;5567:2;5527:43;:::i;5511:60::-;5605:15;;;5687:1;5683:10;;;;5675:19;;5671:28;;;5636:12;;;;5711:19;;;5708:39;;;5743:1;5740;5733:12;5708:39;5767:11;;;;5787:148;5803:6;5798:3;5795:15;5787:148;;;5869:23;5888:3;5869:23;:::i;:::-;5857:36;;5820:12;;;;5913;;;;5787:148;;;5954:5;-1:-1:-1;;5997:18:20;;5984:32;;-1:-1:-1;;6028:16:20;;;6025:36;;;6057:1;6054;6047:12;6025:36;;6080:63;6135:7;6124:8;6113:9;6109:24;6080:63;:::i;:::-;6070:73;;;5003:1146;;;;;:::o;6154:435::-;6207:3;6245:5;6239:12;6272:6;6267:3;6260:19;6298:4;6327:2;6322:3;6318:12;6311:19;;6364:2;6357:5;6353:14;6385:1;6395:169;6409:6;6406:1;6403:13;6395:169;;;6470:13;;6458:26;;6504:12;;;;6539:15;;;;6431:1;6424:9;6395:169;;;-1:-1:-1;6580:3:20;;6154:435;-1:-1:-1;;;;;6154:435:20:o;6594:261::-;6773:2;6762:9;6755:21;6736:4;6793:56;6845:2;6834:9;6830:18;6822:6;6793:56;:::i;6860:186::-;6919:6;6972:2;6960:9;6951:7;6947:23;6943:32;6940:52;;;6988:1;6985;6978:12;6940:52;7011:29;7030:9;7011:29;:::i;7677:450::-;7746:6;7799:2;7787:9;7778:7;7774:23;7770:32;7767:52;;;7815:1;7812;7805:12;7767:52;7855:9;7842:23;7888:18;7880:6;7877:30;7874:50;;;7920:1;7917;7910:12;7874:50;7943:22;;7996:4;7988:13;;7984:27;-1:-1:-1;7974:55:20;;8025:1;8022;8015:12;7974:55;8048:73;8113:7;8108:2;8095:16;8090:2;8086;8082:11;8048:73;:::i;:::-;8038:83;7677:450;-1:-1:-1;;;;7677:450:20:o;8340:347::-;8405:6;8413;8466:2;8454:9;8445:7;8441:23;8437:32;8434:52;;;8482:1;8479;8472:12;8434:52;8505:29;8524:9;8505:29;:::i;:::-;8495:39;;8584:2;8573:9;8569:18;8556:32;8631:5;8624:13;8617:21;8610:5;8607:32;8597:60;;8653:1;8650;8643:12;8597:60;8676:5;8666:15;;;8340:347;;;;;:::o;9304:260::-;9372:6;9380;9433:2;9421:9;9412:7;9408:23;9404:32;9401:52;;;9449:1;9446;9439:12;9401:52;9472:29;9491:9;9472:29;:::i;:::-;9462:39;;9520:38;9554:2;9543:9;9539:18;9520:38;:::i;:::-;9510:48;;9304:260;;;;;:::o;9569:606::-;9673:6;9681;9689;9697;9705;9758:3;9746:9;9737:7;9733:23;9729:33;9726:53;;;9775:1;9772;9765:12;9726:53;9798:29;9817:9;9798:29;:::i;:::-;9788:39;;9846:38;9880:2;9869:9;9865:18;9846:38;:::i;:::-;9836:48;;9931:2;9920:9;9916:18;9903:32;9893:42;;9982:2;9971:9;9967:18;9954:32;9944:42;;10037:3;10026:9;10022:19;10009:33;10065:18;10057:6;10054:30;10051:50;;;10097:1;10094;10087:12;10051:50;10120:49;10161:7;10152:6;10141:9;10137:22;10120:49;:::i;10180:380::-;10259:1;10255:12;;;;10302;;;10323:61;;10377:4;10369:6;10365:17;10355:27;;10323:61;10430:2;10422:6;10419:14;10399:18;10396:38;10393:161;;10476:10;10471:3;10467:20;10464:1;10457:31;10511:4;10508:1;10501:15;10539:4;10536:1;10529:15;10393:161;;10180:380;;;:::o;10691:1187::-;10968:3;10997:1;11030:6;11024:13;11060:36;11086:9;11060:36;:::i;:::-;11115:1;11132:18;;;11159:133;;;;11306:1;11301:356;;;;11125:532;;11159:133;-1:-1:-1;;11192:24:20;;11180:37;;11265:14;;11258:22;11246:35;;11237:45;;;-1:-1:-1;11159:133:20;;11301:356;11332:6;11329:1;11322:17;11362:4;11407:2;11404:1;11394:16;11432:1;11446:165;11460:6;11457:1;11454:13;11446:165;;;11538:14;;11525:11;;;11518:35;11581:16;;;;11475:10;;11446:165;;;11450:3;;;11640:6;11635:3;11631:16;11624:23;;11125:532;;;;;11688:6;11682:13;11704:68;11763:8;11758:3;11751:4;11743:6;11739:17;11704:68;:::i;:::-;-1:-1:-1;;;11794:18:20;;11821:22;;;11870:1;11859:13;;10691:1187;-1:-1:-1;;;;10691:1187:20:o;12445:127::-;12506:10;12501:3;12497:20;12494:1;12487:31;12537:4;12534:1;12527:15;12561:4;12558:1;12551:15;12577:127;12638:10;12633:3;12629:20;12626:1;12619:31;12669:4;12666:1;12659:15;12693:4;12690:1;12683:15;12709:135;12748:3;12769:17;;;12766:43;;12789:18;;:::i;:::-;-1:-1:-1;12836:1:20;12825:13;;12709:135::o;12849:545::-;12951:2;12946:3;12943:11;12940:448;;;12987:1;13012:5;13008:2;13001:17;13057:4;13053:2;13043:19;13127:2;13115:10;13111:19;13108:1;13104:27;13098:4;13094:38;13163:4;13151:10;13148:20;13145:47;;;-1:-1:-1;13186:4:20;13145:47;13241:2;13236:3;13232:12;13229:1;13225:20;13219:4;13215:31;13205:41;;13296:82;13314:2;13307:5;13304:13;13296:82;;;13359:17;;;13340:1;13329:13;13296:82;;12940:448;12849:545;;;:::o;13570:1352::-;13696:3;13690:10;13723:18;13715:6;13712:30;13709:56;;;13745:18;;:::i;:::-;13774:97;13864:6;13824:38;13856:4;13850:11;13824:38;:::i;:::-;13818:4;13774:97;:::i;:::-;13926:4;;13990:2;13979:14;;14007:1;14002:663;;;;14709:1;14726:6;14723:89;;;-1:-1:-1;14778:19:20;;;14772:26;14723:89;-1:-1:-1;;13527:1:20;13523:11;;;13519:24;13515:29;13505:40;13551:1;13547:11;;;13502:57;14825:81;;13972:944;;14002:663;10638:1;10631:14;;;10675:4;10662:18;;-1:-1:-1;;14038:20:20;;;14156:236;14170:7;14167:1;14164:14;14156:236;;;14259:19;;;14253:26;14238:42;;14351:27;;;;14319:1;14307:14;;;;14186:19;;14156:236;;;14160:3;14420:6;14411:7;14408:19;14405:201;;;14481:19;;;14475:26;-1:-1:-1;;14564:1:20;14560:14;;;14576:3;14556:24;14552:37;14548:42;14533:58;14518:74;;14405:201;-1:-1:-1;;;;;14652:1:20;14636:14;;;14632:22;14619:36;;-1:-1:-1;13570:1352:20:o;15417:128::-;15484:9;;;15505:11;;;15502:37;;;15519:18;;:::i;15550:125::-;15615:9;;;15636:10;;;15633:36;;;15649:18;;:::i;16102:465::-;16359:2;16348:9;16341:21;16322:4;16385:56;16437:2;16426:9;16422:18;16414:6;16385:56;:::i;:::-;16489:9;16481:6;16477:22;16472:2;16461:9;16457:18;16450:50;16517:44;16554:6;16546;16517:44;:::i;:::-;16509:52;16102:465;-1:-1:-1;;;;;16102:465:20:o;16572:561::-;-1:-1:-1;;;;;16869:15:20;;;16851:34;;16921:15;;16916:2;16901:18;;16894:43;16968:2;16953:18;;16946:34;;;17011:2;16996:18;;16989:34;;;16831:3;17054;17039:19;;17032:32;;;16794:4;;17081:46;;17107:19;;17099:6;17081:46;:::i;:::-;17073:54;16572:561;-1:-1:-1;;;;;;;16572:561:20:o;17138:249::-;17207:6;17260:2;17248:9;17239:7;17235:23;17231:32;17228:52;;;17276:1;17273;17266:12;17228:52;17308:9;17302:16;17327:30;17351:5;17327:30;:::i;17392:827::-;-1:-1:-1;;;;;17789:15:20;;;17771:34;;17841:15;;17836:2;17821:18;;17814:43;17751:3;17888:2;17873:18;;17866:31;;;17714:4;;17920:57;;17957:19;;17949:6;17920:57;:::i;:::-;18025:9;18017:6;18013:22;18008:2;17997:9;17993:18;17986:50;18059:44;18096:6;18088;18059:44;:::i;:::-;18045:58;;18152:9;18144:6;18140:22;18134:3;18123:9;18119:19;18112:51;18180:33;18206:6;18198;18180:33;:::i;:::-;18172:41;17392:827;-1:-1:-1;;;;;;;;17392:827:20:o"},"methodIdentifiers":{"CHAMPIONSHIP_TROPHY()":"efb02223","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","getPlayerStats(address)":"4fd66eae","isApprovedForAll(address,address)":"e985e9c5","logAction(string)":"522020a8","mintNewTrophy(address,uint256)":"662b1c58","mintTrophy(address)":"c9053254","owner()":"8da5cb5b","playerStats(address)":"cdafbbb6","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"}],\"name\":\"ActionLogged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TrophyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHAMPIONSHIP_TROPHY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalMoves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"specialMoves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grapples\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ropeBounces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"knockouts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"championships\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastAction\",\"type\":\"uint256\"}],\"internalType\":\"struct WWEMonad.PlayerStats\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"}],\"name\":\"logAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintNewTrophy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"mintTrophy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalMoves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"specialMoves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grapples\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ropeBounces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"knockouts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"championships\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastAction\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for WWE wrestling game on Monad blockchain Records player actions and mints championship trophies as NFTs\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"Initialize the contract with a base URI for metadata\"},\"getPlayerStats(address)\":{\"details\":\"Get all stats for a player\",\"params\":{\"player\":\"Address of the player\"},\"returns\":{\"_0\":\"PlayerStats structure with all player stats\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"logAction(string)\":{\"details\":\"Log a player action\",\"params\":{\"action\":\"JSON string with action details\"}},\"mintNewTrophy(address,uint256)\":{\"details\":\"Mint a new type of trophy (only owner)\",\"params\":{\"amount\":\"Number of tokens to mint\",\"to\":\"Recipient address\"}},\"mintTrophy(address)\":{\"details\":\"Mint a championship trophy for a player\",\"params\":{\"winner\":\"Address of the championship winner\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setBaseURI(string)\":{\"details\":\"Set the base URI for token metadata\",\"params\":{\"_newBaseURI\":\"New base URI\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"Get the URI for a token\",\"params\":{\"_id\":\"Token ID\"},\"returns\":{\"_0\":\"Token URI string\"}}},\"title\":\"WWEMonad\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WWEMonad.sol\":\"WWEMonad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/WWEMonad.sol\":{\"keccak256\":\"0xf06f95a14b5b56c306825bb30cc710a83ec0a22da0c78b35a3c5020881d3489f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737f5c34c0ec78de7eaada1c4b80398810ad3ad1272eb19a489c6b8a02e3e2c4\",\"dweb:/ipfs/QmSEE5rb3URdDzFFzou2mitxfzy5G9svoiq19pASD8WTH7\"]}},\"version\":1}"}}}}}